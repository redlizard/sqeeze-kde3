--- a/kcontrol/style/kcmstyle.cpp
+++ b/kcontrol/style/kcmstyle.cpp
@@ -229,6 +229,14 @@
 	containerLayout->addWidget( lblTooltipEffect, 1, 0 );
 	containerLayout->addWidget( comboTooltipEffect, 1, 1 );
 
+	comboRubberbandEffect = new QComboBox( FALSE, containerFrame );
+	comboRubberbandEffect->insertItem( i18n("Disable") );
+	comboRubberbandEffect->insertItem( i18n("Make translucent") );
+	lblRubberbandEffect = new QLabel( i18n("&Rubberband effect:"), containerFrame );
+	lblRubberbandEffect->setBuddy( comboRubberbandEffect );
+	containerLayout->addWidget( lblRubberbandEffect, 2, 0 );
+	containerLayout->addWidget( comboRubberbandEffect, 2, 1 );
+	
 	comboMenuEffect = new QComboBox( FALSE, containerFrame );
 	comboMenuEffect->insertItem( i18n("Disable") );
 	comboMenuEffect->insertItem( i18n("Animate") );
@@ -236,8 +244,8 @@
 	comboMenuEffect->insertItem( i18n("Make Translucent") );
 	lblMenuEffect = new QLabel( i18n("&Menu effect:"), containerFrame );
 	lblMenuEffect->setBuddy( comboMenuEffect );
-	containerLayout->addWidget( lblMenuEffect, 2, 0 );
-	containerLayout->addWidget( comboMenuEffect, 2, 1 );
+	containerLayout->addWidget( lblMenuEffect, 3, 0 );
+	containerLayout->addWidget( comboMenuEffect, 3, 1 );
 
 	comboMenuHandle = new QComboBox( FALSE, containerFrame );
 	comboMenuHandle->insertItem( i18n("Disable") );
@@ -245,11 +253,11 @@
 //	comboMenuHandle->insertItem( i18n("Enable") );
 	lblMenuHandle = new QLabel( i18n("Me&nu tear-off handles:"), containerFrame );
 	lblMenuHandle->setBuddy( comboMenuHandle );
-	containerLayout->addWidget( lblMenuHandle, 3, 0 );
-	containerLayout->addWidget( comboMenuHandle, 3, 1 );
+	containerLayout->addWidget( lblMenuHandle, 4, 0 );
+	containerLayout->addWidget( comboMenuHandle, 4, 1 );
 
 	cbMenuShadow = new QCheckBox( i18n("Menu &drop shadow"), containerFrame );
-	containerLayout->addWidget( cbMenuShadow, 4, 0 );
+	containerLayout->addWidget( cbMenuShadow, 5, 0 );
 
 	// Push the [label combo] to the left.
 	comboSpacer = new QSpacerItem( 20, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
@@ -359,6 +367,7 @@
 	connect( cbEnableEffects,     SIGNAL(toggled(bool)),    this, SLOT(setEffectsDirty()));
 	connect( cbEnableEffects,     SIGNAL(toggled(bool)),    this, SLOT(setStyleDirty()));
 	connect( comboTooltipEffect,  SIGNAL(activated(int)), this, SLOT(setEffectsDirty()));
+	connect( comboRubberbandEffect, SIGNAL(activated(int)),   this, SLOT(setStyleDirty()));
 	connect( comboComboEffect,    SIGNAL(activated(int)), this, SLOT(setEffectsDirty()));
 	connect( comboMenuEffect,     SIGNAL(activated(int)), this, SLOT(setStyleDirty()));
 	connect( comboMenuHandle,     SIGNAL(activated(int)), this, SLOT(setStyleDirty()));
@@ -556,6 +565,11 @@
 	item = comboTooltipEffect->currentItem();
 	config.writeEntry( "EffectAnimateTooltip", item == 1);
 	config.writeEntry( "EffectFadeTooltip", item == 2 );
+	item = comboRubberbandEffect->currentItem();
+	{
+		QSettings settings;	// Only for KStyle stuff
+		settings.writeEntry("/KStyle/Settings/SemiTransparentRubberband", item == 1);
+	}
 	item = comboMenuHandle->currentItem();
 	config.writeEntry( "InsertTearOffHandle", item );
 	item = comboMenuEffect->currentItem();
@@ -887,7 +901,11 @@
 		comboTooltipEffect->setCurrentItem( 2 );
 	else
 		comboTooltipEffect->setCurrentItem( 0 );
-
+		
+	QSettings settings;
+	bool semiTransparentRubberband = settings.readBoolEntry("/KStyle/Settings/SemiTransparentRubberband", false);
+	comboRubberbandEffect->setCurrentItem( semiTransparentRubberband ? 1 : 0 );
+	
 	if ( config.readBoolEntry( "EffectAnimateMenu", false) )
 		comboMenuEffect->setCurrentItem( 1 );
 	else if ( config.readBoolEntry( "EffectFadeMenu", false) )
@@ -898,7 +916,7 @@
 	comboMenuHandle->setCurrentItem(config.readNumEntry("InsertTearOffHandle", 0));
 
 	// KStyle Menu transparency and drop-shadow options...
-	QSettings settings;
+	
 	QString effectEngine = settings.readEntry("/KStyle/Settings/MenuTransparencyEngine", "Disabled");
 
 #ifdef HAVE_XRENDER
@@ -1027,6 +1045,8 @@
 	QWhatsThis::add( comboTooltipEffect, i18n( "<p><b>Disable: </b>do not use any tooltip effects.</p>\n"
 							"<p><b>Animate: </b>Do some animation.</p>\n"
 							"<b>Fade: </b>Fade in tooltips using alpha-blending.") );
+	QWhatsThis::add( comboRubberbandEffect, i18n( "<p><b>Disable: </b>do not use any rubberband effects.</p>\n"
+							"<b>Make Translucent: </b>Draw a translucent rubberband.") );
 	QWhatsThis::add( comboMenuEffect, i18n( "<p><b>Disable: </b>do not use any menu effects.</p>\n"
 							"<p><b>Animate: </b>Do some animation.</p>\n"
 							"<p><b>Fade: </b>Fade in menus using alpha-blending.</p>\n"
--- a/kcontrol/style/kcmstyle.h
+++ b/kcontrol/style/kcmstyle.h
@@ -126,11 +126,13 @@
 	QFrame* containerFrame;
 	QGridLayout* containerLayout;
 	QComboBox* comboTooltipEffect;
+	QComboBox* comboRubberbandEffect;
 	QComboBox* comboComboEffect;
 	QComboBox* comboMenuEffect;
 	QComboBox* comboMenuHandle;
 
 	QLabel* lblTooltipEffect;
+	QLabel* lblRubberbandEffect;
 	QLabel* lblComboEffect;
 	QLabel* lblMenuEffect;
 	QLabel* lblMenuHandle;
--- a/konqueror/listview/konq_listviewwidget.cc
+++ b/konqueror/listview/konq_listviewwidget.cc
@@ -405,9 +405,11 @@
 {
    if ( m_rubber )
    {
-      drawRubber();
-      delete m_rubber;
-      m_rubber = 0;
+
+      QRect r( m_rubber->normalize() );
+       delete m_rubber;
+       m_rubber = 0;
+      repaintContents( r, FALSE );
    }
 
    delete m_selected;
@@ -417,14 +419,15 @@
    KonqBaseListViewItem* item = isExecuteArea( vp ) ?
          static_cast<KonqBaseListViewItem*>( itemAt( vp ) ) : 0L;
 
-   if ( item )
+   if ( item ) {
       KListView::contentsMousePressEvent( e );
+      }
    else {
       if ( e->button() == LeftButton )
       {
-         if ( !( e->state() & ControlButton ) )
-            setSelected( itemAt( vp ), false );
          m_rubber = new QRect( e->x(), e->y(), 0, 0 );
+	  clearSelection();
+	 emit selectionChanged();
          m_fileTip->setItem( 0 );
       }
       if ( e->button() != RightButton )
@@ -440,9 +443,11 @@
 {
    if ( m_rubber )
    {
-      drawRubber();
+
+      QRect r( m_rubber->normalize() );
       delete m_rubber;
       m_rubber = 0;
+      repaintContents( r, FALSE );
    }
 
    if ( m_scrollTimer )
@@ -534,23 +539,21 @@
    KListView::leaveEvent( e );
 }
 
-void KonqBaseListViewWidget::drawRubber()
+void KonqBaseListViewWidget::drawRubber( QPainter *p )
 {
    if ( !m_rubber )
       return;
 
-   QPainter p;
-   p.begin( viewport() );
-   p.setRasterOp( NotROP );
-   p.setPen( QPen( color0, 1 ) );
-   p.setBrush( NoBrush );
+   p->setRasterOp( NotROP );
+   p->setPen( QPen( color0, 1 ) );
+   p->setBrush( NoBrush );
 
    QPoint pt( m_rubber->x(), m_rubber->y() );
    pt = contentsToViewport( pt );
-   style().drawPrimitive( QStyle::PE_FocusRect, &p,
+   style().drawPrimitive( QStyle::PE_RubberBand, p,
                           QRect( pt.x(), pt.y(), m_rubber->width(), m_rubber->height() ),
                           colorGroup(), QStyle::Style_Default, colorGroup().base() );
-   p.end();
+   
 }
 
 void KonqBaseListViewWidget::slotAutoScroll()
@@ -566,10 +569,12 @@
    if ( vc == m_rubber->bottomRight() )
       return;
 
+      QRect oldRubber = *m_rubber;
+      
    const int oldTop = m_rubber->normalize().top();
    const int oldBottom = m_rubber->normalize().bottom();
 
-   drawRubber();
+   
    m_rubber->setBottomRight( vc );
 
    QListViewItem *cur = itemAt( QPoint(0,0) );
@@ -577,12 +582,20 @@
    bool block = signalsBlocked();
    blockSignals( true );
 
+   QRect rr;
    QRect nr = m_rubber->normalize();
+   bool changed = FALSE;
+   
    if ( cur )
    {
-      QRect rect = itemRect( cur );
-      if ( !allColumnsShowFocus() )
+         QRect rect;
+      if ( allColumnsShowFocus() )
+          rect = itemRect( cur );
+      else {
+          rect = itemRect( cur );
           rect.setWidth( executeArea( cur ) );
+      }
+  
 
       rect = QRect( viewportToContents( rect.topLeft() ),
                     viewportToContents( rect.bottomRight() ) );
@@ -606,9 +619,26 @@
          if ( rect.intersects( nr ) )
          {
             if ( !cur->isSelected() && cur->isSelectable() )
+	    {
                setSelected( cur, true );
-         } else if ( !m_selected || !m_selected->contains( (KonqBaseListViewItem*)cur ) )
-            setSelected( cur, false );
+               changed = TRUE;
+               rr = rr.unite( itemRect( cur ) );
+	    }
+         } 
+	 else 
+	 {
+            if ( cur->isSelected() )
+	    {
+               changed = TRUE;
+               rr = rr.unite( itemRect( cur ) );
+	    }
+	    
+	    if ( !m_selected || !m_selected->contains( (KonqBaseListViewItem*)cur ) )
+	    {
+               setSelected( cur, false );
+	    }
+	 }
+ 
 
          cur = cur->itemBelow();
          if (cur && !allColumnsShowFocus())
@@ -625,9 +655,26 @@
          if ( rect.intersects( nr ) )
          {
             if ( !cur->isSelected() && cur->isSelectable() )
+	    {
                setSelected( cur, true );
-         } else if ( !m_selected || !m_selected->contains( (KonqBaseListViewItem*)cur ) )
-            setSelected( cur, false );
+               changed = TRUE;
+               rr = rr.unite( itemRect( cur ) );
+	    }
+	 }
+	 else 
+	 {
+            if ( cur->isSelected() )
+	    {
+               changed = TRUE;
+              rr = rr.unite( itemRect( cur ) );
+	    }
+
+            if ( !m_selected || !m_selected->contains( (KonqBaseListViewItem*)cur ) )
+	    {
+               setSelected( cur, false );
+	    }
+	 }
+	 
 
          cur = cur->itemAbove();
          if (cur && !allColumnsShowFocus())
@@ -639,7 +686,31 @@
    blockSignals( block );
    emit selectionChanged();
 
-   drawRubber();
+     QRect allRect = oldRubber.normalize();
+   if ( changed ) 
+   {
+       allRect |= rr.normalize();
+   }
+   allRect |= m_rubber->normalize();
+   QPoint point = contentsToViewport( allRect.topLeft() );
+   allRect = QRect( point.x(), point.y(), allRect.width(), allRect.height() );
+   allRect &= viewport()->rect();
+   allRect.addCoords( -2, -2, 2, 2 );
+
+   QPixmap backrubber( viewport()->rect().size() );
+   backrubber.fill( viewport(), viewport()->rect().topLeft() );
+
+   QPainter p( &backrubber ); 
+   p.save();
+   drawContentsOffset( &p, 
+      contentsX(), 
+      contentsY(), 
+      contentsX() + allRect.left(), contentsY() + allRect.top(), 
+      allRect.width(), allRect.height() );
+   p.restore();
+   drawRubber( &p );
+   p.end();
+   bitBlt( viewport(), allRect.topLeft(), &backrubber, allRect );
 
    const int scroll_margin = 40;
    ensureVisible( vc.x(), vc.y(), scroll_margin, scroll_margin );
@@ -669,9 +740,12 @@
 
 void KonqBaseListViewWidget::viewportPaintEvent( QPaintEvent *e )
 {
-   drawRubber();
+   
    KListView::viewportPaintEvent( e );
-   drawRubber();
+   
+   QPainter p( viewport() );
+   drawRubber( &p );
+   p.end();
 }
 
 void KonqBaseListViewWidget::viewportResizeEvent(QResizeEvent * e)
--- a/konqueror/listview/konq_listviewwidget.h
+++ b/konqueror/listview/konq_listviewwidget.h
@@ -206,7 +206,7 @@
    virtual void viewportPaintEvent( QPaintEvent *e );
    virtual void viewportResizeEvent( QResizeEvent *e );
 
-   virtual void drawRubber();
+   virtual void drawRubber( QPainter * );
    virtual void contentsMousePressEvent( QMouseEvent *e );
    virtual void contentsMouseReleaseEvent( QMouseEvent *e );
    virtual void contentsMouseMoveEvent( QMouseEvent *e );
@@ -246,7 +246,8 @@
    QColor m_itemColor;
 
    QRect *m_rubber;
-
+   QPixmap *m_backrubber;
+   
    bool m_bTopLevelComplete:1;
    bool m_showIcons:1;
    bool m_bCaseInsensitive:1;
--- a/kdesktop/kfileividesktop.cpp
+++ b/kdesktop/kfileividesktop.cpp
@@ -134,40 +134,11 @@
   return false;
 }
 
-void KFileIVIDesktop::paintFocus( QPainter *p, const QColorGroup &cg )
-{
-    if ( !iconView() )
-        return;
-
-    if ( !m_shadow || !wordWrap() ||
-         !( static_cast<KDesktopShadowSettings *>
-             ( m_shadow->shadowSettings() ) )->isEnabled() ) {
-        QIconViewItem::paintFocus( p, cg );
-        return;
-    }
-
-    int spread = shadowThickness();
-
-    iconView()->style().drawPrimitive( QStyle::PE_FocusRect, p,
-        QRect( textRect( false ).x(), textRect( false ).y(),
-               textRect( false ).width() - spread,
-               textRect( false ).height() - spread + 1 ),
-        cg,
-        isSelected() ? QStyle::Style_FocusAtBorder : QStyle::Style_Default,
-        QStyleOption( isSelected() ? cg.highlight() : cg.base() ) );
-
-    if ( this != iconView()->currentItem() ) {
-        iconView()->style().drawPrimitive( QStyle::PE_FocusRect, p,
-            QRect( pixmapRect( false ).x(), pixmapRect( false ).y(),
-            pixmapRect( false ).width(), pixmapRect( false ).height() ),
-            cg, QStyle::Style_Default, QStyleOption( cg.base() ) );
-    }
-}
 
 
 void KFileIVIDesktop::drawShadowedText( QPainter *p, const QColorGroup &cg )
 {
-  int textX = textRect( FALSE ).x() + 2;
+  int textX = textRect( FALSE ).x() + 4;
   int textY = textRect( FALSE ).y();
   int align = ((KIconView *) iconView())->itemTextPos() == QIconView::Bottom
     ? AlignHCenter : AlignAuto;
@@ -184,12 +155,15 @@
   int spread = shadowThickness();
 
   if ( isSelected() && settings->selectionType() != KShadowSettings::InverseVideoOnSelection ) {
-    // select using a filled rect
     text = cg.highlightedText();
     QRect rect = textRect( false );
     rect.setRight( rect.right() - spread );
     rect.setBottom( rect.bottom() - spread + 1 );
-    p->fillRect( rect, cg.highlight() );
+    p->setBrush( QBrush( cg.highlight() ) );
+    p->setPen( QPen( cg.highlight() ) );
+    p->drawRoundRect( rect,
+		      1000 / rect.width(),
+		      1000 / rect.height() );	
   }
   else {
     // use shadow
--- a/kdesktop/kfileividesktop.h
+++ b/kdesktop/kfileividesktop.h
@@ -80,12 +80,7 @@
     virtual void paintItem(QPainter *p, const QColorGroup &cg);
 
     /**
-     * Reimplements QIconView::paintFocus() to take the shadow
-     * metrics into account();
-     */
-    virtual void paintFocus( QPainter *p, const QColorGroup &cg );
 
-    /**
      * Draws the shadow text.
      * @param p the painter for drawing the item
      * @param cg the base color group
