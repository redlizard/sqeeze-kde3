# Makefile.in generated by automake 1.10.1 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = superkaramba$(EXEEXT)
subdir = superkaramba/src
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(shelldesktopdir)" \
	"$(DESTDIR)$(shellrcdir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_superkaramba_OBJECTS = main.$(OBJEXT) karamba.$(OBJEXT) \
	meter.$(OBJEXT) bar.$(OBJEXT) sensor.$(OBJEXT) \
	datesensor.$(OBJEXT) textlabel.$(OBJEXT) memsensor.$(OBJEXT) \
	uptimesensor.$(OBJEXT) cpusensor.$(OBJEXT) \
	networksensor.$(OBJEXT) imagelabel.$(OBJEXT) graph.$(OBJEXT) \
	xmmssensor.$(OBJEXT) programsensor.$(OBJEXT) \
	disksensor.$(OBJEXT) sensorparams.$(OBJEXT) \
	sensorsensor.$(OBJEXT) textfilesensor.$(OBJEXT) \
	clickarea.$(OBJEXT) noatunsensor.$(OBJEXT) \
	karambarootpixmap.$(OBJEXT) clickmap.$(OBJEXT) \
	rsssensor.$(OBJEXT) textfield.$(OBJEXT) taskmanager.$(OBJEXT) \
	showdesktop.$(OBJEXT) richtextlabel.$(OBJEXT) \
	karambasessionmanaged.$(OBJEXT) systemtray.$(OBJEXT) \
	bar_python.$(OBJEXT) meter_python.$(OBJEXT) \
	textlabel_python.$(OBJEXT) richtextlabel_python.$(OBJEXT) \
	imagelabel_python.$(OBJEXT) config_python.$(OBJEXT) \
	misc_python.$(OBJEXT) systray_python.$(OBJEXT) \
	task_python.$(OBJEXT) widget_python.$(OBJEXT) \
	menu_python.$(OBJEXT) karambalistboxitem.$(OBJEXT) \
	graph_python.$(OBJEXT) karambainterface.$(OBJEXT) \
	karambaapp.$(OBJEXT) karamba_python.$(OBJEXT) \
	lineparser.$(OBJEXT) themefile.$(OBJEXT) themesdlg.$(OBJEXT) \
	themewidget.$(OBJEXT) kwidgetlistbox.$(OBJEXT) \
	sknewstuff.$(OBJEXT) themelocale.$(OBJEXT) input.$(OBJEXT) \
	sklineedit.$(OBJEXT) input_python.$(OBJEXT) \
	svcgrp_python.$(OBJEXT)
#>- superkaramba_OBJECTS = $(am_superkaramba_OBJECTS)
#>+ 26
superkaramba_OBJECTS = main.$(OBJEXT) karamba.$(OBJEXT) \
	meter.$(OBJEXT) bar.$(OBJEXT) sensor.$(OBJEXT) \
	datesensor.$(OBJEXT) textlabel.$(OBJEXT) memsensor.$(OBJEXT) \
	uptimesensor.$(OBJEXT) cpusensor.$(OBJEXT) \
	networksensor.$(OBJEXT) imagelabel.$(OBJEXT) graph.$(OBJEXT) \
	xmmssensor.$(OBJEXT) programsensor.$(OBJEXT) \
	disksensor.$(OBJEXT) sensorparams.$(OBJEXT) \
	sensorsensor.$(OBJEXT) textfilesensor.$(OBJEXT) \
	clickarea.$(OBJEXT) noatunsensor.$(OBJEXT) \
	karambarootpixmap.$(OBJEXT) clickmap.$(OBJEXT) \
	rsssensor.$(OBJEXT) textfield.$(OBJEXT) taskmanager.$(OBJEXT) \
	showdesktop.$(OBJEXT) richtextlabel.$(OBJEXT) \
	karambasessionmanaged.$(OBJEXT) systemtray.$(OBJEXT) \
	bar_python.$(OBJEXT) meter_python.$(OBJEXT) \
	textlabel_python.$(OBJEXT) richtextlabel_python.$(OBJEXT) \
	imagelabel_python.$(OBJEXT) config_python.$(OBJEXT) \
	misc_python.$(OBJEXT) systray_python.$(OBJEXT) \
	task_python.$(OBJEXT) widget_python.$(OBJEXT) \
	menu_python.$(OBJEXT) karambalistboxitem.$(OBJEXT) \
	graph_python.$(OBJEXT) karambainterface.$(OBJEXT) \
	karambaapp.$(OBJEXT) karamba_python.$(OBJEXT) \
	lineparser.$(OBJEXT) themefile.$(OBJEXT) themesdlg.$(OBJEXT) \
	themewidget.$(OBJEXT) kwidgetlistbox.$(OBJEXT) \
	sknewstuff.$(OBJEXT) themelocale.$(OBJEXT) input.$(OBJEXT) \
	sklineedit.$(OBJEXT) input_python.$(OBJEXT) \
	svcgrp_python.$(OBJEXT) dcopinterface_skel.$(OBJEXT) dcopinterface_stub.$(OBJEXT) themes_layout.$(OBJEXT) themewidget_layout.$(OBJEXT) superkarambasettings.$(OBJEXT)
am__DEPENDENCIES_1 =
superkaramba_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
#>- superkaramba_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(superkaramba_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
superkaramba_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(superkaramba_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(superkaramba_SOURCES)
DIST_SOURCES = $(superkaramba_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
shelldesktopDATA_INSTALL = $(INSTALL_DATA)
shellrcDATA_INSTALL = $(INSTALL_DATA)
DATA = $(shelldesktop_DATA) $(shellrc_DATA)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
KEYBOARD_LIBS = @KEYBOARD_LIBS@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBGMP = @LIBGMP@
LIBJPEG = @LIBJPEG@
LIBKVM = @LIBKVM@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBPYTHON = @LIBPYTHON@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSNMP = @LIBSNMP@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_DEVSTAT = @LIB_DEVSTAT@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LIB_XSS = @LIB_XSS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MSGFMT = @MSGFMT@
MY_LIBKNEWSTUFF = @MY_LIBKNEWSTUFF@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
PYTHONINC = @PYTHONINC@
PYTHONLIB = @PYTHONLIB@
PYTHONMODDIR = @PYTHONMODDIR@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
XMMS_INCLUDES = @XMMS_INCLUDES@
XMMS_LDFLAGS = @XMMS_LDFLAGS@
XMMS_LIBS = @XMMS_LIBS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@

# set the include path for X, qt and KDE
INCLUDES = $(all_includes) $(XMMS_INCLUDES) $(PYTHONINC)

# these are the headers for your project
noinst_HEADERS = karamba.h karambaapp.h karamba_python.h lineparser.h \
	themefile.h themesdlg.h themewidget.h kwidgetlistbox.h themelocale.h input.h \
	sklineedit.h input_python.h

KDE_OPTIONS = nofinal

# let automoc handle all of the meta source files (moc)
#>- METASOURCES = AUTO

# the application source, library search path, and link libraries
#>- superkaramba_SOURCES = main.cpp karamba.cpp meter.cpp bar.cpp sensor.cpp \
#>- 	datesensor.cpp textlabel.cpp memsensor.cpp uptimesensor.cpp cpusensor.cpp \
#>- 	networksensor.cpp imagelabel.cpp graph.cpp xmmssensor.cpp programsensor.cpp \
#>- 	disksensor.cpp sensorparams.cpp sensorsensor.cpp textfilesensor.cpp clickarea.cpp \
#>- 	noatunsensor.cpp karambarootpixmap.cpp clickmap.cpp rsssensor.cpp textfield.cpp \
#>- 	taskmanager.cpp showdesktop.cpp richtextlabel.cpp karambasessionmanaged.cpp \
#>- 	systemtray.cpp bar_python.cpp meter_python.cpp textlabel_python.cpp \
#>- 	richtextlabel_python.cpp imagelabel_python.cpp config_python.cpp misc_python.cpp \
#>- 	systray_python.cpp task_python.cpp widget_python.cpp menu_python.cpp \
#>- 	karambalistboxitem.cpp graph_python.cpp dcopinterface.skel dcopinterface.stub \
#>- 	karambainterface.cpp karambaapp.cpp karamba_python.cpp lineparser.cpp themefile.cpp \
#>- 	themesdlg.cpp themes_layout.ui themewidget_layout.ui themewidget.cpp \
#>- 	kwidgetlistbox.cpp sknewstuff.h sknewstuff.cpp superkarambasettings.kcfgc themelocale.cpp \
#>- 	input.cpp sklineedit.cpp input_python.cpp svcgrp_python.cpp
#>+ 14
superkaramba_SOURCES=main.cpp karamba.cpp meter.cpp bar.cpp sensor.cpp \
	datesensor.cpp textlabel.cpp memsensor.cpp uptimesensor.cpp cpusensor.cpp \
	networksensor.cpp imagelabel.cpp graph.cpp xmmssensor.cpp programsensor.cpp \
	disksensor.cpp sensorparams.cpp sensorsensor.cpp textfilesensor.cpp clickarea.cpp \
	noatunsensor.cpp karambarootpixmap.cpp clickmap.cpp rsssensor.cpp textfield.cpp \
	taskmanager.cpp showdesktop.cpp richtextlabel.cpp karambasessionmanaged.cpp \
	systemtray.cpp bar_python.cpp meter_python.cpp textlabel_python.cpp \
	richtextlabel_python.cpp imagelabel_python.cpp config_python.cpp misc_python.cpp \
	systray_python.cpp task_python.cpp widget_python.cpp menu_python.cpp \
	karambalistboxitem.cpp graph_python.cpp   \
	karambainterface.cpp karambaapp.cpp karamba_python.cpp lineparser.cpp themefile.cpp \
	themesdlg.cpp   themewidget.cpp \
	kwidgetlistbox.cpp sknewstuff.h sknewstuff.cpp  themelocale.cpp \
	input.cpp sklineedit.cpp input_python.cpp svcgrp_python.cpp dcopinterface_skel.cpp dcopinterface_stub.cpp themes_layout.cpp themewidget_layout.cpp superkarambasettings.cpp


# kde_cfg_DATA = superkaramba.kcfg
superkaramba_LDFLAGS = -Wl,-export-dynamic  $(KDE_RPATH) $(all_libraries) $(PYTHONLIB) $(XMMS_LDFLAGS)
#superkaramba_LDADD = -lkio $(LIB_KDEUI) $(XMMS_LDADD) $(LIBPYTHON) $(LIBKVM) $(MY_LIBKNEWSTUFF)
superkaramba_LDADD = -lkio $(LIB_KDEUI) $(XMMS_LIBS) $(LIBPYTHON) $(LIBKVM) $(MY_LIBKNEWSTUFF)

# this is where the desktop file will go
shelldesktopdir = $(kde_appsdir)/Utilities
shelldesktop_DATA = superkaramba.desktop

# this is where the shell's XML-GUI resource file goes
shellrcdir = $(kde_datadir)/superkaramba
shellrc_DATA = superkarambaui.rc
#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  superkaramba/src/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --foreign  superkaramba/src/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  superkaramba/src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  superkaramba/src/Makefile
	cd $(top_srcdir) && perl admin/am_edit superkaramba/src/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
superkaramba$(EXEEXT): $(superkaramba_OBJECTS) $(superkaramba_DEPENDENCIES) 
	@rm -f superkaramba$(EXEEXT)
	$(superkaramba_LINK) $(superkaramba_OBJECTS) $(superkaramba_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bar_python.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/clickarea.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/clickmap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/config_python.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpusensor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/datesensor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/disksensor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/graph.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/graph_python.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/imagelabel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/imagelabel_python.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/input_python.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/karamba.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/karamba_python.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/karambaapp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/karambainterface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/karambalistboxitem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/karambarootpixmap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/karambasessionmanaged.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kwidgetlistbox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lineparser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memsensor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/menu_python.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/meter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/meter_python.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/misc_python.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/networksensor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/noatunsensor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/programsensor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/richtextlabel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/richtextlabel_python.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rsssensor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sensor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sensorparams.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sensorsensor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/showdesktop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sklineedit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sknewstuff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svcgrp_python.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/systemtray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/systray_python.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/task_python.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/taskmanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/textfield.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/textfilesensor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/textlabel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/textlabel_python.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/themefile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/themelocale.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/themesdlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/themewidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/uptimesensor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/widget_python.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xmmssensor.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-shelldesktopDATA: $(shelldesktop_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(shelldesktopdir)" || $(MKDIR_P) "$(DESTDIR)$(shelldesktopdir)"
	@list='$(shelldesktop_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(shelldesktopDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(shelldesktopdir)/$$f'"; \
	  $(shelldesktopDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(shelldesktopdir)/$$f"; \
	done

uninstall-shelldesktopDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(shelldesktop_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(shelldesktopdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(shelldesktopdir)/$$f"; \
	done
install-shellrcDATA: $(shellrc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(shellrcdir)" || $(MKDIR_P) "$(DESTDIR)$(shellrcdir)"
	@list='$(shellrc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(shellrcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(shellrcdir)/$$f'"; \
	  $(shellrcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(shellrcdir)/$$f"; \
	done

uninstall-shellrcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(shellrc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(shellrcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(shellrcdir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(shelldesktopdir)" "$(DESTDIR)$(shellrcdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-idl clean-ui clean-kcfg clean-bcheck  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-shelldesktopDATA install-shellrcDATA

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-shelldesktopDATA \
	uninstall-shellrcDATA

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-shelldesktopDATA install-shellrcDATA install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-shelldesktopDATA uninstall-shellrcDATA


messages: rc.cpp
	$(EXTRACTRC) *.ui >> rc.cpp
	$(XGETTEXT) *.cpp -o $(podir)/superkaramba.pot
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 7
dcopinterface.kidl: $(srcdir)/dcopinterface.h $(DCOP_DEPENDENCIES)
	$(DCOPIDL) $(srcdir)/dcopinterface.h > dcopinterface.kidl || ( rm -f dcopinterface.kidl ; false )
dcopinterface_skel.cpp: dcopinterface.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-stub dcopinterface.kidl
dcopinterface_stub.h: dcopinterface.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-skel dcopinterface.kidl

#>+ 3
cpusensor.moc: $(srcdir)/cpusensor.h
	$(MOC) $(srcdir)/cpusensor.h -o cpusensor.moc

#>+ 2
mocs: cpusensor.moc

#>+ 3
input.moc: $(srcdir)/input.h
	$(MOC) $(srcdir)/input.h -o input.moc

#>+ 2
mocs: input.moc

#>+ 3
taskmanager.moc: $(srcdir)/taskmanager.h
	$(MOC) $(srcdir)/taskmanager.h -o taskmanager.moc

#>+ 2
mocs: taskmanager.moc

#>+ 3
sensor.moc: $(srcdir)/sensor.h
	$(MOC) $(srcdir)/sensor.h -o sensor.moc

#>+ 2
mocs: sensor.moc

#>+ 3
datesensor.moc: $(srcdir)/datesensor.h
	$(MOC) $(srcdir)/datesensor.h -o datesensor.moc

#>+ 2
mocs: datesensor.moc

#>+ 3
themesdlg.moc: $(srcdir)/themesdlg.h
	$(MOC) $(srcdir)/themesdlg.h -o themesdlg.moc

#>+ 2
mocs: themesdlg.moc

#>+ 3
programsensor.moc: $(srcdir)/programsensor.h
	$(MOC) $(srcdir)/programsensor.h -o programsensor.moc

#>+ 2
mocs: programsensor.moc

#>+ 3
textlabel.moc: $(srcdir)/textlabel.h
	$(MOC) $(srcdir)/textlabel.h -o textlabel.moc

#>+ 2
mocs: textlabel.moc

#>+ 3
bar.moc: $(srcdir)/bar.h
	$(MOC) $(srcdir)/bar.h -o bar.moc

#>+ 2
mocs: bar.moc

#>+ 3
rsssensor.moc: $(srcdir)/rsssensor.h
	$(MOC) $(srcdir)/rsssensor.h -o rsssensor.moc

#>+ 2
mocs: rsssensor.moc

#>+ 3
themewidget.moc: $(srcdir)/themewidget.h
	$(MOC) $(srcdir)/themewidget.h -o themewidget.moc

#>+ 2
mocs: themewidget.moc

#>+ 3
imagelabel.moc: $(srcdir)/imagelabel.h
	$(MOC) $(srcdir)/imagelabel.h -o imagelabel.moc

#>+ 2
mocs: imagelabel.moc

#>+ 3
karamba.moc: $(srcdir)/karamba.h
	$(MOC) $(srcdir)/karamba.h -o karamba.moc

#>+ 2
mocs: karamba.moc

#>+ 3
richtextlabel.moc: $(srcdir)/richtextlabel.h
	$(MOC) $(srcdir)/richtextlabel.h -o richtextlabel.moc

#>+ 2
mocs: richtextlabel.moc

#>+ 3
sensorsensor.moc: $(srcdir)/sensorsensor.h
	$(MOC) $(srcdir)/sensorsensor.h -o sensorsensor.moc

#>+ 2
mocs: sensorsensor.moc

#>+ 3
clickmap.moc: $(srcdir)/clickmap.h
	$(MOC) $(srcdir)/clickmap.h -o clickmap.moc

#>+ 2
mocs: clickmap.moc

#>+ 3
clickarea.moc: $(srcdir)/clickarea.h
	$(MOC) $(srcdir)/clickarea.h -o clickarea.moc

#>+ 2
mocs: clickarea.moc

#>+ 3
kwidgetlistbox.moc: $(srcdir)/kwidgetlistbox.h
	$(MOC) $(srcdir)/kwidgetlistbox.h -o kwidgetlistbox.moc

#>+ 2
mocs: kwidgetlistbox.moc

#>+ 3
systemtray.moc: $(srcdir)/systemtray.h
	$(MOC) $(srcdir)/systemtray.h -o systemtray.moc

#>+ 2
mocs: systemtray.moc

#>+ 3
disksensor.moc: $(srcdir)/disksensor.h
	$(MOC) $(srcdir)/disksensor.h -o disksensor.moc

#>+ 2
mocs: disksensor.moc

#>+ 3
memsensor.moc: $(srcdir)/memsensor.h
	$(MOC) $(srcdir)/memsensor.h -o memsensor.moc

#>+ 2
mocs: memsensor.moc

#>+ 3
showdesktop.moc: $(srcdir)/showdesktop.h
	$(MOC) $(srcdir)/showdesktop.h -o showdesktop.moc

#>+ 2
mocs: showdesktop.moc

#>+ 3
meter.moc: $(srcdir)/meter.h
	$(MOC) $(srcdir)/meter.h -o meter.moc

#>+ 2
mocs: meter.moc

#>+ 3
xmmssensor.moc: $(srcdir)/xmmssensor.h
	$(MOC) $(srcdir)/xmmssensor.h -o xmmssensor.moc

#>+ 2
mocs: xmmssensor.moc

#>+ 3
networksensor.moc: $(srcdir)/networksensor.h
	$(MOC) $(srcdir)/networksensor.h -o networksensor.moc

#>+ 2
mocs: networksensor.moc

#>+ 3
graph.moc: $(srcdir)/graph.h
	$(MOC) $(srcdir)/graph.h -o graph.moc

#>+ 2
mocs: graph.moc

#>+ 3
karambaapp.moc: $(srcdir)/karambaapp.h
	$(MOC) $(srcdir)/karambaapp.h -o karambaapp.moc

#>+ 2
mocs: karambaapp.moc

#>+ 3
textfilesensor.moc: $(srcdir)/textfilesensor.h
	$(MOC) $(srcdir)/textfilesensor.h -o textfilesensor.moc

#>+ 2
mocs: textfilesensor.moc

#>+ 3
clean-metasources:
	-rm -f  cpusensor.moc input.moc taskmanager.moc sensor.moc datesensor.moc themesdlg.moc programsensor.moc textlabel.moc bar.moc rsssensor.moc themewidget.moc imagelabel.moc karamba.moc richtextlabel.moc sensorsensor.moc clickmap.moc clickarea.moc kwidgetlistbox.moc systemtray.moc disksensor.moc memsensor.moc showdesktop.moc meter.moc xmmssensor.moc networksensor.moc graph.moc karambaapp.moc textfilesensor.moc

#>+ 2
KDE_DIST=themes_layout.ui noatunsensor.h sensor.h meter.h meter_python.h clickmap.h menu_python.h task_python.h richtextlabel_python.h sensorsensor.h karambalistboxitem.h taskmanager.h textlabel.h textlabel_python.h richtextlabel.h karambasessionmanaged.h showdesktop.h superkaramba.kcfg imagelabel.h svcgrp_python.h uptimesensor.h systray_python.h datesensor.h taskbartest.h misc_python.h disksensor.h textfield.h imagelabel_python.h textfilesensor.h clickable.cpp taskbartest.cpp widget_python.h bar.h systemtray.h superkarambasettings.kcfgc rsssensor.h graph.h clickable.h xmmssensor.h dcopinterface.h superkaramba.lsm config_python.h graph_python.h karambainterface.h Makefile.in bar_python.h superkaramba.desktop themewidget_layout.ui sensorparams.h networksensor.h karambarootpixmap.h clickarea.h memsensor.h programsensor.h superkarambaui.rc Makefile.am cpusensor.h 

#>+ 5
clean-idl:
	-rm -f \
	dcopinterface_skel.cpp dcopinterface_skel.h dcopinterface.kidl \
	dcopinterface_stub.cpp dcopinterface_stub.h dcopinterface.kidl 

#>+ 5
clean-ui:
	-rm -f \
	themes_layout.cpp themes_layout.h themes_layout.moc \
	themewidget_layout.cpp themewidget_layout.h themewidget_layout.moc 

#>+ 4
clean-kcfg:
	-rm -f \
	superkarambasettings.cpp superkarambasettings.h 

#>+ 2
docs-am:

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  superkaramba/src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  superkaramba/src/Makefile
	cd $(top_srcdir) && perl admin/am_edit superkaramba/src/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 3
final:
	$(MAKE) all-am

#>+ 3
final-install:
	$(MAKE) install-am

#>+ 3
no-final:
	$(MAKE) all-am

#>+ 3
no-final-install:
	$(MAKE) install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 118
disksensor.o: disksensor.moc 
clickarea.lo: clickarea.moc 
graph.lo: graph.moc 
$(srcdir)/showdesktop.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
systemtray.o: systemtray.moc 
$(srcdir)/main.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
bar.o: bar.moc 
$(srcdir)/karambaapp.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/uptimesensor.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/themesdlg.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
showdesktop.o: showdesktop.moc 
$(srcdir)/misc_python.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
xmmssensor.lo: xmmssensor.moc 
$(srcdir)/rsssensor.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
input.lo: input.moc 
$(srcdir)/graph.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/karambainterface.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/karambarootpixmap.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
meter.lo: meter.moc 
$(srcdir)/disksensor.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
nmcheck-am: nmcheck
$(srcdir)/xmmssensor.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
dcopinterface_stub.cpp: dcopinterface_stub.h 
disksensor.lo: disksensor.moc 
themesdlg.o: themesdlg.moc 
$(srcdir)/widget_python.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/bar.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/clickarea.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
cpusensor.o: cpusensor.moc 
textfilesensor.lo: textfilesensor.moc 
$(srcdir)/input.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/kwidgetlistbox.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/textfield.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
textfilesensor.o: textfilesensor.moc 
karambaapp.o: karambaapp.moc 
networksensor.lo: networksensor.moc 
memsensor.o: memsensor.moc 
$(srcdir)/themewidget.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/karamba_python.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/imagelabel.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/imagelabel_python.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
networksensor.o: networksensor.moc 
datesensor.lo: datesensor.moc 
$(srcdir)/textfilesensor.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/textlabel.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
themewidget.o: themewidget.moc 
$(srcdir)/svcgrp_python.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
taskmanager.lo: taskmanager.moc 
kwidgetlistbox.o: kwidgetlistbox.moc 
$(srcdir)/config_python.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
clickmap.lo: clickmap.moc 
$(srcdir)/sklineedit.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
sensor.o: sensor.moc 
rsssensor.o: rsssensor.moc 
$(srcdir)/karambalistboxitem.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
systemtray.lo: systemtray.moc 
cpusensor.lo: cpusensor.moc 
imagelabel.lo: imagelabel.moc 
$(srcdir)/textlabel_python.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/sensorparams.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/networksensor.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/sensorsensor.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/programsensor.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
graph.o: graph.moc 
showdesktop.lo: showdesktop.moc 
$(srcdir)/clickmap.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/richtextlabel.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/sknewstuff.h: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
imagelabel.o: imagelabel.moc 
$(srcdir)/sknewstuff.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
programsensor.o: programsensor.moc 
$(srcdir)/task_python.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
datesensor.o: datesensor.moc 
clickarea.o: clickarea.moc 
bar.lo: bar.moc 
$(srcdir)/taskmanager.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/sensor.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/noatunsensor.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
input.o: input.moc 
memsensor.lo: memsensor.moc 
themesdlg.lo: themesdlg.moc 
xmmssensor.o: xmmssensor.moc 
textlabel.lo: textlabel.moc 
$(srcdir)/meter.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/systray_python.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
programsensor.lo: programsensor.moc 
rsssensor.lo: rsssensor.moc 
$(srcdir)/bar_python.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
richtextlabel.lo: richtextlabel.moc 
$(srcdir)/meter_python.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/input_python.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/cpusensor.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
karamba.o: karamba.moc 
$(srcdir)/themelocale.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/lineparser.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/systemtray.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/karamba.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
textlabel.o: textlabel.moc 
meter.o: meter.moc 
$(srcdir)/richtextlabel_python.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/themefile.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/memsensor.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
nmcheck: 
karamba.lo: karamba.moc 
richtextlabel.o: richtextlabel.moc 
sensor.lo: sensor.moc 
$(srcdir)/graph_python.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/karambasessionmanaged.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
$(srcdir)/menu_python.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
clickmap.o: clickmap.moc 
taskmanager.o: taskmanager.moc 
$(srcdir)/datesensor.cpp: dcopinterface_stub.h themes_layout.h themewidget_layout.h superkarambasettings.h 
themewidget.lo: themewidget.moc 
kwidgetlistbox.lo: kwidgetlistbox.moc 
sensorsensor.o: sensorsensor.moc 
karambaapp.lo: karambaapp.moc 
sensorsensor.lo: sensorsensor.moc 

#>+ 36
superkarambasettings.cpp: superkarambasettings.h
superkarambasettings.h: $(srcdir)/superkaramba.kcfg $(srcdir)/superkarambasettings.kcfgc $(KCFG_DEPENDENCIES)
	$(KCONFIG_COMPILER) $(srcdir)/superkaramba.kcfg $(srcdir)/superkarambasettings.kcfgc; ret=$$?; \
	if test "$$ret" != 0; then rm -f superkarambasettings.h ; exit $$ret ;  fi


themewidget_layout.cpp: $(srcdir)/themewidget_layout.ui themewidget_layout.h themewidget_layout.moc
	rm -f themewidget_layout.cpp
	echo '#include <kdialog.h>' > themewidget_layout.cpp
	echo '#include <klocale.h>' >> themewidget_layout.cpp
	$(UIC) -tr ${UIC_TR} -i themewidget_layout.h $(srcdir)/themewidget_layout.ui > themewidget_layout.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" themewidget_layout.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_themewidget_layout,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> themewidget_layout.cpp ;\
	rm -f themewidget_layout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "themewidget_layout.moc"' >> themewidget_layout.cpp; else rm -f themewidget_layout.cpp ; exit $$ret ; fi

themewidget_layout.h: $(srcdir)/themewidget_layout.ui
	rm -rf themewidget_layout.h;
	$(UIC) $(srcdir)/themewidget_layout.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> themewidget_layout.h ;
themewidget_layout.moc: themewidget_layout.h
	$(MOC) themewidget_layout.h -o themewidget_layout.moc

themes_layout.cpp: $(srcdir)/themes_layout.ui themes_layout.h themes_layout.moc
	rm -f themes_layout.cpp
	echo '#include <kdialog.h>' > themes_layout.cpp
	echo '#include <klocale.h>' >> themes_layout.cpp
	$(UIC) -tr ${UIC_TR} -i themes_layout.h $(srcdir)/themes_layout.ui > themes_layout.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" themes_layout.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_themes_layout,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> themes_layout.cpp ;\
	rm -f themes_layout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "themes_layout.moc"' >> themes_layout.cpp; else rm -f themes_layout.cpp ; exit $$ret ; fi

themes_layout.h: $(srcdir)/themes_layout.ui
	rm -rf themes_layout.h;
	$(UIC) $(srcdir)/themes_layout.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> themes_layout.h ;
themes_layout.moc: themes_layout.h
	$(MOC) themes_layout.h -o themes_layout.moc
