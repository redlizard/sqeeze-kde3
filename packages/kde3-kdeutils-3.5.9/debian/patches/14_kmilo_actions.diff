--- kdeutils-3.5.9/kmilo/generic/generic_monitor.cpp	2008-02-20 16:10:20.000000000 +0200
+++ kdeutils-3.5.9/kmilo/generic/generic_monitor.cpp	2008-02-20 16:22:24.000000000 +0200
@@ -26,6 +26,7 @@
 #include <kgenericfactory.h>
 #include <kdebug.h>
 #include <kconfig.h>
+#include <kprocess.h>
 
 #include <sys/types.h>
 #include <unistd.h>
@@ -34,6 +35,7 @@
 #include "kmilointerface.h"
 #include <qmessagebox.h>
 #include <qfile.h>
+#include <qdir.h>
 
 #define CONFIG_FILE "kmilodrc"
 
@@ -67,13 +69,25 @@
 
 bool GenericMonitor::init()
 {
-	KConfig config(CONFIG_FILE);
-	reconfigure(&config);
+	config = new KConfig(CONFIG_FILE);
+	reconfigure(config);
+	config->setGroup("kubuntu");
 
 	if(!m_enabled)
 		return false; // exit early if we are not supposed to run
 
 	static const ShortcutInfo shortcuts[] = {
+		{ "Search", KShortcut("XF86Search"), SLOT(launchSearch()) },
+		{ "Home Folder", KShortcut("XF86MyComputer"), SLOT(launchHomeFolder()) },
+		{ "Mail", KShortcut("XF86Mail"), SLOT(launchMail()) },
+		{ "Audio Media", KShortcut("XF86AudioMedia"), SLOT(launchMusic()) },
+		{ "Music", KShortcut("XF86Music"), SLOT(launchMusic()) },
+		{ "Browser", KShortcut("XF86WWW"), SLOT(launchBrowser()) },
+		{ "Calculator", KShortcut("XF86Calculator"), SLOT(launchCalculator()) },
+		{ "Terminal", KShortcut("XF86Terminal"), SLOT(launchTerminal()) },
+		{ "Eject", KShortcut("XF86Eject"), SLOT(eject()) },
+		{ "Help", KShortcut("XF86Launch0"), SLOT(launchHelp()) },
+		{ "Light Bulb", KShortcut("XF86LightBulb"), SLOT(lightBulb()) },
 		{ "FastVolumeUp", Qt::Key_VolumeUp, SLOT(fastVolumeUp()) },
 		{ "FastVolumeDown", Qt::Key_VolumeDown, SLOT(fastVolumeDown()) },
 		{ "SlowVolumeUp", Qt::CTRL+Qt::Key_VolumeUp, SLOT(slowVolumeUp()) },
@@ -216,6 +230,70 @@
 	displayVolume();
 }
 
+void GenericMonitor::launch(QString configKey, QString defaultApplication)
+{
+	QString application = config->readEntry(configKey, defaultApplication);
+	KProcess proc;
+	proc << application;
+	proc.start(KProcess::DontCare);
+}
+
+void GenericMonitor::launchMail()
+{
+	kdDebug() << "launchMail" << endl;
+	kapp->invokeMailer("", "", "", "", "", "", "", "");
+}
+
+void GenericMonitor::launchBrowser()
+{
+	kapp->invokeBrowser("");
+}
+
+void GenericMonitor::launchSearch()
+{
+	launch("search", "kfind");
+}
+
+void GenericMonitor::launchHomeFolder()
+{
+	QString home = QDir::home().path();
+	KProcess proc;
+	proc << "kfmclient" << "exec" << home;
+	proc.start(KProcess::DontCare);
+}
+
+void GenericMonitor::launchMusic()
+{
+	launch("search", "amarok");
+}
+
+void GenericMonitor::launchCalculator()
+{
+	launch("search", "speedcrunch");
+}
+
+void GenericMonitor::launchTerminal()
+{
+	launch("search", "konsole");
+}
+
+void GenericMonitor::launchHelp()
+{
+	launch("search", "khelpcenter");
+}
+
+void GenericMonitor::eject()
+{
+	launch("search", "eject");
+}
+
+void GenericMonitor::lightBulb()
+{
+	kdDebug() << "lightBulb()" << endl;
+	_interface->displayText("Screen Light");
+}
+
+
 void GenericMonitor::slowVolumeUp()   { volumeChange( 1, m_volumeStepSlow); }
 void GenericMonitor::slowVolumeDown() { volumeChange(-1, m_volumeStepSlow); }
 void GenericMonitor::fastVolumeUp()   { volumeChange( 1, m_volumeStepFast); }
--- kdeutils-3.5.9/kmilo/generic/generic_monitor.h	2008-02-20 16:18:01.000000000 +0200
+++ kdeutils-3.5.9/kmilo/generic/generic_monitor.h	2008-02-20 16:19:29.000000000 +0200
@@ -29,6 +29,7 @@
 #include <kglobalaccel.h>
 #include <dcopref.h>
 #include <kapplication.h>
+#include <kconfig.h>
 
 #include "kmilod.h"
 #include "monitor.h"
@@ -63,6 +64,16 @@
   void fastVolumeUp();
   void fastVolumeDown();
   void mute();
+  void launchMail();
+  void launchBrowser();
+  void launchSearch();
+  void launchHomeFolder();
+  void launchMusic();
+  void launchCalculator();
+  void launchTerminal();
+  void launchHelp();
+  void eject();
+  void lightBulb();
 
 private:
 	bool retrieveKmixDevices();
@@ -70,8 +81,10 @@
 	bool retrieveMute();
 	bool retrieveVolume();
 	void displayVolume();
+	void launch(QString configKey, QString defaultApplication);
 
 	KGlobalAccel *ga;
+	KConfig* config;
 
 	DCOPRef *kmixClient, *kmixWindow;
 
