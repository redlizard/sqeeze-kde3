# Makefile.in generated by automake 1.10.1 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = knetworkconf/knetworkconf
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(kde_moduledir)" \
	"$(DESTDIR)$(xdg_appsdir)"
kde_moduleLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(kde_module_LTLIBRARIES)
am__DEPENDENCIES_1 =
kcm_knetworkconfmodule_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kcm_knetworkconfmodule_la_OBJECTS = kknownhostinfo.lo \
	knetworkconfmodule.lo kroutinginfo.lo kaddressvalidator.lo \
	kdnsinfo.lo knetworkinfo.lo knetworkconfigparser.lo \
	knetworkinterface.lo knetworkconf.lo main.lo \
	kwirelessinterface.lo kadddevicecontainer.lo \
	kprofileslistviewtooltip.lo
#>- kcm_knetworkconfmodule_la_OBJECTS =  \
#>- 	$(am_kcm_knetworkconfmodule_la_OBJECTS)
#>+ 9
kcm_knetworkconfmodule_la_final_OBJECTS = kcm_knetworkconfmodule_la.all_cpp.lo 
kcm_knetworkconfmodule_la_nofinal_OBJECTS = kknownhostinfo.lo \
	knetworkconfmodule.lo kroutinginfo.lo kaddressvalidator.lo \
	kdnsinfo.lo knetworkinfo.lo knetworkconfigparser.lo \
	knetworkinterface.lo knetworkconf.lo main.lo \
	kwirelessinterface.lo kadddevicecontainer.lo \
	kprofileslistviewtooltip.lo knetworkconfiface_skel.lo kselectdistrodlg.lo kinterfaceupdowndlg.lo kaddknownhostdlg.lo kdetectdistrodlg.lo kreloadnetworkdlg.lo kadddevicedlg.lo kadddnsserverdlg.lo knetworkconfdlg.lo kadddevicedlgextension.lo kadddevicewifiext.lo
@KDE_USE_FINAL_FALSE@kcm_knetworkconfmodule_la_OBJECTS = $(kcm_knetworkconfmodule_la_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@kcm_knetworkconfmodule_la_OBJECTS = $(kcm_knetworkconfmodule_la_final_OBJECTS)
#>- kcm_knetworkconfmodule_la_LINK = $(LIBTOOL) --tag=CXX \
#>- 	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(kcm_knetworkconfmodule_la_LDFLAGS) $(LDFLAGS) -o $@
#>+ 4
kcm_knetworkconfmodule_la_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(kcm_knetworkconfmodule_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(kcm_knetworkconfmodule_la_SOURCES)
DIST_SOURCES = $(kcm_knetworkconfmodule_la_SOURCES)
xdg_appsDATA_INSTALL = $(INSTALL_DATA)
DATA = $(xdg_apps_DATA)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
KU_FIRSTGID = @KU_FIRSTGID@
KU_FIRSTUID = @KU_FIRSTUID@
KU_HOMEDIR_PERM = @KU_HOMEDIR_PERM@
KU_MAILBOX_GID = @KU_MAILBOX_GID@
KU_MAILBOX_PERM = @KU_MAILBOX_PERM@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBGEN = @LIBGEN@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSHADOW = @LIBSHADOW@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PAMLIBS = @PAMLIBS@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SETUIDFLAGS = @SETUIDFLAGS@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
scriptsdir = @scriptsdir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@

# set the include path for X, qt and KDE
#INCLUDES= $(all_includes)
AM_CPPFLAGS = $(all_includes)

# We use deprecated routines in QButton, undefine QT_NO_COMPAT.
KDE_CXXFLAGS = -UQT_NO_COMPAT
#>- METASOURCES = AUTO
#bin_PROGRAMS = knetworkconf
kde_module_LTLIBRARIES = kcm_knetworkconfmodule.la
kcm_knetworkconfmodule_la_LIBADD = $(LIB_KDEUI)

# the library search path. 
kcm_knetworkconfmodule_la_LDFLAGS = $(all_libraries) -module -avoid-version -no-undefined
#>- kcm_knetworkconfmodule_la_SOURCES = kselectdistrodlg.ui kknownhostinfo.cpp \
#>- 		kinterfaceupdowndlg.ui kaddknownhostdlg.ui kdetectdistrodlg.ui knetworkconfmodule.cpp \
#>- 		kroutinginfo.cpp kreloadnetworkdlg.ui kaddressvalidator.cpp kdnsinfo.cpp \
#>- 		knetworkinfo.cpp kadddevicedlg.ui kadddnsserverdlg.ui knetworkconfigparser.cpp \
#>- 		knetworkinterface.cpp knetworkconfdlg.ui knetworkconf.cpp main.cpp kadddevicedlgextension.ui \
#>- 		knetworkconfiface.skel kwirelessinterface.cpp kadddevicewifiext.ui 	kadddevicecontainer.cpp \
#>- 	kprofileslistviewtooltip.cpp
#>+ 7
kcm_knetworkconfmodule_la_SOURCES= kknownhostinfo.cpp \
		   knetworkconfmodule.cpp \
		kroutinginfo.cpp  kaddressvalidator.cpp kdnsinfo.cpp \
		knetworkinfo.cpp   knetworkconfigparser.cpp \
		knetworkinterface.cpp  knetworkconf.cpp main.cpp  \
		 kwirelessinterface.cpp  	kadddevicecontainer.cpp \
	kprofileslistviewtooltip.cpp knetworkconfiface_skel.cpp kselectdistrodlg.cpp kinterfaceupdowndlg.cpp kaddknownhostdlg.cpp kdetectdistrodlg.cpp kreloadnetworkdlg.cpp kadddevicedlg.cpp kadddnsserverdlg.cpp knetworkconfdlg.cpp kadddevicedlgextension.cpp kadddevicewifiext.cpp

EXTRA_DIST = main.cpp knetworkconf.cpp knetworkconf.h knetworkconf.desktop cr16-app-knetworkconf.png cr22-app-knetworkconf.png cr32-app-knetworkconf.png knetworkconfdlg.ui knetworkinterface.cpp knetworkinterface.h knetworkconfigparser.cpp knetworkconfigparser.h kadddnsserverdlg.ui kadddevicedlg.ui knetworkinfo.cpp knetworkinfo.h kdnsinfo.cpp kdnsinfo.h kaddressvalidator.cpp kaddressvalidator.h kreloadnetworkdlg.ui network_card.png kroutinginfo.cpp kroutinginfo.h knetworkconfmodule.cpp knetworkconfmodule.h kdetectdistrodlg.ui kaddknownhostdlg.ui kinterfaceupdowndlg.ui kadddnsserverdlg.ui.h kadddevicedlg.ui.h kaddknownhostdlg.ui.h kknownhostinfo.cpp kknownhostinfo.h kselectdistrodlg.ui kcm_knetworkconfmodule version.h
xdg_apps_DATA = kcm_knetworkconfmodule.desktop 
KDE_ICON = AUTO
noinst_HEADERS = kprofileslistviewtooltip.h
#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  knetworkconf/knetworkconf/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --foreign  knetworkconf/knetworkconf/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  knetworkconf/knetworkconf/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  knetworkconf/knetworkconf/Makefile
	cd $(top_srcdir) && perl admin/am_edit knetworkconf/knetworkconf/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-kde_moduleLTLIBRARIES: $(kde_module_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(kde_moduledir)" || $(MKDIR_P) "$(DESTDIR)$(kde_moduledir)"
	@list='$(kde_module_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(kde_moduleLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(kde_moduledir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(kde_moduleLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(kde_moduledir)/$$f"; \
	  else :; fi; \
	done

uninstall-kde_moduleLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(kde_module_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(kde_moduledir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(kde_moduledir)/$$p"; \
	done

clean-kde_moduleLTLIBRARIES:
	-test -z "$(kde_module_LTLIBRARIES)" || rm -f $(kde_module_LTLIBRARIES)
	@list='$(kde_module_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
kcm_knetworkconfmodule.la: $(kcm_knetworkconfmodule_la_OBJECTS) $(kcm_knetworkconfmodule_la_DEPENDENCIES) 
	$(kcm_knetworkconfmodule_la_LINK) -rpath $(kde_moduledir) $(kcm_knetworkconfmodule_la_OBJECTS) $(kcm_knetworkconfmodule_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kadddevicecontainer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kaddressvalidator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kdnsinfo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kknownhostinfo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/knetworkconf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/knetworkconfigparser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/knetworkconfmodule.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/knetworkinfo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/knetworkinterface.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kprofileslistviewtooltip.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kroutinginfo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kwirelessinterface.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-xdg_appsDATA: $(xdg_apps_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xdg_appsdir)" || $(MKDIR_P) "$(DESTDIR)$(xdg_appsdir)"
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(xdg_appsDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  $(xdg_appsDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

uninstall-xdg_appsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(kde_moduledir)" "$(DESTDIR)$(xdg_appsdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-generic clean-kde_moduleLTLIBRARIES clean-libtool \
#>- 	mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-idl clean-ui clean-bcheck clean-final  clean-generic clean-kde_moduleLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

#>- install-data-am: install-kde_moduleLTLIBRARIES install-xdg_appsDATA
#>+ 1
install-data-am: install-kde-icons   install-xdg_appsDATA

install-dvi: install-dvi-am

#>- install-exec-am:
#>+ 1
install-exec-am:  install-kde_moduleLTLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

#>- uninstall-am: uninstall-kde_moduleLTLIBRARIES uninstall-xdg_appsDATA
#>+ 1
uninstall-am: uninstall-kde-icons  uninstall-kde_moduleLTLIBRARIES uninstall-xdg_appsDATA

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-kde_moduleLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-kde_moduleLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	install-xdg_appsDATA installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-kde_moduleLTLIBRARIES uninstall-xdg_appsDATA


messages: rc.cpp
	LIST=`find . -name \*.h -o -name \*.hh -o -name \*.H -o -name \*.hxx -o -name \*.hpp -o -name \*.cpp -o -name \*.cc -o -name \*.cxx -o -name \*.ecpp -o -name \*.C`; \
	if test -n "$$LIST"; then \
	 $(XGETTEXT) $$LIST -o $(podir)/knetworkconf.pot; \
	fi
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 5
knetworkconfiface.kidl: $(srcdir)/knetworkconfiface.h $(DCOP_DEPENDENCIES)
	$(DCOPIDL) $(srcdir)/knetworkconfiface.h > knetworkconfiface.kidl || ( rm -f knetworkconfiface.kidl ; false )
knetworkconfiface_skel.cpp: knetworkconfiface.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-stub knetworkconfiface.kidl

#>+ 3
kadddevicecontainer.moc: $(srcdir)/kadddevicecontainer.h
	$(MOC) $(srcdir)/kadddevicecontainer.h -o kadddevicecontainer.moc

#>+ 2
mocs: kadddevicecontainer.moc

#>+ 3
knetworkconfmodule.moc: $(srcdir)/knetworkconfmodule.h
	$(MOC) $(srcdir)/knetworkconfmodule.h -o knetworkconfmodule.moc

#>+ 2
mocs: knetworkconfmodule.moc

#>+ 3
knetworkconfigparser.moc: $(srcdir)/knetworkconfigparser.h
	$(MOC) $(srcdir)/knetworkconfigparser.h -o knetworkconfigparser.moc

#>+ 2
mocs: knetworkconfigparser.moc

#>+ 3
knetworkconf.moc: $(srcdir)/knetworkconf.h
	$(MOC) $(srcdir)/knetworkconf.h -o knetworkconf.moc

#>+ 2
mocs: knetworkconf.moc

#>+ 3
clean-metasources:
	-rm -f  kadddevicecontainer.moc knetworkconfmodule.moc knetworkconfigparser.moc knetworkconf.moc

#>+ 2
KDE_DIST=hi16-app-knetworkconf.png kadddevicedlgextension.ui knetworkconfiface.h kcm_knetworkconfmodule.desktop kwirelessinterface.h kadddevicewifiext.ui kinterfaceupdowndlg.ui.h hi22-app-knetworkconf.png kadddevicecontainer.h knetworkconfdlg.ui.h hi32-app-knetworkconf.png Makefile.in kadddevicedlgextension.ui.h Makefile.am 

#>+ 4
clean-idl:
	-rm -f \
	knetworkconfiface_skel.cpp knetworkconfiface_skel.h knetworkconfiface.kidl 

#>+ 13
clean-ui:
	-rm -f \
	kselectdistrodlg.cpp kselectdistrodlg.h kselectdistrodlg.moc \
	kinterfaceupdowndlg.cpp kinterfaceupdowndlg.h kinterfaceupdowndlg.moc \
	kaddknownhostdlg.cpp kaddknownhostdlg.h kaddknownhostdlg.moc \
	kdetectdistrodlg.cpp kdetectdistrodlg.h kdetectdistrodlg.moc \
	kreloadnetworkdlg.cpp kreloadnetworkdlg.h kreloadnetworkdlg.moc \
	kadddevicedlg.cpp kadddevicedlg.h kadddevicedlg.moc \
	kadddnsserverdlg.cpp kadddnsserverdlg.h kadddnsserverdlg.moc \
	knetworkconfdlg.cpp knetworkconfdlg.h knetworkconfdlg.moc \
	kadddevicedlgextension.cpp kadddevicedlgextension.h kadddevicedlgextension.moc \
	kadddevicewifiext.cpp kadddevicewifiext.h kadddevicewifiext.moc 

#>+ 2
docs-am:

#>+ 13
install-kde-icons:
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps
	$(INSTALL_DATA) $(srcdir)/hi22-app-knetworkconf.png $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps/knetworkconf.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps
	$(INSTALL_DATA) $(srcdir)/hi16-app-knetworkconf.png $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/knetworkconf.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps
	$(INSTALL_DATA) $(srcdir)/hi32-app-knetworkconf.png $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/knetworkconf.png

uninstall-kde-icons:
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps/knetworkconf.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/knetworkconf.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/knetworkconf.png

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  knetworkconf/knetworkconf/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  knetworkconf/knetworkconf/Makefile
	cd $(top_srcdir) && perl admin/am_edit knetworkconf/knetworkconf/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
kcm_knetworkconfmodule_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/kknownhostinfo.cpp $(srcdir)/knetworkconfmodule.cpp $(srcdir)/kroutinginfo.cpp $(srcdir)/kaddressvalidator.cpp $(srcdir)/kdnsinfo.cpp $(srcdir)/knetworkinfo.cpp $(srcdir)/knetworkconfigparser.cpp $(srcdir)/knetworkinterface.cpp $(srcdir)/knetworkconf.cpp $(srcdir)/main.cpp $(srcdir)/kwirelessinterface.cpp $(srcdir)/kadddevicecontainer.cpp $(srcdir)/kprofileslistviewtooltip.cpp knetworkconfiface_skel.cpp kselectdistrodlg.cpp kinterfaceupdowndlg.cpp kaddknownhostdlg.cpp kdetectdistrodlg.cpp kreloadnetworkdlg.cpp kadddevicedlg.cpp kadddnsserverdlg.cpp knetworkconfdlg.cpp kadddevicedlgextension.cpp kadddevicewifiext.cpp  kadddevicecontainer.moc kadddnsserverdlg.moc kadddevicedlg.moc kdetectdistrodlg.moc kreloadnetworkdlg.moc knetworkconfigparser.moc kadddevicewifiext.moc kselectdistrodlg.moc kinterfaceupdowndlg.moc kadddevicedlgextension.moc kaddknownhostdlg.moc knetworkconfmodule.moc knetworkconfdlg.moc knetworkconf.moc
	@echo 'creating kcm_knetworkconfmodule_la.all_cpp.cpp ...'; \
	rm -f kcm_knetworkconfmodule_la.all_cpp.files kcm_knetworkconfmodule_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> kcm_knetworkconfmodule_la.all_cpp.final; \
	for file in kknownhostinfo.cpp knetworkconfmodule.cpp kroutinginfo.cpp kaddressvalidator.cpp kdnsinfo.cpp knetworkinfo.cpp knetworkconfigparser.cpp knetworkinterface.cpp knetworkconf.cpp main.cpp kwirelessinterface.cpp kadddevicecontainer.cpp kprofileslistviewtooltip.cpp knetworkconfiface_skel.cpp kselectdistrodlg.cpp kinterfaceupdowndlg.cpp kaddknownhostdlg.cpp kdetectdistrodlg.cpp kreloadnetworkdlg.cpp kadddevicedlg.cpp kadddnsserverdlg.cpp knetworkconfdlg.cpp kadddevicedlgextension.cpp kadddevicewifiext.cpp ; do \
	  echo "#include \"$$file\"" >> kcm_knetworkconfmodule_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> kcm_knetworkconfmodule_la.all_cpp.final; \
	done; \
	cat kcm_knetworkconfmodule_la.all_cpp.final kcm_knetworkconfmodule_la.all_cpp.files > kcm_knetworkconfmodule_la.all_cpp.cpp; \
	rm -f kcm_knetworkconfmodule_la.all_cpp.final kcm_knetworkconfmodule_la.all_cpp.files

#>+ 3
clean-final:
	-rm -f kcm_knetworkconfmodule_la.all_cpp.cpp

#>+ 3
final:
	$(MAKE) kcm_knetworkconfmodule_la_OBJECTS="$(kcm_knetworkconfmodule_la_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) kcm_knetworkconfmodule_la_OBJECTS="$(kcm_knetworkconfmodule_la_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) kcm_knetworkconfmodule_la_OBJECTS="$(kcm_knetworkconfmodule_la_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) kcm_knetworkconfmodule_la_OBJECTS="$(kcm_knetworkconfmodule_la_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 24
$(srcdir)/knetworkconfigparser.cpp: kselectdistrodlg.h kinterfaceupdowndlg.h kaddknownhostdlg.h kdetectdistrodlg.h kreloadnetworkdlg.h kadddevicedlg.h kadddnsserverdlg.h knetworkconfdlg.h kadddevicedlgextension.h kadddevicewifiext.h 
$(srcdir)/kdnsinfo.cpp: kselectdistrodlg.h kinterfaceupdowndlg.h kaddknownhostdlg.h kdetectdistrodlg.h kreloadnetworkdlg.h kadddevicedlg.h kadddnsserverdlg.h knetworkconfdlg.h kadddevicedlgextension.h kadddevicewifiext.h 
$(srcdir)/knetworkconfmodule.cpp: kselectdistrodlg.h kinterfaceupdowndlg.h kaddknownhostdlg.h kdetectdistrodlg.h kreloadnetworkdlg.h kadddevicedlg.h kadddnsserverdlg.h knetworkconfdlg.h kadddevicedlgextension.h kadddevicewifiext.h 
$(srcdir)/main.cpp: kselectdistrodlg.h kinterfaceupdowndlg.h kaddknownhostdlg.h kdetectdistrodlg.h kreloadnetworkdlg.h kadddevicedlg.h kadddnsserverdlg.h knetworkconfdlg.h kadddevicedlgextension.h kadddevicewifiext.h 
knetworkconf.o: knetworkconf.moc 
$(srcdir)/knetworkconf.cpp: kselectdistrodlg.h kinterfaceupdowndlg.h kaddknownhostdlg.h kdetectdistrodlg.h kreloadnetworkdlg.h kadddevicedlg.h kadddnsserverdlg.h knetworkconfdlg.h kadddevicedlgextension.h kadddevicewifiext.h 
$(srcdir)/knetworkinterface.cpp: kselectdistrodlg.h kinterfaceupdowndlg.h kaddknownhostdlg.h kdetectdistrodlg.h kreloadnetworkdlg.h kadddevicedlg.h kadddnsserverdlg.h knetworkconfdlg.h kadddevicedlgextension.h kadddevicewifiext.h 
knetworkconf.lo: knetworkconf.moc 
kadddevicecontainer.o: kadddevicecontainer.moc 
knetworkconfmodule.o: knetworkconfmodule.moc 
nmcheck: 
knetworkconfmodule.lo: knetworkconfmodule.moc 
knetworkconfigparser.o: knetworkconfigparser.moc 
$(srcdir)/kroutinginfo.cpp: kselectdistrodlg.h kinterfaceupdowndlg.h kaddknownhostdlg.h kdetectdistrodlg.h kreloadnetworkdlg.h kadddevicedlg.h kadddnsserverdlg.h knetworkconfdlg.h kadddevicedlgextension.h kadddevicewifiext.h 
nmcheck-am: nmcheck
$(srcdir)/kprofileslistviewtooltip.cpp: kselectdistrodlg.h kinterfaceupdowndlg.h kaddknownhostdlg.h kdetectdistrodlg.h kreloadnetworkdlg.h kadddevicedlg.h kadddnsserverdlg.h knetworkconfdlg.h kadddevicedlgextension.h kadddevicewifiext.h 
knetworkconfigparser.lo: knetworkconfigparser.moc 
kadddevicecontainer.lo: kadddevicecontainer.moc 
$(srcdir)/knetworkinfo.cpp: kselectdistrodlg.h kinterfaceupdowndlg.h kaddknownhostdlg.h kdetectdistrodlg.h kreloadnetworkdlg.h kadddevicedlg.h kadddnsserverdlg.h knetworkconfdlg.h kadddevicedlgextension.h kadddevicewifiext.h 
$(srcdir)/kknownhostinfo.cpp: kselectdistrodlg.h kinterfaceupdowndlg.h kaddknownhostdlg.h kdetectdistrodlg.h kreloadnetworkdlg.h kadddevicedlg.h kadddnsserverdlg.h knetworkconfdlg.h kadddevicedlgextension.h kadddevicewifiext.h 
$(srcdir)/kwirelessinterface.cpp: kselectdistrodlg.h kinterfaceupdowndlg.h kaddknownhostdlg.h kdetectdistrodlg.h kreloadnetworkdlg.h kadddevicedlg.h kadddnsserverdlg.h knetworkconfdlg.h kadddevicedlgextension.h kadddevicewifiext.h 
$(srcdir)/kadddevicecontainer.cpp: kselectdistrodlg.h kinterfaceupdowndlg.h kaddknownhostdlg.h kdetectdistrodlg.h kreloadnetworkdlg.h kadddevicedlg.h kadddnsserverdlg.h knetworkconfdlg.h kadddevicedlgextension.h kadddevicewifiext.h 
$(srcdir)/kaddressvalidator.cpp: kselectdistrodlg.h kinterfaceupdowndlg.h kaddknownhostdlg.h kdetectdistrodlg.h kreloadnetworkdlg.h kadddevicedlg.h kadddnsserverdlg.h knetworkconfdlg.h kadddevicedlgextension.h kadddevicewifiext.h 

#>+ 150
kadddnsserverdlg.cpp: $(srcdir)/kadddnsserverdlg.ui kadddnsserverdlg.h kadddnsserverdlg.moc
	rm -f kadddnsserverdlg.cpp
	echo '#include <kdialog.h>' > kadddnsserverdlg.cpp
	echo '#include <klocale.h>' >> kadddnsserverdlg.cpp
	$(UIC) -tr ${UIC_TR} -i kadddnsserverdlg.h $(srcdir)/kadddnsserverdlg.ui > kadddnsserverdlg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" kadddnsserverdlg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_kadddnsserverdlg,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> kadddnsserverdlg.cpp ;\
	rm -f kadddnsserverdlg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "kadddnsserverdlg.moc"' >> kadddnsserverdlg.cpp; else rm -f kadddnsserverdlg.cpp ; exit $$ret ; fi

kadddnsserverdlg.h: $(srcdir)/kadddnsserverdlg.ui
	rm -rf kadddnsserverdlg.h;
	$(UIC) $(srcdir)/kadddnsserverdlg.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> kadddnsserverdlg.h ;
kadddnsserverdlg.moc: kadddnsserverdlg.h
	$(MOC) kadddnsserverdlg.h -o kadddnsserverdlg.moc

kinterfaceupdowndlg.cpp: $(srcdir)/kinterfaceupdowndlg.ui kinterfaceupdowndlg.h kinterfaceupdowndlg.moc
	rm -f kinterfaceupdowndlg.cpp
	echo '#include <kdialog.h>' > kinterfaceupdowndlg.cpp
	echo '#include <klocale.h>' >> kinterfaceupdowndlg.cpp
	$(UIC) -tr ${UIC_TR} -i kinterfaceupdowndlg.h $(srcdir)/kinterfaceupdowndlg.ui > kinterfaceupdowndlg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" kinterfaceupdowndlg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_kinterfaceupdowndlg,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> kinterfaceupdowndlg.cpp ;\
	rm -f kinterfaceupdowndlg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "kinterfaceupdowndlg.moc"' >> kinterfaceupdowndlg.cpp; else rm -f kinterfaceupdowndlg.cpp ; exit $$ret ; fi

kinterfaceupdowndlg.h: $(srcdir)/kinterfaceupdowndlg.ui
	rm -rf kinterfaceupdowndlg.h;
	$(UIC) $(srcdir)/kinterfaceupdowndlg.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> kinterfaceupdowndlg.h ;
kinterfaceupdowndlg.moc: kinterfaceupdowndlg.h
	$(MOC) kinterfaceupdowndlg.h -o kinterfaceupdowndlg.moc

kselectdistrodlg.cpp: $(srcdir)/kselectdistrodlg.ui kselectdistrodlg.h kselectdistrodlg.moc
	rm -f kselectdistrodlg.cpp
	echo '#include <kdialog.h>' > kselectdistrodlg.cpp
	echo '#include <klocale.h>' >> kselectdistrodlg.cpp
	$(UIC) -tr ${UIC_TR} -i kselectdistrodlg.h $(srcdir)/kselectdistrodlg.ui > kselectdistrodlg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" kselectdistrodlg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_kselectdistrodlg,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> kselectdistrodlg.cpp ;\
	rm -f kselectdistrodlg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "kselectdistrodlg.moc"' >> kselectdistrodlg.cpp; else rm -f kselectdistrodlg.cpp ; exit $$ret ; fi

kselectdistrodlg.h: $(srcdir)/kselectdistrodlg.ui
	rm -rf kselectdistrodlg.h;
	$(UIC) $(srcdir)/kselectdistrodlg.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> kselectdistrodlg.h ;
kselectdistrodlg.moc: kselectdistrodlg.h
	$(MOC) kselectdistrodlg.h -o kselectdistrodlg.moc

kdetectdistrodlg.cpp: $(srcdir)/kdetectdistrodlg.ui kdetectdistrodlg.h kdetectdistrodlg.moc
	rm -f kdetectdistrodlg.cpp
	echo '#include <kdialog.h>' > kdetectdistrodlg.cpp
	echo '#include <klocale.h>' >> kdetectdistrodlg.cpp
	$(UIC) -tr ${UIC_TR} -i kdetectdistrodlg.h $(srcdir)/kdetectdistrodlg.ui > kdetectdistrodlg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" kdetectdistrodlg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_kdetectdistrodlg,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> kdetectdistrodlg.cpp ;\
	rm -f kdetectdistrodlg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "kdetectdistrodlg.moc"' >> kdetectdistrodlg.cpp; else rm -f kdetectdistrodlg.cpp ; exit $$ret ; fi

kdetectdistrodlg.h: $(srcdir)/kdetectdistrodlg.ui
	rm -rf kdetectdistrodlg.h;
	$(UIC) $(srcdir)/kdetectdistrodlg.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> kdetectdistrodlg.h ;
kdetectdistrodlg.moc: kdetectdistrodlg.h
	$(MOC) kdetectdistrodlg.h -o kdetectdistrodlg.moc

kreloadnetworkdlg.cpp: $(srcdir)/kreloadnetworkdlg.ui kreloadnetworkdlg.h kreloadnetworkdlg.moc
	rm -f kreloadnetworkdlg.cpp
	echo '#include <kdialog.h>' > kreloadnetworkdlg.cpp
	echo '#include <klocale.h>' >> kreloadnetworkdlg.cpp
	$(UIC) -tr ${UIC_TR} -i kreloadnetworkdlg.h $(srcdir)/kreloadnetworkdlg.ui > kreloadnetworkdlg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" kreloadnetworkdlg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_kreloadnetworkdlg,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> kreloadnetworkdlg.cpp ;\
	rm -f kreloadnetworkdlg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "kreloadnetworkdlg.moc"' >> kreloadnetworkdlg.cpp; else rm -f kreloadnetworkdlg.cpp ; exit $$ret ; fi

kreloadnetworkdlg.h: $(srcdir)/kreloadnetworkdlg.ui
	rm -rf kreloadnetworkdlg.h;
	$(UIC) $(srcdir)/kreloadnetworkdlg.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> kreloadnetworkdlg.h ;
kreloadnetworkdlg.moc: kreloadnetworkdlg.h
	$(MOC) kreloadnetworkdlg.h -o kreloadnetworkdlg.moc

knetworkconfdlg.cpp: $(srcdir)/knetworkconfdlg.ui knetworkconfdlg.h knetworkconfdlg.moc
	rm -f knetworkconfdlg.cpp
	echo '#include <kdialog.h>' > knetworkconfdlg.cpp
	echo '#include <klocale.h>' >> knetworkconfdlg.cpp
	$(UIC) -tr ${UIC_TR} -i knetworkconfdlg.h $(srcdir)/knetworkconfdlg.ui > knetworkconfdlg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" knetworkconfdlg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_knetworkconfdlg,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> knetworkconfdlg.cpp ;\
	rm -f knetworkconfdlg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "knetworkconfdlg.moc"' >> knetworkconfdlg.cpp; else rm -f knetworkconfdlg.cpp ; exit $$ret ; fi

knetworkconfdlg.h: $(srcdir)/knetworkconfdlg.ui
	rm -rf knetworkconfdlg.h;
	$(UIC) $(srcdir)/knetworkconfdlg.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> knetworkconfdlg.h ;
knetworkconfdlg.moc: knetworkconfdlg.h
	$(MOC) knetworkconfdlg.h -o knetworkconfdlg.moc

kadddevicedlgextension.cpp: $(srcdir)/kadddevicedlgextension.ui kadddevicedlgextension.h kadddevicedlgextension.moc
	rm -f kadddevicedlgextension.cpp
	echo '#include <kdialog.h>' > kadddevicedlgextension.cpp
	echo '#include <klocale.h>' >> kadddevicedlgextension.cpp
	$(UIC) -tr ${UIC_TR} -i kadddevicedlgextension.h $(srcdir)/kadddevicedlgextension.ui > kadddevicedlgextension.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" kadddevicedlgextension.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_kadddevicedlgextension,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> kadddevicedlgextension.cpp ;\
	rm -f kadddevicedlgextension.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "kadddevicedlgextension.moc"' >> kadddevicedlgextension.cpp; else rm -f kadddevicedlgextension.cpp ; exit $$ret ; fi

kadddevicedlgextension.h: $(srcdir)/kadddevicedlgextension.ui
	rm -rf kadddevicedlgextension.h;
	$(UIC) $(srcdir)/kadddevicedlgextension.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> kadddevicedlgextension.h ;
kadddevicedlgextension.moc: kadddevicedlgextension.h
	$(MOC) kadddevicedlgextension.h -o kadddevicedlgextension.moc

kadddevicewifiext.cpp: $(srcdir)/kadddevicewifiext.ui kadddevicewifiext.h kadddevicewifiext.moc
	rm -f kadddevicewifiext.cpp
	echo '#include <kdialog.h>' > kadddevicewifiext.cpp
	echo '#include <klocale.h>' >> kadddevicewifiext.cpp
	$(UIC) -tr ${UIC_TR} -i kadddevicewifiext.h $(srcdir)/kadddevicewifiext.ui > kadddevicewifiext.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" kadddevicewifiext.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_kadddevicewifiext,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> kadddevicewifiext.cpp ;\
	rm -f kadddevicewifiext.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "kadddevicewifiext.moc"' >> kadddevicewifiext.cpp; else rm -f kadddevicewifiext.cpp ; exit $$ret ; fi

kadddevicewifiext.h: $(srcdir)/kadddevicewifiext.ui
	rm -rf kadddevicewifiext.h;
	$(UIC) $(srcdir)/kadddevicewifiext.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> kadddevicewifiext.h ;
kadddevicewifiext.moc: kadddevicewifiext.h
	$(MOC) kadddevicewifiext.h -o kadddevicewifiext.moc

kaddknownhostdlg.cpp: $(srcdir)/kaddknownhostdlg.ui kaddknownhostdlg.h kaddknownhostdlg.moc
	rm -f kaddknownhostdlg.cpp
	echo '#include <kdialog.h>' > kaddknownhostdlg.cpp
	echo '#include <klocale.h>' >> kaddknownhostdlg.cpp
	$(UIC) -tr ${UIC_TR} -i kaddknownhostdlg.h $(srcdir)/kaddknownhostdlg.ui > kaddknownhostdlg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" kaddknownhostdlg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_kaddknownhostdlg,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> kaddknownhostdlg.cpp ;\
	rm -f kaddknownhostdlg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "kaddknownhostdlg.moc"' >> kaddknownhostdlg.cpp; else rm -f kaddknownhostdlg.cpp ; exit $$ret ; fi

kaddknownhostdlg.h: $(srcdir)/kaddknownhostdlg.ui
	rm -rf kaddknownhostdlg.h;
	$(UIC) $(srcdir)/kaddknownhostdlg.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> kaddknownhostdlg.h ;
kaddknownhostdlg.moc: kaddknownhostdlg.h
	$(MOC) kaddknownhostdlg.h -o kaddknownhostdlg.moc

kadddevicedlg.cpp: $(srcdir)/kadddevicedlg.ui kadddevicedlg.h kadddevicedlg.moc
	rm -f kadddevicedlg.cpp
	echo '#include <kdialog.h>' > kadddevicedlg.cpp
	echo '#include <klocale.h>' >> kadddevicedlg.cpp
	$(UIC) -tr ${UIC_TR} -i kadddevicedlg.h $(srcdir)/kadddevicedlg.ui > kadddevicedlg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" kadddevicedlg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_kadddevicedlg,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> kadddevicedlg.cpp ;\
	rm -f kadddevicedlg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "kadddevicedlg.moc"' >> kadddevicedlg.cpp; else rm -f kadddevicedlg.cpp ; exit $$ret ; fi

kadddevicedlg.h: $(srcdir)/kadddevicedlg.ui
	rm -rf kadddevicedlg.h;
	$(UIC) $(srcdir)/kadddevicedlg.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> kadddevicedlg.h ;
kadddevicedlg.moc: kadddevicedlg.h
	$(MOC) kadddevicedlg.h -o kadddevicedlg.moc
