# Makefile.in generated by automake 1.10.1 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# this 10 paths are KDE specific. Use them:
# kde_htmldir       Where your docs should go to. (contains lang subdirs)
# kde_appsdir       Where your application file (.desktop) should go to. 
# kde_icondir       Where your icon should go to.
# kde_minidir       Where your mini icon should go to.
# kde_datadir       Where you install application data. (Use a subdir)
# kde_locale        Where translation files should go to.(contains lang subdirs)
# kde_cgidir        Where cgi-bin executables should go to.
# kde_confdir       Where config files should go to.
# kde_mimedir       Where mimetypes should go to.
# kde_toolbardir    Where general toolbar icons should go to.
# kde_wallpaperdir  Where general wallpapers should go to.



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = kdat$(EXEEXT)
subdir = kdat
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in TODO
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(xdg_appsdir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_kdat_OBJECTS = Archive.$(OBJEXT) ArchiveInfoWidget.$(OBJEXT) \
	BackupDlg.$(OBJEXT) BackupOptDlg.$(OBJEXT) \
	BackupProfile.$(OBJEXT) BackupProfileInfoWidget.$(OBJEXT) \
	BackupProfileManager.$(OBJEXT) BackupProfileWidget.$(OBJEXT) \
	ErrorHandler.$(OBJEXT) File.$(OBJEXT) FileInfoWidget.$(OBJEXT) \
	ImageCache.$(OBJEXT) IndexDlg.$(OBJEXT) \
	InfoShellWidget.$(OBJEXT) KDatMainWindow.$(OBJEXT) \
	LoggerWidget.$(OBJEXT) Node.$(OBJEXT) Options.$(OBJEXT) \
	OptionsDlg.$(OBJEXT) Range.$(OBJEXT) Tape.$(OBJEXT) \
	TapeDrive.$(OBJEXT) TapeFileInfoWidget.$(OBJEXT) \
	TapeInfoWidget.$(OBJEXT) TapeManager.$(OBJEXT) \
	FormatOptDlg.$(OBJEXT) TarParser.$(OBJEXT) Util.$(OBJEXT) \
	VerifyDlg.$(OBJEXT) VerifyOptDlg.$(OBJEXT) ktreeview.$(OBJEXT) \
	main.$(OBJEXT)
#>- kdat_OBJECTS = $(am_kdat_OBJECTS)
#>+ 17
kdat_final_OBJECTS = kdat.all_cpp.o 
kdat_nofinal_OBJECTS = Archive.$(OBJEXT) ArchiveInfoWidget.$(OBJEXT) \
	BackupDlg.$(OBJEXT) BackupOptDlg.$(OBJEXT) \
	BackupProfile.$(OBJEXT) BackupProfileInfoWidget.$(OBJEXT) \
	BackupProfileManager.$(OBJEXT) BackupProfileWidget.$(OBJEXT) \
	ErrorHandler.$(OBJEXT) File.$(OBJEXT) FileInfoWidget.$(OBJEXT) \
	ImageCache.$(OBJEXT) IndexDlg.$(OBJEXT) \
	InfoShellWidget.$(OBJEXT) KDatMainWindow.$(OBJEXT) \
	LoggerWidget.$(OBJEXT) Node.$(OBJEXT) Options.$(OBJEXT) \
	OptionsDlg.$(OBJEXT) Range.$(OBJEXT) Tape.$(OBJEXT) \
	TapeDrive.$(OBJEXT) TapeFileInfoWidget.$(OBJEXT) \
	TapeInfoWidget.$(OBJEXT) TapeManager.$(OBJEXT) \
	FormatOptDlg.$(OBJEXT) TarParser.$(OBJEXT) Util.$(OBJEXT) \
	VerifyDlg.$(OBJEXT) VerifyOptDlg.$(OBJEXT) ktreeview.$(OBJEXT) \
	main.$(OBJEXT) OptionsDlgWidget.$(OBJEXT)
@KDE_USE_FINAL_FALSE@kdat_OBJECTS = $(kdat_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@kdat_OBJECTS = $(kdat_final_OBJECTS)
am__DEPENDENCIES_1 =
kdat_DEPENDENCIES = $(am__DEPENDENCIES_1)
#>- kdat_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(kdat_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
kdat_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(kdat_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(kdat_SOURCES)
DIST_SOURCES = $(kdat_SOURCES)
#>- RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
#>- 	html-recursive info-recursive install-data-recursive \
#>- 	install-dvi-recursive install-exec-recursive \
#>- 	install-html-recursive install-info-recursive \
#>- 	install-pdf-recursive install-ps-recursive install-recursive \
#>- 	installcheck-recursive installdirs-recursive pdf-recursive \
#>- 	ps-recursive uninstall-recursive
#>+ 7
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive nmcheck-recursive bcheck-recursive
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
xdg_appsDATA_INSTALL = $(INSTALL_DATA)
DATA = $(xdg_apps_DATA)
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
KU_FIRSTGID = @KU_FIRSTGID@
KU_FIRSTUID = @KU_FIRSTUID@
KU_HOMEDIR_PERM = @KU_HOMEDIR_PERM@
KU_MAILBOX_GID = @KU_MAILBOX_GID@
KU_MAILBOX_PERM = @KU_MAILBOX_PERM@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBGEN = @LIBGEN@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSHADOW = @LIBSHADOW@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PAMLIBS = @PAMLIBS@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SETUIDFLAGS = @SETUIDFLAGS@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
scriptsdir = @scriptsdir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@

# just set the variable
xdg_apps_DATA = kdat.desktop

# set the include path for X, qt and KDE
INCLUDES = $(all_includes)
# claim, which subdirectories you want to install
SUBDIRS = pics

# Which sources should be compiled for kdat.
#>- kdat_SOURCES = \
#>- 	Archive.cpp			\
#>- 	ArchiveInfoWidget.cpp		\
#>- 	BackupDlg.cpp			\
#>- 	BackupOptDlg.cpp		\
#>- 	BackupProfile.cpp		\
#>- 	BackupProfileInfoWidget.cpp	\
#>- 	BackupProfileManager.cpp	\
#>- 	BackupProfileWidget.cpp		\
#>- 	ErrorHandler.cpp		\
#>- 	File.cpp			\
#>- 	FileInfoWidget.cpp		\
#>- 	ImageCache.cpp			\
#>- 	IndexDlg.cpp			\
#>- 	InfoShellWidget.cpp		\
#>- 	KDatMainWindow.cpp		\
#>- 	LoggerWidget.cpp		\
#>- 	Node.cpp			\
#>- 	Options.cpp			\
#>- 	OptionsDlg.cpp			\
#>- 	OptionsDlgWidget.ui       \
#>- 	Range.cpp			\
#>- 	Tape.cpp			\
#>- 	TapeDrive.cpp			\
#>- 	TapeFileInfoWidget.cpp		\
#>- 	TapeInfoWidget.cpp		\
#>- 	TapeManager.cpp			\
#>- 	FormatOptDlg.cpp		\
#>- 	TarParser.cpp			\
#>- 	Util.cpp			\
#>- 	VerifyDlg.cpp			\
#>- 	VerifyOptDlg.cpp		\
#>- 	ktreeview.cpp			\
#>- 	main.cpp
#>+ 34
kdat_SOURCES=\
	Archive.cpp			\
	ArchiveInfoWidget.cpp		\
	BackupDlg.cpp			\
	BackupOptDlg.cpp		\
	BackupProfile.cpp		\
	BackupProfileInfoWidget.cpp	\
	BackupProfileManager.cpp	\
	BackupProfileWidget.cpp		\
	ErrorHandler.cpp		\
	File.cpp			\
	FileInfoWidget.cpp		\
	ImageCache.cpp			\
	IndexDlg.cpp			\
	InfoShellWidget.cpp		\
	KDatMainWindow.cpp		\
	LoggerWidget.cpp		\
	Node.cpp			\
	Options.cpp			\
	OptionsDlg.cpp			\
	       \
	Range.cpp			\
	Tape.cpp			\
	TapeDrive.cpp			\
	TapeFileInfoWidget.cpp		\
	TapeInfoWidget.cpp		\
	TapeManager.cpp			\
	FormatOptDlg.cpp		\
	TarParser.cpp			\
	Util.cpp			\
	VerifyDlg.cpp			\
	VerifyOptDlg.cpp		\
	ktreeview.cpp			\
	main.cpp OptionsDlgWidget.cpp


# the library search path
kdat_LDFLAGS = $(all_libraries) $(KDE_RPATH)

# the libraries to link against. Be aware of the order. First the libraries,
# that depend on the following ones.
kdat_LDADD = $(LIB_KFILE)

# this option you can leave out. Just, if you use "make dist", you need it
noinst_HEADERS = \
	Archive.h			\
	ArchiveInfoWidget.h		\
	BackupDlg.h			\
	BackupOptDlg.h			\
	BackupProfile.h			\
	BackupProfileInfoWidget.h	\
	BackupProfileManager.h		\
	BackupProfileWidget.h		\
	File.h				\
	FileInfoWidget.h		\
	ImageCache.h			\
	IndexDlg.h			\
	InfoShellWidget.h		\
	KDatMainWindow.h		\
	LoggerWidget.h			\
	Node.h				\
	Options.h			\
	OptionsDlg.h			\
	Range.h				\
	Tape.h				\
	TapeDrive.h			\
	TapeFileInfoWidget.h		\
	TapeInfoWidget.h		\
	TapeManager.h			\
	FormatOptDlg.h			\
	TarParser.h			\
	Util.h				\
	VerifyDlg.h			\
	VerifyOptDlg.h			\
	kdat.h				\
	ktreeview.h


# just to make sure, automake makes them 
#>- METASOURCES = AUTO
#>- all: all-recursive
#>+ 1
all: docs-am  all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kdat/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --foreign  kdat/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kdat/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  kdat/Makefile
	cd $(top_srcdir) && perl admin/am_edit kdat/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
kdat$(EXEEXT): $(kdat_OBJECTS) $(kdat_DEPENDENCIES) 
	@rm -f kdat$(EXEEXT)
	$(kdat_LINK) $(kdat_OBJECTS) $(kdat_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Archive.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ArchiveInfoWidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BackupDlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BackupOptDlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BackupProfile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BackupProfileInfoWidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BackupProfileManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BackupProfileWidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ErrorHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/File.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FileInfoWidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FormatOptDlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ImageCache.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IndexDlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InfoShellWidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KDatMainWindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LoggerWidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Node.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Options.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OptionsDlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Range.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Tape.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TapeDrive.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TapeFileInfoWidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TapeInfoWidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TapeManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TarParser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Util.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VerifyDlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VerifyOptDlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ktreeview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-xdg_appsDATA: $(xdg_apps_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xdg_appsdir)" || $(MKDIR_P) "$(DESTDIR)$(xdg_appsdir)"
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(xdg_appsDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  $(xdg_appsDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

uninstall-xdg_appsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(xdg_appsdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-ui clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-xdg_appsDATA

install-dvi: install-dvi-recursive

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-xdg_appsDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip install-xdg_appsDATA \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-xdg_appsDATA


messages: rc.cpp
	$(XGETTEXT) *.cpp -o $(podir)/kdat.pot
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
TapeInfoWidget.moc: $(srcdir)/TapeInfoWidget.h
	$(MOC) $(srcdir)/TapeInfoWidget.h -o TapeInfoWidget.moc

#>+ 2
mocs: TapeInfoWidget.moc

#>+ 3
KDatMainWindow.moc: $(srcdir)/KDatMainWindow.h
	$(MOC) $(srcdir)/KDatMainWindow.h -o KDatMainWindow.moc

#>+ 2
mocs: KDatMainWindow.moc

#>+ 3
InfoShellWidget.moc: $(srcdir)/InfoShellWidget.h
	$(MOC) $(srcdir)/InfoShellWidget.h -o InfoShellWidget.moc

#>+ 2
mocs: InfoShellWidget.moc

#>+ 3
BackupProfileManager.moc: $(srcdir)/BackupProfileManager.h
	$(MOC) $(srcdir)/BackupProfileManager.h -o BackupProfileManager.moc

#>+ 2
mocs: BackupProfileManager.moc

#>+ 3
Options.moc: $(srcdir)/Options.h
	$(MOC) $(srcdir)/Options.h -o Options.moc

#>+ 2
mocs: Options.moc

#>+ 3
BackupProfileWidget.moc: $(srcdir)/BackupProfileWidget.h
	$(MOC) $(srcdir)/BackupProfileWidget.h -o BackupProfileWidget.moc

#>+ 2
mocs: BackupProfileWidget.moc

#>+ 3
VerifyOptDlg.moc: $(srcdir)/VerifyOptDlg.h
	$(MOC) $(srcdir)/VerifyOptDlg.h -o VerifyOptDlg.moc

#>+ 2
mocs: VerifyOptDlg.moc

#>+ 3
VerifyDlg.moc: $(srcdir)/VerifyDlg.h
	$(MOC) $(srcdir)/VerifyDlg.h -o VerifyDlg.moc

#>+ 2
mocs: VerifyDlg.moc

#>+ 3
TapeManager.moc: $(srcdir)/TapeManager.h
	$(MOC) $(srcdir)/TapeManager.h -o TapeManager.moc

#>+ 2
mocs: TapeManager.moc

#>+ 3
FormatOptDlg.moc: $(srcdir)/FormatOptDlg.h
	$(MOC) $(srcdir)/FormatOptDlg.h -o FormatOptDlg.moc

#>+ 2
mocs: FormatOptDlg.moc

#>+ 3
FileInfoWidget.moc: $(srcdir)/FileInfoWidget.h
	$(MOC) $(srcdir)/FileInfoWidget.h -o FileInfoWidget.moc

#>+ 2
mocs: FileInfoWidget.moc

#>+ 3
BackupDlg.moc: $(srcdir)/BackupDlg.h
	$(MOC) $(srcdir)/BackupDlg.h -o BackupDlg.moc

#>+ 2
mocs: BackupDlg.moc

#>+ 3
ArchiveInfoWidget.moc: $(srcdir)/ArchiveInfoWidget.h
	$(MOC) $(srcdir)/ArchiveInfoWidget.h -o ArchiveInfoWidget.moc

#>+ 2
mocs: ArchiveInfoWidget.moc

#>+ 3
Node.moc: $(srcdir)/Node.h
	$(MOC) $(srcdir)/Node.h -o Node.moc

#>+ 2
mocs: Node.moc

#>+ 3
TarParser.moc: $(srcdir)/TarParser.h
	$(MOC) $(srcdir)/TarParser.h -o TarParser.moc

#>+ 2
mocs: TarParser.moc

#>+ 3
OptionsDlg.moc: $(srcdir)/OptionsDlg.h
	$(MOC) $(srcdir)/OptionsDlg.h -o OptionsDlg.moc

#>+ 2
mocs: OptionsDlg.moc

#>+ 3
IndexDlg.moc: $(srcdir)/IndexDlg.h
	$(MOC) $(srcdir)/IndexDlg.h -o IndexDlg.moc

#>+ 2
mocs: IndexDlg.moc

#>+ 3
TapeDrive.moc: $(srcdir)/TapeDrive.h
	$(MOC) $(srcdir)/TapeDrive.h -o TapeDrive.moc

#>+ 2
mocs: TapeDrive.moc

#>+ 3
LoggerWidget.moc: $(srcdir)/LoggerWidget.h
	$(MOC) $(srcdir)/LoggerWidget.h -o LoggerWidget.moc

#>+ 2
mocs: LoggerWidget.moc

#>+ 3
ktreeview.moc: $(srcdir)/ktreeview.h
	$(MOC) $(srcdir)/ktreeview.h -o ktreeview.moc

#>+ 2
mocs: ktreeview.moc

#>+ 3
BackupOptDlg.moc: $(srcdir)/BackupOptDlg.h
	$(MOC) $(srcdir)/BackupOptDlg.h -o BackupOptDlg.moc

#>+ 2
mocs: BackupOptDlg.moc

#>+ 3
TapeFileInfoWidget.moc: $(srcdir)/TapeFileInfoWidget.h
	$(MOC) $(srcdir)/TapeFileInfoWidget.h -o TapeFileInfoWidget.moc

#>+ 2
mocs: TapeFileInfoWidget.moc

#>+ 3
BackupProfileInfoWidget.moc: $(srcdir)/BackupProfileInfoWidget.h
	$(MOC) $(srcdir)/BackupProfileInfoWidget.h -o BackupProfileInfoWidget.moc

#>+ 2
mocs: BackupProfileInfoWidget.moc

#>+ 3
clean-metasources:
	-rm -f  TapeInfoWidget.moc KDatMainWindow.moc InfoShellWidget.moc BackupProfileManager.moc Options.moc BackupProfileWidget.moc VerifyOptDlg.moc VerifyDlg.moc TapeManager.moc FormatOptDlg.moc FileInfoWidget.moc BackupDlg.moc ArchiveInfoWidget.moc Node.moc TarParser.moc OptionsDlg.moc IndexDlg.moc TapeDrive.moc LoggerWidget.moc ktreeview.moc BackupOptDlg.moc TapeFileInfoWidget.moc BackupProfileInfoWidget.moc

#>+ 2
KDE_DIST=OptionsDlgWidget.ui.h large-kdat.png CREDITS KDat.kdoc OptionsDlgWidget.ui RELEASE_NOTES configure.in.in Makefile.in kdat.desktop Makefile.am 

#>+ 4
clean-ui:
	-rm -f \
	OptionsDlgWidget.cpp OptionsDlgWidget.h OptionsDlgWidget.moc 

#>+ 2
docs-am:

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kdat/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  kdat/Makefile
	cd $(top_srcdir) && perl admin/am_edit kdat/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-recursive

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
kdat.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/Archive.cpp $(srcdir)/ArchiveInfoWidget.cpp $(srcdir)/BackupDlg.cpp $(srcdir)/BackupOptDlg.cpp $(srcdir)/BackupProfile.cpp $(srcdir)/BackupProfileInfoWidget.cpp $(srcdir)/BackupProfileManager.cpp $(srcdir)/BackupProfileWidget.cpp $(srcdir)/ErrorHandler.cpp $(srcdir)/File.cpp $(srcdir)/FileInfoWidget.cpp $(srcdir)/ImageCache.cpp $(srcdir)/IndexDlg.cpp $(srcdir)/InfoShellWidget.cpp $(srcdir)/KDatMainWindow.cpp $(srcdir)/LoggerWidget.cpp $(srcdir)/Node.cpp $(srcdir)/Options.cpp $(srcdir)/OptionsDlg.cpp $(srcdir)/Range.cpp $(srcdir)/Tape.cpp $(srcdir)/TapeDrive.cpp $(srcdir)/TapeFileInfoWidget.cpp $(srcdir)/TapeInfoWidget.cpp $(srcdir)/TapeManager.cpp $(srcdir)/FormatOptDlg.cpp $(srcdir)/TarParser.cpp $(srcdir)/Util.cpp $(srcdir)/VerifyDlg.cpp $(srcdir)/VerifyOptDlg.cpp $(srcdir)/ktreeview.cpp $(srcdir)/main.cpp OptionsDlgWidget.cpp  KDatMainWindow.moc TapeInfoWidget.moc Options.moc BackupProfileManager.moc InfoShellWidget.moc VerifyDlg.moc VerifyOptDlg.moc BackupProfileWidget.moc FileInfoWidget.moc FormatOptDlg.moc TapeManager.moc BackupDlg.moc ArchiveInfoWidget.moc Node.moc OptionsDlgWidget.moc TarParser.moc OptionsDlg.moc IndexDlg.moc TapeDrive.moc LoggerWidget.moc ktreeview.moc BackupOptDlg.moc TapeFileInfoWidget.moc BackupProfileInfoWidget.moc
	@echo 'creating kdat.all_cpp.cpp ...'; \
	rm -f kdat.all_cpp.files kdat.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> kdat.all_cpp.final; \
	for file in Archive.cpp ArchiveInfoWidget.cpp BackupDlg.cpp BackupOptDlg.cpp BackupProfile.cpp BackupProfileInfoWidget.cpp BackupProfileManager.cpp BackupProfileWidget.cpp ErrorHandler.cpp File.cpp FileInfoWidget.cpp ImageCache.cpp IndexDlg.cpp InfoShellWidget.cpp KDatMainWindow.cpp LoggerWidget.cpp Node.cpp Options.cpp OptionsDlg.cpp Range.cpp Tape.cpp TapeDrive.cpp TapeFileInfoWidget.cpp TapeInfoWidget.cpp TapeManager.cpp FormatOptDlg.cpp TarParser.cpp Util.cpp VerifyDlg.cpp VerifyOptDlg.cpp ktreeview.cpp main.cpp OptionsDlgWidget.cpp ; do \
	  echo "#include \"$$file\"" >> kdat.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> kdat.all_cpp.final; \
	done; \
	cat kdat.all_cpp.final kdat.all_cpp.files > kdat.all_cpp.cpp; \
	rm -f kdat.all_cpp.final kdat.all_cpp.files

#>+ 3
clean-final:
	-rm -f kdat.all_cpp.cpp

#>+ 3
final:
	$(MAKE) kdat_OBJECTS="$(kdat_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) kdat_OBJECTS="$(kdat_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) kdat_OBJECTS="$(kdat_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) kdat_OBJECTS="$(kdat_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 81
InfoShellWidget.lo: InfoShellWidget.moc 
$(srcdir)/BackupProfileManager.cpp: OptionsDlgWidget.h 
KDatMainWindow.lo: KDatMainWindow.moc 
BackupProfileInfoWidget.lo: BackupProfileInfoWidget.moc 
$(srcdir)/Options.cpp: OptionsDlgWidget.h 
VerifyOptDlg.o: VerifyOptDlg.moc 
$(srcdir)/main.cpp: OptionsDlgWidget.h 
BackupDlg.lo: BackupDlg.moc 
OptionsDlg.o: OptionsDlg.moc 
$(srcdir)/FileInfoWidget.cpp: OptionsDlgWidget.h 
$(srcdir)/TapeFileInfoWidget.cpp: OptionsDlgWidget.h 
$(srcdir)/KDatMainWindow.cpp: OptionsDlgWidget.h 
VerifyDlg.lo: VerifyDlg.moc 
TapeFileInfoWidget.lo: TapeFileInfoWidget.moc 
nmcheck-am: nmcheck
$(srcdir)/BackupProfileInfoWidget.cpp: OptionsDlgWidget.h 
BackupDlg.o: BackupDlg.moc 
VerifyDlg.o: VerifyDlg.moc 
LoggerWidget.o: LoggerWidget.moc 
TapeManager.lo: TapeManager.moc 
$(srcdir)/LoggerWidget.cpp: OptionsDlgWidget.h 
IndexDlg.lo: IndexDlg.moc 
$(srcdir)/VerifyDlg.cpp: OptionsDlgWidget.h 
ArchiveInfoWidget.lo: ArchiveInfoWidget.moc 
BackupProfileManager.o: BackupProfileManager.moc 
$(srcdir)/OptionsDlg.cpp: OptionsDlgWidget.h 
$(srcdir)/TarParser.cpp: OptionsDlgWidget.h 
BackupProfileWidget.lo: BackupProfileWidget.moc 
$(srcdir)/Range.cpp: OptionsDlgWidget.h 
$(srcdir)/ArchiveInfoWidget.cpp: OptionsDlgWidget.h 
KDatMainWindow.o: KDatMainWindow.moc 
$(srcdir)/TapeInfoWidget.cpp: OptionsDlgWidget.h 
TapeDrive.o: TapeDrive.moc 
$(srcdir)/TapeDrive.cpp: OptionsDlgWidget.h 
$(srcdir)/BackupDlg.cpp: OptionsDlgWidget.h 
TarParser.o: TarParser.moc 
BackupProfileWidget.o: BackupProfileWidget.moc 
TapeFileInfoWidget.o: TapeFileInfoWidget.moc 
FileInfoWidget.lo: FileInfoWidget.moc 
LoggerWidget.lo: LoggerWidget.moc 
$(srcdir)/InfoShellWidget.cpp: OptionsDlgWidget.h 
FormatOptDlg.lo: FormatOptDlg.moc 
BackupOptDlg.o: BackupOptDlg.moc 
$(srcdir)/ktreeview.cpp: OptionsDlgWidget.h 
$(srcdir)/FormatOptDlg.cpp: OptionsDlgWidget.h 
TapeManager.o: TapeManager.moc 
ktreeview.o: ktreeview.moc 
$(srcdir)/TapeManager.cpp: OptionsDlgWidget.h 
BackupProfileInfoWidget.o: BackupProfileInfoWidget.moc 
BackupProfileManager.lo: BackupProfileManager.moc 
$(srcdir)/Node.cpp: OptionsDlgWidget.h 
$(srcdir)/BackupProfileWidget.cpp: OptionsDlgWidget.h 
TapeInfoWidget.o: TapeInfoWidget.moc 
$(srcdir)/BackupOptDlg.cpp: OptionsDlgWidget.h 
ktreeview.lo: ktreeview.moc 
FileInfoWidget.o: FileInfoWidget.moc 
$(srcdir)/Tape.cpp: OptionsDlgWidget.h 
BackupOptDlg.lo: BackupOptDlg.moc 
Options.lo: Options.moc 
$(srcdir)/ImageCache.cpp: OptionsDlgWidget.h 
Node.lo: Node.moc 
FormatOptDlg.o: FormatOptDlg.moc 
VerifyOptDlg.lo: VerifyOptDlg.moc 
TapeInfoWidget.lo: TapeInfoWidget.moc 
TarParser.lo: TarParser.moc 
OptionsDlg.lo: OptionsDlg.moc 
ArchiveInfoWidget.o: ArchiveInfoWidget.moc 
$(srcdir)/Archive.cpp: OptionsDlgWidget.h 
IndexDlg.o: IndexDlg.moc 
TapeDrive.lo: TapeDrive.moc 
$(srcdir)/IndexDlg.cpp: OptionsDlgWidget.h 
Node.o: Node.moc 
nmcheck: 
$(srcdir)/BackupProfile.cpp: OptionsDlgWidget.h 
InfoShellWidget.o: InfoShellWidget.moc 
Options.o: Options.moc 
$(srcdir)/VerifyOptDlg.cpp: OptionsDlgWidget.h 
$(srcdir)/File.cpp: OptionsDlgWidget.h 
$(srcdir)/ErrorHandler.cpp: OptionsDlgWidget.h 
$(srcdir)/Util.cpp: OptionsDlgWidget.h 

#>+ 15
OptionsDlgWidget.cpp: $(srcdir)/OptionsDlgWidget.ui OptionsDlgWidget.h OptionsDlgWidget.moc
	rm -f OptionsDlgWidget.cpp
	echo '#include <kdialog.h>' > OptionsDlgWidget.cpp
	echo '#include <klocale.h>' >> OptionsDlgWidget.cpp
	$(UIC) -tr ${UIC_TR} -i OptionsDlgWidget.h $(srcdir)/OptionsDlgWidget.ui > OptionsDlgWidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" OptionsDlgWidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_OptionsDlgWidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> OptionsDlgWidget.cpp ;\
	rm -f OptionsDlgWidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "OptionsDlgWidget.moc"' >> OptionsDlgWidget.cpp; else rm -f OptionsDlgWidget.cpp ; exit $$ret ; fi

OptionsDlgWidget.h: $(srcdir)/OptionsDlgWidget.ui
	rm -rf OptionsDlgWidget.h;
	$(UIC) $(srcdir)/OptionsDlgWidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> OptionsDlgWidget.h ;
OptionsDlgWidget.moc: OptionsDlgWidget.h
	$(MOC) OptionsDlgWidget.h -o OptionsDlgWidget.moc
