# Makefile.in generated by automake 1.10.1 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# $Id: Makefile.am 434809 2005-07-15 13:20:54Z mueller $




VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = artsd$(EXEEXT) artsplay$(EXEEXT) artscat$(EXEEXT) \
	artswrapper$(EXEEXT) artsshell$(EXEEXT) artsrec$(EXEEXT)
subdir = soundserver
DIST_COMMON = $(artsinclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/artsversion-new.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h \
	$(top_builddir)/mcop/arts_export.h \
	$(top_builddir)/artsc/artsc_export.h
CONFIG_CLEAN_FILES = artsversion-new.h
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(mcopclassdir)" "$(DESTDIR)$(mcoptypedir)" \
	"$(DESTDIR)$(artsincludedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libartsgslplayobject_la_DEPENDENCIES =  \
	$(top_builddir)/mcop/libmcop.la libsoundserver_idl.la \
	$(FLOWLIBS)
am_libartsgslplayobject_la_OBJECTS = gslplayobject_impl.lo
#>- libartsgslplayobject_la_OBJECTS =  \
#>- 	$(am_libartsgslplayobject_la_OBJECTS)
#>+ 1
libartsgslplayobject_la_OBJECTS = gslplayobject_impl.lo
#>- libartsgslplayobject_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(libartsgslplayobject_la_LDFLAGS) $(LDFLAGS) -o \
#>- 	$@
#>+ 4
libartsgslplayobject_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(libartsgslplayobject_la_LDFLAGS) $(LDFLAGS) -o \
	$@
libartswavplayobject_la_DEPENDENCIES =  \
	$(top_builddir)/mcop/libmcop.la libsoundserver_idl.la \
	$(FLOWLIBS)
am_libartswavplayobject_la_OBJECTS = wavplayobject_impl.lo
#>- libartswavplayobject_la_OBJECTS =  \
#>- 	$(am_libartswavplayobject_la_OBJECTS)
#>+ 1
libartswavplayobject_la_OBJECTS = wavplayobject_impl.lo
#>- libartswavplayobject_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(libartswavplayobject_la_LDFLAGS) $(LDFLAGS) -o \
#>- 	$@
#>+ 4
libartswavplayobject_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(libartswavplayobject_la_LDFLAGS) $(LDFLAGS) -o \
	$@
libkmedia2_la_DEPENDENCIES = libkmedia2_idl.la $(FLOWLIBS)
am_libkmedia2_la_OBJECTS = fileinputstream_impl.lo \
	stdoutwriter_impl.lo
#>- libkmedia2_la_OBJECTS = $(am_libkmedia2_la_OBJECTS)
#>+ 5
libkmedia2_la_final_OBJECTS = libkmedia2_la.all_cc.lo 
libkmedia2_la_nofinal_OBJECTS = fileinputstream_impl.lo \
	stdoutwriter_impl.lo
@KDE_USE_FINAL_FALSE@libkmedia2_la_OBJECTS = $(libkmedia2_la_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@libkmedia2_la_OBJECTS = $(libkmedia2_la_final_OBJECTS)
#>- libkmedia2_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(libkmedia2_la_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
libkmedia2_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(libkmedia2_la_LDFLAGS) $(LDFLAGS) -o $@
libkmedia2_idl_la_DEPENDENCIES = $(top_builddir)/flow/libartsflow.la
am_libkmedia2_idl_la_OBJECTS = kmedia2.lo
#>- libkmedia2_idl_la_OBJECTS = $(am_libkmedia2_idl_la_OBJECTS)
#>+ 1
libkmedia2_idl_la_OBJECTS = kmedia2.lo
#>- libkmedia2_idl_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(libkmedia2_idl_la_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
libkmedia2_idl_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(libkmedia2_idl_la_LDFLAGS) $(LDFLAGS) -o $@
libsoundserver_idl_la_DEPENDENCIES = libkmedia2_idl.la \
	$(top_builddir)/flow/libartsflow_idl.la
am_libsoundserver_idl_la_OBJECTS = soundserver.lo
#>- libsoundserver_idl_la_OBJECTS = $(am_libsoundserver_idl_la_OBJECTS)
#>+ 1
libsoundserver_idl_la_OBJECTS = soundserver.lo
#>- libsoundserver_idl_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(libsoundserver_idl_la_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
libsoundserver_idl_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(libsoundserver_idl_la_LDFLAGS) $(LDFLAGS) -o $@
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_artscat_OBJECTS = artscat.$(OBJEXT)
#>- artscat_OBJECTS = $(am_artscat_OBJECTS)
#>+ 1
artscat_OBJECTS = artscat.$(OBJEXT)
am__DEPENDENCIES_1 =
artscat_DEPENDENCIES = libsoundserver_idl.la $(FLOWLIBS) \
	$(am__DEPENDENCIES_1)
#>- artscat_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(artscat_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
artscat_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(artscat_LDFLAGS) $(LDFLAGS) -o $@
am_artsd_OBJECTS = soundserverv2_impl.$(OBJEXT) \
	soundserver_impl.$(OBJEXT) simplesoundserver_impl.$(OBJEXT) \
	artsd.$(OBJEXT) cpuusage.$(OBJEXT) \
	samplestorage_impl.$(OBJEXT) crashhandler.$(OBJEXT) \
	soundserverstartup_impl.$(OBJEXT)
#>- artsd_OBJECTS = $(am_artsd_OBJECTS)
#>+ 8
artsd_final_OBJECTS = artsd.all_cc.o 
artsd_nofinal_OBJECTS = soundserverv2_impl.$(OBJEXT) \
	soundserver_impl.$(OBJEXT) simplesoundserver_impl.$(OBJEXT) \
	artsd.$(OBJEXT) cpuusage.$(OBJEXT) \
	samplestorage_impl.$(OBJEXT) crashhandler.$(OBJEXT) \
	soundserverstartup_impl.$(OBJEXT)
@KDE_USE_FINAL_FALSE@artsd_OBJECTS = $(artsd_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@artsd_OBJECTS = $(artsd_final_OBJECTS)
artsd_DEPENDENCIES = libsoundserver_idl.la $(FLOWLIBS) \
	$(top_builddir)/mcop_mt/libmcop_mt.la
#>- artsd_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(artsd_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
artsd_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(artsd_LDFLAGS) $(LDFLAGS) -o $@
am_artsplay_OBJECTS = artsplay.$(OBJEXT)
#>- artsplay_OBJECTS = $(am_artsplay_OBJECTS)
#>+ 1
artsplay_OBJECTS = artsplay.$(OBJEXT)
artsplay_DEPENDENCIES = libsoundserver_idl.la $(am__DEPENDENCIES_1)
#>- artsplay_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(artsplay_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
artsplay_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(artsplay_LDFLAGS) $(LDFLAGS) -o $@
am_artsrec_OBJECTS = artsrec.$(OBJEXT)
#>- artsrec_OBJECTS = $(am_artsrec_OBJECTS)
#>+ 1
artsrec_OBJECTS = artsrec.$(OBJEXT)
artsrec_DEPENDENCIES = libsoundserver_idl.la $(FLOWLIBS) \
	$(am__DEPENDENCIES_1)
#>- artsrec_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(artsrec_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
artsrec_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(artsrec_LDFLAGS) $(LDFLAGS) -o $@
am_artsshell_OBJECTS = artsshell.$(OBJEXT) tradercheck.$(OBJEXT)
#>- artsshell_OBJECTS = $(am_artsshell_OBJECTS)
#>+ 4
artsshell_final_OBJECTS = artsshell.all_cc.o 
artsshell_nofinal_OBJECTS = artsshell.$(OBJEXT) tradercheck.$(OBJEXT)
@KDE_USE_FINAL_FALSE@artsshell_OBJECTS = $(artsshell_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@artsshell_OBJECTS = $(artsshell_final_OBJECTS)
artsshell_DEPENDENCIES = libsoundserver_idl.la $(am__DEPENDENCIES_1)
#>- artsshell_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(artsshell_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
artsshell_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(artsshell_LDFLAGS) $(LDFLAGS) -o $@
am_artswrapper_OBJECTS = artswrapper-artswrapper.$(OBJEXT)
#>- artswrapper_OBJECTS = $(am_artswrapper_OBJECTS)
#>+ 1
artswrapper_OBJECTS = artswrapper-artswrapper.$(OBJEXT)
artswrapper_DEPENDENCIES = $(am__DEPENDENCIES_1)
artswrapper_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(artswrapper_CFLAGS) \
	$(CFLAGS) $(artswrapper_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir) -I$(top_builddir)/mcop -I$(top_builddir)/artsc
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libartsgslplayobject_la_SOURCES) \
	$(libartswavplayobject_la_SOURCES) $(libkmedia2_la_SOURCES) \
	$(libkmedia2_idl_la_SOURCES) $(libsoundserver_idl_la_SOURCES) \
	$(artscat_SOURCES) $(artsd_SOURCES) $(artsplay_SOURCES) \
	$(artsrec_SOURCES) $(artsshell_SOURCES) $(artswrapper_SOURCES)
DIST_SOURCES = $(libartsgslplayobject_la_SOURCES) \
	$(libartswavplayobject_la_SOURCES) $(libkmedia2_la_SOURCES) \
	$(libkmedia2_idl_la_SOURCES) $(libsoundserver_idl_la_SOURCES) \
	$(artscat_SOURCES) $(artsd_SOURCES) $(artsplay_SOURCES) \
	$(artsrec_SOURCES) $(artsshell_SOURCES) $(artswrapper_SOURCES)
mcopclassDATA_INSTALL = $(INSTALL_DATA)
mcoptypeDATA_INSTALL = $(INSTALL_DATA)
DATA = $(mcopclass_DATA) $(mcoptype_DATA)
artsincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(artsinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AR = @AR@
ARTS_MAJOR_VERSION = @ARTS_MAJOR_VERSION@
ARTS_MICRO_VERSION = @ARTS_MICRO_VERSION@
ARTS_MINOR_VERSION = @ARTS_MINOR_VERSION@
ARTS_VERSION = @ARTS_VERSION@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
EXTRA_SUBDIRS = @EXTRA_SUBDIRS@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_LDFLAGS = @GLIB_LDFLAGS@
GLIB_LIBADD = @GLIB_LIBADD@
GREP = @GREP@
GSL_CFLAGS = @GSL_CFLAGS@
GSL_HAVE_LIBMAD = @GSL_HAVE_LIBMAD@
GSL_HAVE_MUTEXATTR_SETTYPE = @GSL_HAVE_MUTEXATTR_SETTYPE@
GSL_HAVE_OGGVORBIS = @GSL_HAVE_OGGVORBIS@
GSL_HAVE_OGGVORBIS_RC3 = @GSL_HAVE_OGGVORBIS_RC3@
GSL_LIBS = @GSL_LIBS@
GSL_SIZEOF_PTH_COND_T = @GSL_SIZEOF_PTH_COND_T@
GSL_SIZEOF_PTH_MUTEX_T = @GSL_SIZEOF_PTH_MUTEX_T@
GSL_SIZEOF_STD_INTMAX_T = @GSL_SIZEOF_STD_INTMAX_T@
GSL_USE_ARTS_THREADS = @GSL_USE_ARTS_THREADS@
GSL_USE_GSL_GLIB = @GSL_USE_GSL_GLIB@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JACK_CFLAGS = @JACK_CFLAGS@
JACK_LDFLAGS = @JACK_LDFLAGS@
JACK_LIBADD = @JACK_LIBADD@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LIBADD_DL = @LIBADD_DL@
LIBASOUND = @LIBASOUND@
LIBAUDIOFILE = @LIBAUDIOFILE@
LIBAUDIOFILE_LDFLAGS = @LIBAUDIOFILE_LDFLAGS@
LIBAUDIOIO = @LIBAUDIOIO@
LIBAUDIONAS = @LIBAUDIONAS@
LIBAUDIONAS_LDFLAGS = @LIBAUDIONAS_LDFLAGS@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBCSL = @LIBCSL@
LIBDL = @LIBDL@
LIBESD = @LIBESD@
LIBESD_LDFLAGS = @LIBESD_LDFLAGS@
LIBICE = @LIBICE@
LIBJPEG = @LIBJPEG@
LIBMAS = @LIBMAS@
LIBOBJS = @LIBOBJS@
LIBOSSAUDIO = @LIBOSSAUDIO@
LIBPNG = @LIBPNG@
LIBPOSIX4 = @LIBPOSIX4@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSEM = @LIBSEM@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAS_CFLAGS = @MAS_CFLAGS@
MAS_CONFIG = @MAS_CONFIG@
MAS_LDFLAGS = @MAS_LDFLAGS@
MCOPIDL = @MCOPIDL@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SGILIBAUDIO = @SGILIBAUDIO@
SHELL = @SHELL@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XMKMF = @XMKMF@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_includes = @kde_includes@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_qtver = @kde_qtver@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
x_includes = @x_includes@
x_libraries = @x_libraries@

# necessary for artswrapper
artsdpath = $(bindir)/artsd
INCLUDES = -I$(top_srcdir)/mcop -I$(top_builddir)/mcop -I$(top_srcdir)/flow \
   -I$(top_builddir)/flow -DEXECUTE=\"$(artsdpath)\" $(all_includes)

MCOPINC = -I$(srcdir) -I$(top_srcdir)/flow -I$(top_srcdir)/mcop
FLOWLIBS = $(top_builddir)/flow/libartsflow.la

####### install idl files
artsincludedir = $(includedir)/arts
artsinclude_HEADERS = soundserver.h soundserver.idl kmedia2.h kmedia2.idl \
	artsversion.h


####### libsoundserver_idl, libkmedia2_idl (idl files as library)
lib_LTLIBRARIES = libkmedia2_idl.la libsoundserver_idl.la \
	libartsgslplayobject.la libartswavplayobject.la libkmedia2.la

AM_LDFLAGS = $(LDFLAGS_AS_NEEDED)
libsoundserver_idl_la_LIBADD = libkmedia2_idl.la \
                          $(top_builddir)/flow/libartsflow_idl.la

libsoundserver_idl_la_LDFLAGS = -no-undefined -version-info 1:0 $(all_libraries)
libsoundserver_idl_la_SOURCES = soundserver.cc
libsoundserver_idl_la_COMPILE_FIRST = soundserver.h
libkmedia2_idl_la_SOURCES = kmedia2.cc
libkmedia2_idl_la_COMPILE_FIRST = kmedia2.h
libkmedia2_idl_la_LIBADD = $(top_builddir)/flow/libartsflow.la
libkmedia2_idl_la_LDFLAGS = -no-undefined -version-info 1:0 $(all_libraries)
libkmedia2_la_SOURCES = fileinputstream_impl.cc stdoutwriter_impl.cc
libkmedia2_la_LIBADD = libkmedia2_idl.la $(FLOWLIBS)
libkmedia2_la_LDFLAGS = -no-undefined -version-info 1:0 $(all_libraries)
libkmedia2_la_COMPILE_FIRST = kmedia2.h ../flow/artsflow.h
libartswavplayobject_la_SOURCES = wavplayobject_impl.cc
libartswavplayobject_la_LIBADD = $(top_builddir)/mcop/libmcop.la \
                                  libsoundserver_idl.la $(FLOWLIBS)

libartswavplayobject_la_LDFLAGS = -no-undefined -module $(all_libraries)
libartswavplayobject_la_COMPILE_FIRST = soundserver.h ../flow/artsflow.h
libartsgslplayobject_la_SOURCES = gslplayobject_impl.cc
libartsgslplayobject_la_LIBADD = $(top_builddir)/mcop/libmcop.la \
                                  libsoundserver_idl.la $(FLOWLIBS)

libartsgslplayobject_la_LDFLAGS = -no-undefined -module $(all_libraries)
libartsgslplayobject_la_COMPILE_FIRST = soundserver.h ../flow/artsflow.h
artsd_LDADD = libsoundserver_idl.la $(FLOWLIBS) \
              $(top_builddir)/mcop_mt/libmcop_mt.la

artsd_LDFLAGS = $(USE_THREADS)
artsd_SOURCES = soundserverv2_impl.cc soundserver_impl.cc simplesoundserver_impl.cc artsd.cc cpuusage.cc samplestorage_impl.cc crashhandler.cc soundserverstartup_impl.cc
artsd_COMPILE_FIRST = soundserver.h artsversion.h
artscat_LDADD = libsoundserver_idl.la $(FLOWLIBS) $(LIBPTHREAD)
artscat_LDFLAGS = $(USE_THREADS)
artscat_SOURCES = artscat.cc
artscat_COMPILE_FIRST = soundserver.h artsversion.h 
artsrec_LDADD = libsoundserver_idl.la $(FLOWLIBS) $(LIBPTHREAD)
artsrec_LDFLAGS = $(USE_THREADS)
artsrec_SOURCES = artsrec.cc
artsrec_COMPILE_FIRST = soundserver.h artsversion.h
artsplay_LDADD = libsoundserver_idl.la $(LIBPTHREAD)
artsplay_LDFLAGS = $(USE_THREADS)
artsplay_SOURCES = artsplay.cc
artsplay_COMPILE_FIRST = soundserver.h artsversion.h
artswrapper_SOURCES = artswrapper.c
artswrapper_CFLAGS = $(KDE_USE_FPIE)
artswrapper_INCLUDES = -I$(top_builddir) -DEXECUTE=\"$(artsdpath)\"
artswrapper_LDADD = $(LIBPOSIX4)
artswrapper_LDFLAGS = $(KDE_USE_PIE)
artsshell_LDADD = libsoundserver_idl.la $(LIBPTHREAD)
artsshell_LDFLAGS = $(USE_THREADS)
artsshell_SOURCES = artsshell.cc tradercheck.cc
artsshell_COMPILE_FIRST = soundserver.h artsversion.h ../flow/artsflow.h
DISTCLEANFILES = soundserver.cc soundserver.h soundserver.mcopclass \
  soundserver.mcoptype kmedia2.h kmedia2.cc kmedia2.mcopclass kmedia2.mcoptype artsversion.h

@HAVE_WAVSUPPORT_TRUE@WAV_MCOPCLASS = WavPlayObject.mcopclass 
mcopclassdir = $(libdir)/mcop/Arts
mcopclass_DATA = FileInputStream.mcopclass $(WAV_MCOPCLASS) GSLPlayObject.mcopclass

#install-exec-hook: 
#	@(chown root $(DESTDIR)$(bindir)/artswrapper && chmod 4755 $(DESTDIR)$(bindir)/artswrapper) \
#		|| echo "please make $(DESTDIR)$(bindir)/artswrapper suid root"

######## install idl typeinfo files
mcoptypedir = $(libdir)/mcop
mcoptype_DATA = soundserver.mcoptype soundserver.mcopclass \
	kmedia2.mcoptype kmedia2.mcopclass

#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .c .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  soundserver/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --foreign  soundserver/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  soundserver/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  soundserver/Makefile
	cd $(top_srcdir) && perl admin/am_edit soundserver/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
artsversion-new.h: $(top_builddir)/config.status $(srcdir)/artsversion-new.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libartsgslplayobject.la: $(libartsgslplayobject_la_OBJECTS) $(libartsgslplayobject_la_DEPENDENCIES) 
	$(libartsgslplayobject_la_LINK) -rpath $(libdir) $(libartsgslplayobject_la_OBJECTS) $(libartsgslplayobject_la_LIBADD) $(LIBS)
libartswavplayobject.la: $(libartswavplayobject_la_OBJECTS) $(libartswavplayobject_la_DEPENDENCIES) 
	$(libartswavplayobject_la_LINK) -rpath $(libdir) $(libartswavplayobject_la_OBJECTS) $(libartswavplayobject_la_LIBADD) $(LIBS)
libkmedia2.la: $(libkmedia2_la_OBJECTS) $(libkmedia2_la_DEPENDENCIES) 
	$(libkmedia2_la_LINK) -rpath $(libdir) $(libkmedia2_la_OBJECTS) $(libkmedia2_la_LIBADD) $(LIBS)
libkmedia2_idl.la: $(libkmedia2_idl_la_OBJECTS) $(libkmedia2_idl_la_DEPENDENCIES) 
	$(libkmedia2_idl_la_LINK) -rpath $(libdir) $(libkmedia2_idl_la_OBJECTS) $(libkmedia2_idl_la_LIBADD) $(LIBS)
libsoundserver_idl.la: $(libsoundserver_idl_la_OBJECTS) $(libsoundserver_idl_la_DEPENDENCIES) 
	$(libsoundserver_idl_la_LINK) -rpath $(libdir) $(libsoundserver_idl_la_OBJECTS) $(libsoundserver_idl_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
artscat$(EXEEXT): $(artscat_OBJECTS) $(artscat_DEPENDENCIES) 
	@rm -f artscat$(EXEEXT)
	$(artscat_LINK) $(artscat_OBJECTS) $(artscat_LDADD) $(LIBS)
artsd$(EXEEXT): $(artsd_OBJECTS) $(artsd_DEPENDENCIES) 
	@rm -f artsd$(EXEEXT)
	$(artsd_LINK) $(artsd_OBJECTS) $(artsd_LDADD) $(LIBS)
artsplay$(EXEEXT): $(artsplay_OBJECTS) $(artsplay_DEPENDENCIES) 
	@rm -f artsplay$(EXEEXT)
	$(artsplay_LINK) $(artsplay_OBJECTS) $(artsplay_LDADD) $(LIBS)
artsrec$(EXEEXT): $(artsrec_OBJECTS) $(artsrec_DEPENDENCIES) 
	@rm -f artsrec$(EXEEXT)
	$(artsrec_LINK) $(artsrec_OBJECTS) $(artsrec_LDADD) $(LIBS)
artsshell$(EXEEXT): $(artsshell_OBJECTS) $(artsshell_DEPENDENCIES) 
	@rm -f artsshell$(EXEEXT)
	$(artsshell_LINK) $(artsshell_OBJECTS) $(artsshell_LDADD) $(LIBS)
artswrapper$(EXEEXT): $(artswrapper_OBJECTS) $(artswrapper_DEPENDENCIES) 
	@rm -f artswrapper$(EXEEXT)
	$(artswrapper_LINK) $(artswrapper_OBJECTS) $(artswrapper_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/artscat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/artsd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/artsplay.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/artsrec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/artsshell.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/artswrapper-artswrapper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpuusage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crashhandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fileinputstream_impl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gslplayobject_impl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kmedia2.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/samplestorage_impl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simplesoundserver_impl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/soundserver.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/soundserver_impl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/soundserverstartup_impl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/soundserverv2_impl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stdoutwriter_impl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tradercheck.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wavplayobject_impl.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

artswrapper-artswrapper.o: artswrapper.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(artswrapper_CFLAGS) $(CFLAGS) -MT artswrapper-artswrapper.o -MD -MP -MF $(DEPDIR)/artswrapper-artswrapper.Tpo -c -o artswrapper-artswrapper.o `test -f 'artswrapper.c' || echo '$(srcdir)/'`artswrapper.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/artswrapper-artswrapper.Tpo $(DEPDIR)/artswrapper-artswrapper.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='artswrapper.c' object='artswrapper-artswrapper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(artswrapper_CFLAGS) $(CFLAGS) -c -o artswrapper-artswrapper.o `test -f 'artswrapper.c' || echo '$(srcdir)/'`artswrapper.c

artswrapper-artswrapper.obj: artswrapper.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(artswrapper_CFLAGS) $(CFLAGS) -MT artswrapper-artswrapper.obj -MD -MP -MF $(DEPDIR)/artswrapper-artswrapper.Tpo -c -o artswrapper-artswrapper.obj `if test -f 'artswrapper.c'; then $(CYGPATH_W) 'artswrapper.c'; else $(CYGPATH_W) '$(srcdir)/artswrapper.c'; fi`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/artswrapper-artswrapper.Tpo $(DEPDIR)/artswrapper-artswrapper.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='artswrapper.c' object='artswrapper-artswrapper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(artswrapper_CFLAGS) $(CFLAGS) -c -o artswrapper-artswrapper.obj `if test -f 'artswrapper.c'; then $(CYGPATH_W) 'artswrapper.c'; else $(CYGPATH_W) '$(srcdir)/artswrapper.c'; fi`

.cc.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-mcopclassDATA: $(mcopclass_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(mcopclassdir)" || $(MKDIR_P) "$(DESTDIR)$(mcopclassdir)"
	@list='$(mcopclass_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(mcopclassDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(mcopclassdir)/$$f'"; \
	  $(mcopclassDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(mcopclassdir)/$$f"; \
	done

uninstall-mcopclassDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(mcopclass_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(mcopclassdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(mcopclassdir)/$$f"; \
	done
install-mcoptypeDATA: $(mcoptype_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(mcoptypedir)" || $(MKDIR_P) "$(DESTDIR)$(mcoptypedir)"
	@list='$(mcoptype_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(mcoptypeDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(mcoptypedir)/$$f'"; \
	  $(mcoptypeDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(mcoptypedir)/$$f"; \
	done

uninstall-mcoptypeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(mcoptype_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(mcoptypedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(mcoptypedir)/$$f"; \
	done
install-artsincludeHEADERS: $(artsinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(artsincludedir)" || $(MKDIR_P) "$(DESTDIR)$(artsincludedir)"
	@list='$(artsinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(artsincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(artsincludedir)/$$f'"; \
	  $(artsincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(artsincludedir)/$$f"; \
	done

uninstall-artsincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(artsinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(artsincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(artsincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(mcopclassdir)" "$(DESTDIR)$(mcoptypedir)" "$(DESTDIR)$(artsincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
#>- 	clean-libtool mostlyclean-am
#>+ 2
clean-am: clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-artsincludeHEADERS install-mcopclassDATA \
	install-mcoptypeDATA

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-artsincludeHEADERS uninstall-binPROGRAMS \
	uninstall-libLTLIBRARIES uninstall-mcopclassDATA \
	uninstall-mcoptypeDATA

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am \
	install-artsincludeHEADERS install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-mcopclassDATA install-mcoptypeDATA install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-artsincludeHEADERS \
	uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-mcopclassDATA uninstall-mcoptypeDATA


####### Build rules
soundserver.mcoptype: soundserver.h
soundserver.mcopclass: soundserver.h
soundserver.cc soundserver.h: $(top_srcdir)/soundserver/soundserver.idl kmedia2.h $(MCOPIDL) ../flow/artsflow.h
	$(MCOPIDL) -t $(MCOPINC) $(top_srcdir)/soundserver/soundserver.idl

kmedia2.mcoptype: kmedia2.h
kmedia2.mcopclass: kmedia2.h
kmedia2.cc kmedia2.h: $(top_srcdir)/soundserver/kmedia2.idl $(MCOPIDL) ../flow/artsflow.h
	$(MCOPIDL) -t $(MCOPINC) $(top_srcdir)/soundserver/kmedia2.idl

artsversion.h: artsversion-new.h
	(cmp -s artsversion-new.h artsversion.h \
	  || cp artsversion-new.h artsversion.h) 
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 2
KDE_DIST=tradercheck.h soundserverv2_impl.h WavPlayObject.mcopclass soundserverstartup_impl.h FileInputStream.mcopclass artsversion-new.h.in crashhandler.h soundserver_impl.h GSLPlayObject.mcopclass cpuusage.h Makefile.in simplesoundserver_impl.h Makefile.am 

#>+ 2
docs-am:

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  soundserver/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  soundserver/Makefile
	cd $(top_srcdir) && perl admin/am_edit soundserver/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in $(artsinclude_HEADERS); do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
libkmedia2_la.all_cc.cc: $(srcdir)/Makefile.in $(srcdir)/fileinputstream_impl.cc $(srcdir)/stdoutwriter_impl.cc 
	@echo 'creating libkmedia2_la.all_cc.cc ...'; \
	rm -f libkmedia2_la.all_cc.files libkmedia2_la.all_cc.final; \
	echo "#define KDE_USE_FINAL 1" >> libkmedia2_la.all_cc.final; \
	for file in fileinputstream_impl.cc stdoutwriter_impl.cc ; do \
	  echo "#include \"$$file\"" >> libkmedia2_la.all_cc.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libkmedia2_la.all_cc.final; \
	done; \
	cat libkmedia2_la.all_cc.final libkmedia2_la.all_cc.files > libkmedia2_la.all_cc.cc; \
	rm -f libkmedia2_la.all_cc.final libkmedia2_la.all_cc.files

#>+ 11
artsd.all_cc.cc: $(srcdir)/Makefile.in $(srcdir)/soundserverv2_impl.cc $(srcdir)/soundserver_impl.cc $(srcdir)/simplesoundserver_impl.cc $(srcdir)/artsd.cc $(srcdir)/cpuusage.cc $(srcdir)/samplestorage_impl.cc $(srcdir)/crashhandler.cc $(srcdir)/soundserverstartup_impl.cc 
	@echo 'creating artsd.all_cc.cc ...'; \
	rm -f artsd.all_cc.files artsd.all_cc.final; \
	echo "#define KDE_USE_FINAL 1" >> artsd.all_cc.final; \
	for file in soundserverv2_impl.cc soundserver_impl.cc simplesoundserver_impl.cc artsd.cc cpuusage.cc samplestorage_impl.cc crashhandler.cc soundserverstartup_impl.cc ; do \
	  echo "#include \"$$file\"" >> artsd.all_cc.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> artsd.all_cc.final; \
	done; \
	cat artsd.all_cc.final artsd.all_cc.files > artsd.all_cc.cc; \
	rm -f artsd.all_cc.final artsd.all_cc.files

#>+ 11
artsshell.all_cc.cc: $(srcdir)/Makefile.in $(srcdir)/artsshell.cc $(srcdir)/tradercheck.cc 
	@echo 'creating artsshell.all_cc.cc ...'; \
	rm -f artsshell.all_cc.files artsshell.all_cc.final; \
	echo "#define KDE_USE_FINAL 1" >> artsshell.all_cc.final; \
	for file in artsshell.cc tradercheck.cc ; do \
	  echo "#include \"$$file\"" >> artsshell.all_cc.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> artsshell.all_cc.final; \
	done; \
	cat artsshell.all_cc.final artsshell.all_cc.files > artsshell.all_cc.cc; \
	rm -f artsshell.all_cc.final artsshell.all_cc.files

#>+ 3
clean-final:
	-rm -f libkmedia2_la.all_cc.cc artsd.all_cc.cc artsshell.all_cc.cc

#>+ 3
final:
	$(MAKE) libkmedia2_la_OBJECTS="$(libkmedia2_la_final_OBJECTS)" artsd_OBJECTS="$(artsd_final_OBJECTS)" artsshell_OBJECTS="$(artsshell_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) libkmedia2_la_OBJECTS="$(libkmedia2_la_final_OBJECTS)" artsd_OBJECTS="$(artsd_final_OBJECTS)" artsshell_OBJECTS="$(artsshell_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) libkmedia2_la_OBJECTS="$(libkmedia2_la_nofinal_OBJECTS)" artsd_OBJECTS="$(artsd_nofinal_OBJECTS)" artsshell_OBJECTS="$(artsshell_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) libkmedia2_la_OBJECTS="$(libkmedia2_la_nofinal_OBJECTS)" artsd_OBJECTS="$(artsd_nofinal_OBJECTS)" artsshell_OBJECTS="$(artsshell_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 22
$(srcdir)/simplesoundserver_impl.cc: soundserver.h artsversion.h 
$(srcdir)/artscat.cc: soundserver.h artsversion.h 
$(srcdir)/samplestorage_impl.cc: soundserver.h artsversion.h 
$(srcdir)/soundserver_impl.cc: soundserver.h artsversion.h 
$(srcdir)/tradercheck.cc: soundserver.h artsversion.h ../flow/artsflow.h 
$(srcdir)/crashhandler.cc: soundserver.h artsversion.h 
$(srcdir)/cpuusage.cc: soundserver.h artsversion.h 
nmcheck: 
$(srcdir)/stdoutwriter_impl.cc: kmedia2.h ../flow/artsflow.h 
nmcheck-am: nmcheck
$(srcdir)/artsshell.cc: soundserver.h artsversion.h ../flow/artsflow.h 
$(srcdir)/soundserverstartup_impl.cc: soundserver.h artsversion.h 
$(srcdir)/artsd.cc: soundserver.h artsversion.h 
$(srcdir)/soundserverv2_impl.cc: soundserver.h artsversion.h 
soundserver.cc: soundserver.h 
$(srcdir)/wavplayobject_impl.cc: soundserver.h ../flow/artsflow.h 
$(srcdir)/artsplay.cc: soundserver.h artsversion.h 
kmedia2.cc: kmedia2.h 
$(srcdir)/fileinputstream_impl.cc: kmedia2.h ../flow/artsflow.h 
$(srcdir)/artsrec.cc: soundserver.h artsversion.h 
$(srcdir)/gslplayobject_impl.cc: soundserver.h ../flow/artsflow.h 
