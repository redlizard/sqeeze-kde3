# Makefile.in generated by automake 1.10.1 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#    This file is part of the KDE libraries
#    Copyright (C) 1997 Torben Weis (weis@kde.org)

#    This library is free software; you can redistribute it and/or
#    modify it under the terms of the GNU Library General Public
#    License as published by the Free Software Foundation; either
#    version 2 of the License, or (at your option) any later version.

#    This library is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    Library General Public License for more details.

#    You should have received a copy of the GNU Library General Public License
#    along with this library; see the file COPYING.LIB.  If not, write to
#    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
#    Boston, MA 02110-1301, USA.


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
DIST_COMMON = $(include_HEADERS) $(kioinclude_HEADERS) \
	$(noinst_HEADERS) $(srcdir)/../../admin/Doxyfile.am \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in
subdir = kio/kio
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h \
	$(top_builddir)/dcop/dcop-path.h \
	$(top_builddir)/kdecore/kdemacros.h \
	$(top_builddir)/kio/kssl/ksslconfig.h \
	$(top_builddir)/kjs/global.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libkiocore_la_LIBADD =
am_libkiocore_la_OBJECTS = authinfo.lo kshred.lo kprotocolmanager.lo \
	slave.lo slaveinterface.lo sessiondata.lo scheduler.lo \
	connection.lo job.lo global.lo slaveconfig.lo \
	kurlpixmapprovider.lo netaccess.lo paste.lo pastedialog.lo \
	kmimemagic.lo tcpslavebase.lo slavebase.lo passdlg.lo \
	forwardingslavebase.lo progressbase.lo defaultprogress.lo \
	statusbarprogress.lo kdirnotify.lo kdirnotify_stub.lo \
	observer.lo kemailsettings.lo kprotocolinfo.lo renamedlg.lo \
	skipdlg.lo kremoteencoding.lo kmimetypechooser.lo
#>- libkiocore_la_OBJECTS = $(am_libkiocore_la_OBJECTS)
#>+ 12
libkiocore_la_final_OBJECTS = libkiocore_la.all_cpp.lo 
libkiocore_la_nofinal_OBJECTS = authinfo.lo kshred.lo kprotocolmanager.lo \
	slave.lo slaveinterface.lo sessiondata.lo scheduler.lo \
	connection.lo job.lo global.lo slaveconfig.lo \
	kurlpixmapprovider.lo netaccess.lo paste.lo pastedialog.lo \
	kmimemagic.lo tcpslavebase.lo slavebase.lo passdlg.lo \
	forwardingslavebase.lo progressbase.lo defaultprogress.lo \
	statusbarprogress.lo kdirnotify.lo kdirnotify_stub.lo \
	observer.lo kemailsettings.lo kprotocolinfo.lo renamedlg.lo \
	skipdlg.lo kremoteencoding.lo kmimetypechooser.lo observer_stub.lo kdirnotify_skel.lo uiserver_stub.lo observer_skel.lo
@KDE_USE_FINAL_FALSE@libkiocore_la_OBJECTS = $(libkiocore_la_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@libkiocore_la_OBJECTS = $(libkiocore_la_final_OBJECTS)
libksycoca_la_LIBADD =
am_libksycoca_la_OBJECTS = kdirwatch.lo kfileshare.lo ksambashare.lo \
	knfsshare.lo ktrader.lo ktraderparse.lo ktraderparsetree.lo \
	kservicetypefactory.lo kservicetype.lo kmimetype.lo \
	kservicegroup.lo kservice.lo kservicefactory.lo \
	kuserprofile.lo kservicegroupfactory.lo kurifilter.lo \
	kfilterbase.lo kfilterdev.lo kshellcompletion.lo \
	kurlcompletion.lo kautomount.lo krun.lo kfileitem.lo \
	kdirlister.lo kimageio.lo yacc.lo lex.lo chmodjob.lo kscan.lo \
	kar.lo ktar.lo kzip.lo previewjob.lo metainfojob.lo davjob.lo \
	kdatatool.lo karchive.lo kfilefilter.lo kfilemetainfo.lo \
	kdcopservicestarter.lo dataslave.lo dataprotocol.lo kacl.lo \
	posixacladdons.lo
#>- libksycoca_la_OBJECTS = $(am_libksycoca_la_OBJECTS)
#>+ 15
libksycoca_la_final_OBJECTS = yacc.lo lex.lo libksycoca_la.all_cpp.lo 
libksycoca_la_nofinal_OBJECTS = kdirwatch.lo kfileshare.lo ksambashare.lo \
	knfsshare.lo ktrader.lo ktraderparse.lo ktraderparsetree.lo \
	kservicetypefactory.lo kservicetype.lo kmimetype.lo \
	kservicegroup.lo kservice.lo kservicefactory.lo \
	kuserprofile.lo kservicegroupfactory.lo kurifilter.lo \
	kfilterbase.lo kfilterdev.lo kshellcompletion.lo \
	kurlcompletion.lo kautomount.lo krun.lo kfileitem.lo \
	kdirlister.lo kimageio.lo yacc.lo lex.lo chmodjob.lo kscan.lo \
	kar.lo ktar.lo kzip.lo previewjob.lo metainfojob.lo davjob.lo \
	kdatatool.lo karchive.lo kfilefilter.lo kfilemetainfo.lo \
	kdcopservicestarter.lo dataslave.lo dataprotocol.lo kacl.lo \
	posixacladdons.lo
@KDE_USE_FINAL_FALSE@libksycoca_la_OBJECTS = $(libksycoca_la_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@libksycoca_la_OBJECTS = $(libksycoca_la_final_OBJECTS)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir) -I$(top_builddir)/dcop -I$(top_builddir)/kdecore -I$(top_builddir)/kio/kssl -I$(top_builddir)/kjs
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libkiocore_la_SOURCES) $(libksycoca_la_SOURCES)
DIST_SOURCES = $(libkiocore_la_SOURCES) $(libksycoca_la_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(includedir)" \
	"$(DESTDIR)$(kioincludedir)"
includeHEADERS_INSTALL = $(INSTALL_HEADER)
kioincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_HEADERS) $(kioinclude_HEADERS) $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
ACL_LIBS = @ACL_LIBS@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
EXR_FLAGS = @EXR_FLAGS@
EXTRA_SUBDIRS = @EXTRA_SUBDIRS@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
GSSAPI_INCS = @GSSAPI_INCS@
GSSAPI_LIBS = @GSSAPI_LIBS@
GSSAPI_RPATH = @GSSAPI_RPATH@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
HAVE_MITSHM = @HAVE_MITSHM@
HAVE_SENDFILE = @HAVE_SENDFILE@
HELP_SUBDIR = @HELP_SUBDIR@
ICE_RLIB = @ICE_RLIB@
ICE_SUBDIR = @ICE_SUBDIR@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDEINIT_SETUID = @KDEINIT_SETUID@
KDEINIT_XFT_INCLUDES = @KDEINIT_XFT_INCLUDES@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_FORCE_INLINE = @KDE_FORCE_INLINE@
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
KJAVA_POLICYPATH = @KJAVA_POLICYPATH@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LIBADD_DL = @LIBADD_DL@
LIBART_CFLAGS = @LIBART_CFLAGS@
LIBART_LIBS = @LIBART_LIBS@
LIBART_RPATH = @LIBART_RPATH@
LIBASOUND = @LIBASOUND@
LIBBZ2 = @LIBBZ2@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBFAM = @LIBFAM@
LIBICE = @LIBICE@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPCRE = @LIBPCRE@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBSSL = @LIBSSL@
LIBTHAI = @LIBTHAI@
LIBTIFF = @LIBTIFF@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTEMPTER = @LIBUTEMPTER@
LIBUTIL = @LIBUTIL@
LIBVOLMGT = @LIBVOLMGT@
LIBXML_CFLAGS = @LIBXML_CFLAGS@
LIBXML_LIBS = @LIBXML_LIBS@
LIBXML_RPATH = @LIBXML_RPATH@
LIBXSLT_CFLAGS = @LIBXSLT_CFLAGS@
LIBXSLT_LIBS = @LIBXSLT_LIBS@
LIBXSLT_RPATH = @LIBXSLT_RPATH@
LIBZ = @LIBZ@
LIB_CUPS = @LIB_CUPS@
LIB_DNSSD = @LIB_DNSSD@
LIB_EXR = @LIB_EXR@
LIB_IDN = @LIB_IDN@
LIB_JASPER = @LIB_JASPER@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMGIO = @LIB_KIMGIO@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LUA = @LUA@
LUA_INCLUDES = @LUA_INCLUDES@
LUA_LIBS = @LUA_LIBS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MD5SUM = @MD5SUM@
MEINPROC = @MEINPROC@
MEINPROC_DEP = @MEINPROC_DEP@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PCRECFLAGS = @PCRECFLAGS@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
QNAMESPACE_H = @QNAMESPACE_H@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SSL_INCLUDES = @SSL_INCLUDES@
SSL_LDFLAGS = @SSL_LDFLAGS@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
cups_modeldir = @cups_modeldir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_cups_config = @kde_cups_config@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
path_su = @path_su@
path_sudo = @path_sudo@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@
AM_CPPFLAGS = -D_LARGEFILE64_SOURCE
INCLUDES = -I$(top_srcdir) -I$(srcdir)/.. -I$(top_srcdir)/kdecore/network -I$(srcdir)/../kssl -I../kssl -I$(srcdir)/../../interfaces  $(all_includes) $(SSL_INCLUDES)
noinst_LTLIBRARIES = libkiocore.la libksycoca.la

# convenience lib - no LDFLAGS or LIBADD !
#if USE_POSIX_ACL
libksycoca_la_SOURCES = kdirwatch.cpp kfileshare.cpp ksambashare.cpp \
	knfsshare.cpp ktrader.cpp ktraderparse.cpp \
	ktraderparsetree.cpp kservicetypefactory.cpp kservicetype.cpp \
	kmimetype.cpp kservicegroup.cpp kservice.cpp \
	kservicefactory.cpp kuserprofile.cpp kservicegroupfactory.cpp \
	kurifilter.cpp kfilterbase.cpp kfilterdev.cpp \
	kshellcompletion.cpp kurlcompletion.cpp kautomount.cpp \
	krun.cpp kfileitem.cpp kdirlister.cpp kimageio.cpp yacc.c \
	lex.c chmodjob.cpp kscan.cpp kar.cpp ktar.cpp kzip.cpp \
	previewjob.cpp metainfojob.cpp davjob.cpp kdatatool.cpp \
	karchive.cpp kfilefilter.cpp kfilemetainfo.cpp \
	kdcopservicestarter.cpp dataslave.cpp dataprotocol.cpp \
	kacl.cpp posixacladdons.cpp
#endif
#if USE_POSIX_ACL
include_HEADERS = kservicetype.h kmimetype.h kmimemagic.h kservice.h \
	krun.h kdirwatch.h kautomount.h kuserprofile.h kshred.h kar.h \
	ktar.h kzip.h ktrader.h kurifilter.h kurlcompletion.h \
	kshellcompletion.h kfileitem.h kfileshare.h ksambashare.h \
	knfsshare.h kdirlister.h kservicegroup.h kimageio.h \
	kdirnotify.h kdirnotify_stub.h kurlpixmapprovider.h \
	kprotocolinfo.h kprotocolmanager.h kfilterbase.h kfilterdev.h \
	kemailsettings.h kscan.h kdatatool.h karchive.h kfilefilter.h \
	kfilemetainfo.h renamedlgplugin.h kmimetyperesolver.h \
	kdcopservicestarter.h kremoteencoding.h kmimetypechooser.h \
	kacl.h
#endif

#libkiocore_la_LDFLAGS = $(all_libraries)
#libkiocore_la_LIBADD = ../../kdeui/libkdeui.la ../../kdesu/libkdesu.la $(LIBZ) $(LIBFAM) $(LIBVOLMGT)
#>- libkiocore_la_SOURCES = authinfo.cpp \
#>- 	kshred.cpp \
#>- 	kprotocolmanager.cpp \
#>- 	slave.cpp slaveinterface.cpp observer.stub \
#>- 	sessiondata.cpp	scheduler.cpp \
#>- 	connection.cpp \
#>- 	job.cpp global.cpp \
#>- 	slaveconfig.cpp kurlpixmapprovider.cpp \
#>- 	netaccess.cpp paste.cpp pastedialog.cpp \
#>- 	kmimemagic.cpp \
#>- 	tcpslavebase.cpp slavebase.cpp passdlg.cpp \
#>- 	forwardingslavebase.cpp \
#>- 	progressbase.cpp defaultprogress.cpp \
#>- 	statusbarprogress.cpp \
#>- 	kdirnotify.cpp kdirnotify.skel kdirnotify_stub.cpp \
#>- 	observer.cpp uiserver.stub observer.skel \
#>- 	kemailsettings.cpp  \
#>- 	kprotocolinfo.cpp \
#>- 	renamedlg.cpp skipdlg.cpp kremoteencoding.cpp \
#>- 	kmimetypechooser.cpp
#>+ 20
libkiocore_la_SOURCES=authinfo.cpp \
	kshred.cpp \
	kprotocolmanager.cpp \
	slave.cpp slaveinterface.cpp  \
	sessiondata.cpp	scheduler.cpp \
	connection.cpp \
	job.cpp global.cpp \
	slaveconfig.cpp kurlpixmapprovider.cpp \
	netaccess.cpp paste.cpp pastedialog.cpp \
	kmimemagic.cpp \
	tcpslavebase.cpp slavebase.cpp passdlg.cpp \
	forwardingslavebase.cpp \
	progressbase.cpp defaultprogress.cpp \
	statusbarprogress.cpp \
	kdirnotify.cpp  kdirnotify_stub.cpp \
	observer.cpp   \
	kemailsettings.cpp  \
	kprotocolinfo.cpp \
	renamedlg.cpp skipdlg.cpp kremoteencoding.cpp \
	kmimetypechooser.cpp observer_stub.cpp kdirnotify_skel.cpp uiserver_stub.cpp observer_skel.cpp

uiserver_DIR = $(top_srcdir)/kio/misc
#>- METASOURCES = AUTO
kioincludedir = $(includedir)/kio
kioinclude_HEADERS = connection.h \
        slaveinterface.h slave.h slaveconfig.h \
        sessiondata.h global.h passdlg.h \
	netaccess.h job.h scheduler.h \
        jobclasses.h paste.h slavebase.h \
	progressbase.h defaultprogress.h \
	statusbarprogress.h tcpslavebase.h \
	forwardingslavebase.h \
	observer.h chmodjob.h uiserver_stub.h \
        kmdbase.h authinfo.h \
	ioslave_defaults.h http_slave_defaults.h previewjob.h thumbcreator.h \
	metainfojob.h davjob.h renamedlg.h skipdlg.h


# Internal
#if USE_POSIX_ACL
noinst_HEADERS = kservicetypefactory.h kservicefactory.h \
	kmessageboxwrapper.h ktraderparse.h ktraderparsetree.h yacc.h \
	kimageiofactory.h kdirwatch_p.h kdirlister_p.h renamedlg.h \
	skipdlg.h dataslave.h dataprotocol.h kservice_p.h \
	posixacladdons.h
#endif
parserfiles = yacc.y lex.l
EXTRA_DIST = $(parserfiles)
#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/../../admin/Doxyfile.am $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kio/kio/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --foreign  kio/kio/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kio/kio/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  kio/kio/Makefile
	cd $(top_srcdir) && perl admin/am_edit kio/kio/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libkiocore.la: $(libkiocore_la_OBJECTS) $(libkiocore_la_DEPENDENCIES) 
	$(CXXLINK)  $(libkiocore_la_OBJECTS) $(libkiocore_la_LIBADD) $(LIBS)
libksycoca.la: $(libksycoca_la_OBJECTS) $(libksycoca_la_DEPENDENCIES) 
	$(CXXLINK)  $(libksycoca_la_OBJECTS) $(libksycoca_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/authinfo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chmodjob.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connection.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dataprotocol.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dataslave.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/davjob.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/defaultprogress.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/forwardingslavebase.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/global.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/job.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kacl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kar.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/karchive.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kautomount.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kdatatool.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kdcopservicestarter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kdirlister.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kdirnotify.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kdirnotify_stub.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kdirwatch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kemailsettings.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kfilefilter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kfileitem.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kfilemetainfo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kfileshare.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kfilterbase.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kfilterdev.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kimageio.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kmimemagic.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kmimetype.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kmimetypechooser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/knfsshare.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kprotocolinfo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kprotocolmanager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kremoteencoding.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/krun.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ksambashare.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kscan.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kservice.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kservicefactory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kservicegroup.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kservicegroupfactory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kservicetype.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kservicetypefactory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kshellcompletion.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kshred.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ktar.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ktrader.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ktraderparse.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ktraderparsetree.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kurifilter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kurlcompletion.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kurlpixmapprovider.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kuserprofile.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kzip.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lex.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/metainfojob.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/netaccess.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/observer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/passdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/paste.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pastedialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/posixacladdons.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/previewjob.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/progressbase.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/renamedlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scheduler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sessiondata.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/skipdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/slave.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/slavebase.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/slaveconfig.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/slaveinterface.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/statusbarprogress.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcpslavebase.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/yacc.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done
install-kioincludeHEADERS: $(kioinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(kioincludedir)" || $(MKDIR_P) "$(DESTDIR)$(kioincludedir)"
	@list='$(kioinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(kioincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(kioincludedir)/$$f'"; \
	  $(kioincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(kioincludedir)/$$f"; \
	done

uninstall-kioincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(kioinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(kioincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(kioincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(includedir)" "$(DESTDIR)$(kioincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
#>- 	mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-idl clean-bcheck clean-final  clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-data-local install-includeHEADERS \
	install-kioincludeHEADERS

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-kioincludeHEADERS \
	uninstall-local

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am \
	install-data-local install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-kioincludeHEADERS install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-includeHEADERS \
	uninstall-kioincludeHEADERS uninstall-local


parser: $(parserfiles)
	cd $(srcdir) ;\
	flex -olex.c -Pkiotrader lex.l ;\
	bison -d -p kiotrader yacc.y && mv yacc.tab.c yacc.c; mv yacc.tab.h yacc.h

.PHONY: parser
apidox-am-yes:
	@if test \! -d "$(top_srcdir)/doc/common/" && test -z "$$DOXDATA" ; then \
		export DOXDATA=$(kde_libs_htmldir)/en/common ; \
	fi ; \
	abs_top_srcdir=`cd $(top_srcdir) && pwd` ;\
	test -d $(top_builddir)/apidocs || \
		( cd $(top_builddir) && sh $$abs_top_srcdir/admin/doxygen.sh \
		--no-modulename --installdir=$(kde_libs_htmldir)/en \
		--no-recurse $(abs_top_srcdir) . ) ; \
	cd $(top_builddir) && sh $$abs_top_srcdir/admin/doxygen.sh \
		--recurse --no-modulename --installdir=$(kde_libs_htmldir)/en \
		$$abs_top_srcdir $(subdir)

apidox-am-toplevel-yes:
	@if test \! -d "$(top_srcdir)/doc/common/" && test -z "$$ADMIN" ; then \
		export DOXDATA=$(kde_libs_htmldir)/en/common ; \
	fi ; \
	abs_top_srcdir=`cd $(top_srcdir) && pwd` ;\
	cd $(top_builddir) && sh $$abs_top_srcdir/admin/doxygen.sh \
		--no-modulename --installdir=$(kde_libs_htmldir)/en \
		$$abs_top_srcdir

apidox-am-no:

apidox-am-toplevel-no:

apidox:
	@if test "$(subdir)" != "."; then \
		$(MAKE) apidox-am-@KDE_HAS_DOXYGEN@ ;\
	else \
		$(MAKE) apidox-am-toplevel-@KDE_HAS_DOXYGEN@ ;\
	fi

install-data-local: install-apidox

install-apidox:
	@if test "$(subdir)" != "."; then \
		$(mkinstalldirs) $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir)/html ; \
		if test -f $(top_builddir)/apidocs/$(subdir)/$(subdir).tag; then \
		echo $(INSTALL_DATA) $(top_builddir)/apidocs/$(subdir)/$(subdir).tag $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); \
		$(INSTALL_DATA) $(top_builddir)/apidocs/$(subdir)/$(subdir).tag $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); \
		fi; \
		if test -d $(top_builddir)/apidocs/$(subdir)/html; then \
			list=`ls $(top_builddir)/apidocs/$(subdir)/html`; \
			echo "installing $(top_builddir)/apidocs/$(subdir)/html" ;\
			for file in $$list; do \
				$(INSTALL_DATA) $(top_builddir)/apidocs/$(subdir)/html/$$file $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir)/html; \
		done; \
		fi; \
	else\
		if test -d $(top_builddir)/apidocs; then \
		$(mkinstalldirs) $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs ;\
		list=`cd $(top_builddir)/apidocs && ls -1`; \
		echo "installing $(top_builddir)/apidocs/$$file" ;\
		echo "target directory $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs" ; \
		for file in $$list; do \
			if test -f $(top_builddir)/apidocs/$$file; then \
				$(INSTALL_DATA) $(top_builddir)/apidocs/$$file $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs; \
			fi; \
		done ; fi; \
	fi

uninstall-local: uninstall-apidox

uninstall-apidox:
	@if test "$(subdir)" != "."; then \
		if test -d $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); then \
			rm -rf $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); \
		fi \
	else \
		if test -d $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs; then \
			rm -rf $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs; \
		fi \
	fi

install-apidox-recurse: install-apidox
	@set fnord $(MAKEFLAGS); amf=$$2; if test -n '$(SUBDIRS)'; then \
	    list='$(SUBDIRS)'; \
	    for subdir in $$list; do \
		if grep '^include .*Doxyfile.am' $(srcdir)/$$subdir/Makefile.am > /dev/null ; then \
		echo "Installing apidox from $$subdir"; \
		if test "$$subdir" != "."; then \
			(cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) GENERATE_FLAG=no install-apidox-recurse) || exit 1; \
		fi ; fi ;\
	    done; \
	fi

.PHONY: apidox-am-yes apidox-am-no install-data-local install-apidox install-apidox uninstall-local uninstall-apidox uninstall-apidox apidox apidox-am-toplevel-no apidox-am-toplevel-yes

# Local Variables:
# mode: makefile
# End:
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 15
observer.kidl: $(srcdir)/observer.h $(DCOP_DEPENDENCIES)
	$(DCOPIDL) $(srcdir)/observer.h > observer.kidl || ( rm -f observer.kidl ; false )
observer_stub.h: observer.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-skel observer.kidl
kdirnotify.kidl: $(srcdir)/kdirnotify.h $(DCOP_DEPENDENCIES)
	$(DCOPIDL) $(srcdir)/kdirnotify.h > kdirnotify.kidl || ( rm -f kdirnotify.kidl ; false )
kdirnotify_skel.cpp: kdirnotify.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-stub kdirnotify.kidl
uiserver.kidl: $(top_srcdir)/kio/misc/uiserver.h $(DCOP_DEPENDENCIES)
	$(DCOPIDL) $(top_srcdir)/kio/misc/uiserver.h > uiserver.kidl || ( rm -f uiserver.kidl ; false )
uiserver_stub.h: uiserver.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-skel uiserver.kidl
observer_skel.cpp: observer.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-stub observer.kidl

#>+ 3
kdatatool.moc: $(srcdir)/kdatatool.h
	$(MOC) $(srcdir)/kdatatool.h -o kdatatool.moc

#>+ 2
mocs: kdatatool.moc

#>+ 3
previewjob.moc: $(srcdir)/previewjob.h
	$(MOC) $(srcdir)/previewjob.h -o previewjob.moc

#>+ 2
mocs: previewjob.moc

#>+ 3
kdirwatch_p.moc: $(srcdir)/kdirwatch_p.h
	$(MOC) $(srcdir)/kdirwatch_p.h -o kdirwatch_p.moc

#>+ 2
mocs: kdirwatch_p.moc

#>+ 3
jobclasses.moc: $(srcdir)/jobclasses.h
	$(MOC) $(srcdir)/jobclasses.h -o jobclasses.moc

#>+ 2
mocs: jobclasses.moc

#>+ 3
kmimetyperesolver.moc: $(srcdir)/kmimetyperesolver.h
	$(MOC) $(srcdir)/kmimetyperesolver.h -o kmimetyperesolver.moc

#>+ 2
mocs: kmimetyperesolver.moc

#>+ 3
ktrader.moc: $(srcdir)/ktrader.h
	$(MOC) $(srcdir)/ktrader.h -o ktrader.moc

#>+ 2
mocs: ktrader.moc

#>+ 3
slave.moc: $(srcdir)/slave.h
	$(MOC) $(srcdir)/slave.h -o slave.moc

#>+ 2
mocs: slave.moc

#>+ 3
kshred.moc: $(srcdir)/kshred.h
	$(MOC) $(srcdir)/kshred.h -o kshred.moc

#>+ 2
mocs: kshred.moc

#>+ 3
skipdlg.moc: $(srcdir)/skipdlg.h
	$(MOC) $(srcdir)/skipdlg.h -o skipdlg.moc

#>+ 2
mocs: skipdlg.moc

#>+ 3
kurifilter.moc: $(srcdir)/kurifilter.h
	$(MOC) $(srcdir)/kurifilter.h -o kurifilter.moc

#>+ 2
mocs: kurifilter.moc

#>+ 3
statusbarprogress.moc: $(srcdir)/statusbarprogress.h
	$(MOC) $(srcdir)/statusbarprogress.h -o statusbarprogress.moc

#>+ 2
mocs: statusbarprogress.moc

#>+ 3
defaultprogress.moc: $(srcdir)/defaultprogress.h
	$(MOC) $(srcdir)/defaultprogress.h -o defaultprogress.moc

#>+ 2
mocs: defaultprogress.moc

#>+ 3
davjob.moc: $(srcdir)/davjob.h
	$(MOC) $(srcdir)/davjob.h -o davjob.moc

#>+ 2
mocs: davjob.moc

#>+ 3
progressbase.moc: $(srcdir)/progressbase.h
	$(MOC) $(srcdir)/progressbase.h -o progressbase.moc

#>+ 2
mocs: progressbase.moc

#>+ 3
kfileshare.moc: $(srcdir)/kfileshare.h
	$(MOC) $(srcdir)/kfileshare.h -o kfileshare.moc

#>+ 2
mocs: kfileshare.moc

#>+ 3
kautomount.moc: $(srcdir)/kautomount.h
	$(MOC) $(srcdir)/kautomount.h -o kautomount.moc

#>+ 2
mocs: kautomount.moc

#>+ 3
forwardingslavebase.moc: $(srcdir)/forwardingslavebase.h
	$(MOC) $(srcdir)/forwardingslavebase.h -o forwardingslavebase.moc

#>+ 2
mocs: forwardingslavebase.moc

#>+ 3
metainfojob.moc: $(srcdir)/metainfojob.h
	$(MOC) $(srcdir)/metainfojob.h -o metainfojob.moc

#>+ 2
mocs: metainfojob.moc

#>+ 3
kshellcompletion.moc: $(srcdir)/kshellcompletion.h
	$(MOC) $(srcdir)/kshellcompletion.h -o kshellcompletion.moc

#>+ 2
mocs: kshellcompletion.moc

#>+ 3
scheduler.moc: $(srcdir)/scheduler.h
	$(MOC) $(srcdir)/scheduler.h -o scheduler.moc

#>+ 2
mocs: scheduler.moc

#>+ 3
chmodjob.moc: $(srcdir)/chmodjob.h
	$(MOC) $(srcdir)/chmodjob.h -o chmodjob.moc

#>+ 2
mocs: chmodjob.moc

#>+ 3
connection.moc: $(srcdir)/connection.h
	$(MOC) $(srcdir)/connection.h -o connection.moc

#>+ 2
mocs: connection.moc

#>+ 3
dataslave.moc: $(srcdir)/dataslave.h
	$(MOC) $(srcdir)/dataslave.h -o dataslave.moc

#>+ 2
mocs: dataslave.moc

#>+ 3
kdirlister.moc: $(srcdir)/kdirlister.h
	$(MOC) $(srcdir)/kdirlister.h -o kdirlister.moc

#>+ 2
mocs: kdirlister.moc

#>+ 3
observer.moc: $(srcdir)/observer.h
	$(MOC) $(srcdir)/observer.h -o observer.moc

#>+ 2
mocs: observer.moc

#>+ 3
kfilemetainfo.moc: $(srcdir)/kfilemetainfo.h
	$(MOC) $(srcdir)/kfilemetainfo.h -o kfilemetainfo.moc

#>+ 2
mocs: kfilemetainfo.moc

#>+ 3
slaveconfig.moc: $(srcdir)/slaveconfig.h
	$(MOC) $(srcdir)/slaveconfig.h -o slaveconfig.moc

#>+ 2
mocs: slaveconfig.moc

#>+ 3
kurlcompletion.moc: $(srcdir)/kurlcompletion.h
	$(MOC) $(srcdir)/kurlcompletion.h -o kurlcompletion.moc

#>+ 2
mocs: kurlcompletion.moc

#>+ 3
krun.moc: $(srcdir)/krun.h
	$(MOC) $(srcdir)/krun.h -o krun.moc

#>+ 2
mocs: krun.moc

#>+ 3
kfilterbase.moc: $(srcdir)/kfilterbase.h
	$(MOC) $(srcdir)/kfilterbase.h -o kfilterbase.moc

#>+ 2
mocs: kfilterbase.moc

#>+ 3
knfsshare.moc: $(srcdir)/knfsshare.h
	$(MOC) $(srcdir)/knfsshare.h -o knfsshare.moc

#>+ 2
mocs: knfsshare.moc

#>+ 3
netaccess.moc: $(srcdir)/netaccess.h
	$(MOC) $(srcdir)/netaccess.h -o netaccess.moc

#>+ 2
mocs: netaccess.moc

#>+ 3
kdirlister_p.moc: $(srcdir)/kdirlister_p.h
	$(MOC) $(srcdir)/kdirlister_p.h -o kdirlister_p.moc

#>+ 2
mocs: kdirlister_p.moc

#>+ 3
kdirwatch.moc: $(srcdir)/kdirwatch.h
	$(MOC) $(srcdir)/kdirwatch.h -o kdirwatch.moc

#>+ 2
mocs: kdirwatch.moc

#>+ 3
sessiondata.moc: $(srcdir)/sessiondata.h
	$(MOC) $(srcdir)/sessiondata.h -o sessiondata.moc

#>+ 2
mocs: sessiondata.moc

#>+ 3
ksambashare.moc: $(srcdir)/ksambashare.h
	$(MOC) $(srcdir)/ksambashare.h -o ksambashare.moc

#>+ 2
mocs: ksambashare.moc

#>+ 3
kservice_p.moc: $(srcdir)/kservice_p.h
	$(MOC) $(srcdir)/kservice_p.h -o kservice_p.moc

#>+ 2
mocs: kservice_p.moc

#>+ 3
passdlg.moc: $(srcdir)/passdlg.h
	$(MOC) $(srcdir)/passdlg.h -o passdlg.moc

#>+ 2
mocs: passdlg.moc

#>+ 3
renamedlg.moc: $(srcdir)/renamedlg.h
	$(MOC) $(srcdir)/renamedlg.h -o renamedlg.moc

#>+ 2
mocs: renamedlg.moc

#>+ 3
kmimetypechooser.moc: $(srcdir)/kmimetypechooser.h
	$(MOC) $(srcdir)/kmimetypechooser.h -o kmimetypechooser.moc

#>+ 2
mocs: kmimetypechooser.moc

#>+ 3
slaveinterface.moc: $(srcdir)/slaveinterface.h
	$(MOC) $(srcdir)/slaveinterface.h -o slaveinterface.moc

#>+ 2
mocs: slaveinterface.moc

#>+ 3
kscan.moc: $(srcdir)/kscan.h
	$(MOC) $(srcdir)/kscan.h -o kscan.moc

#>+ 2
mocs: kscan.moc

#>+ 3
pastedialog.moc: $(srcdir)/pastedialog.h
	$(MOC) $(srcdir)/pastedialog.h -o pastedialog.moc

#>+ 2
mocs: pastedialog.moc

#>+ 3
clean-metasources:
	-rm -f  kdatatool.moc previewjob.moc kdirwatch_p.moc jobclasses.moc kmimetyperesolver.moc ktrader.moc slave.moc kshred.moc skipdlg.moc kurifilter.moc statusbarprogress.moc defaultprogress.moc davjob.moc progressbase.moc kfileshare.moc kautomount.moc forwardingslavebase.moc metainfojob.moc kshellcompletion.moc scheduler.moc chmodjob.moc connection.moc dataslave.moc kdirlister.moc observer.moc kfilemetainfo.moc slaveconfig.moc kurlcompletion.moc krun.moc kfilterbase.moc knfsshare.moc netaccess.moc kdirlister_p.moc kdirwatch.moc sessiondata.moc ksambashare.moc kservice_p.moc passdlg.moc renamedlg.moc kmimetypechooser.moc slaveinterface.moc kscan.moc pastedialog.moc

#>+ 2
KDE_DIST=lex.l Makefile.in configure.in.in klimitediodevice.h KFILEMETAINFO_ISSUES pastedialog.h yacc.y Makefile.am kservicegroupfactory.h 

#>+ 7
clean-idl:
	-rm -f \
	observer_stub.cpp observer_stub.h observer.kidl \
	kdirnotify_skel.cpp kdirnotify_skel.h kdirnotify.kidl \
	uiserver_stub.cpp uiserver_stub.h uiserver.kidl \
	observer_skel.cpp observer_skel.h observer.kidl 

#>+ 2
docs-am:

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kio/kio/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  kio/kio/Makefile
	cd $(top_srcdir) && perl admin/am_edit kio/kio/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in $(include_HEADERS) $(kioinclude_HEADERS) ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
libkiocore_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/authinfo.cpp $(srcdir)/kshred.cpp $(srcdir)/kprotocolmanager.cpp $(srcdir)/slave.cpp $(srcdir)/slaveinterface.cpp $(srcdir)/sessiondata.cpp $(srcdir)/scheduler.cpp $(srcdir)/connection.cpp $(srcdir)/job.cpp $(srcdir)/global.cpp $(srcdir)/slaveconfig.cpp $(srcdir)/kurlpixmapprovider.cpp $(srcdir)/netaccess.cpp $(srcdir)/paste.cpp $(srcdir)/pastedialog.cpp $(srcdir)/kmimemagic.cpp $(srcdir)/tcpslavebase.cpp $(srcdir)/slavebase.cpp $(srcdir)/passdlg.cpp $(srcdir)/forwardingslavebase.cpp $(srcdir)/progressbase.cpp $(srcdir)/defaultprogress.cpp $(srcdir)/statusbarprogress.cpp $(srcdir)/kdirnotify.cpp $(srcdir)/kdirnotify_stub.cpp $(srcdir)/observer.cpp $(srcdir)/kemailsettings.cpp $(srcdir)/kprotocolinfo.cpp $(srcdir)/renamedlg.cpp $(srcdir)/skipdlg.cpp $(srcdir)/kremoteencoding.cpp $(srcdir)/kmimetypechooser.cpp observer_stub.cpp kdirnotify_skel.cpp uiserver_stub.cpp observer_skel.cpp  jobclasses.moc slave.moc skipdlg.moc kshred.moc statusbarprogress.moc defaultprogress.moc progressbase.moc forwardingslavebase.moc scheduler.moc connection.moc observer.moc slaveconfig.moc netaccess.moc sessiondata.moc passdlg.moc renamedlg.moc slaveinterface.moc kmimetypechooser.moc pastedialog.moc
	@echo 'creating libkiocore_la.all_cpp.cpp ...'; \
	rm -f libkiocore_la.all_cpp.files libkiocore_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libkiocore_la.all_cpp.final; \
	for file in authinfo.cpp kshred.cpp kprotocolmanager.cpp slave.cpp slaveinterface.cpp sessiondata.cpp scheduler.cpp connection.cpp job.cpp global.cpp slaveconfig.cpp kurlpixmapprovider.cpp netaccess.cpp paste.cpp pastedialog.cpp kmimemagic.cpp tcpslavebase.cpp slavebase.cpp passdlg.cpp forwardingslavebase.cpp progressbase.cpp defaultprogress.cpp statusbarprogress.cpp kdirnotify.cpp kdirnotify_stub.cpp observer.cpp kemailsettings.cpp kprotocolinfo.cpp renamedlg.cpp skipdlg.cpp kremoteencoding.cpp kmimetypechooser.cpp observer_stub.cpp kdirnotify_skel.cpp uiserver_stub.cpp observer_skel.cpp ; do \
	  echo "#include \"$$file\"" >> libkiocore_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libkiocore_la.all_cpp.final; \
	done; \
	cat libkiocore_la.all_cpp.final libkiocore_la.all_cpp.files > libkiocore_la.all_cpp.cpp; \
	rm -f libkiocore_la.all_cpp.final libkiocore_la.all_cpp.files

#>+ 11
libksycoca_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/kdirwatch.cpp $(srcdir)/kfileshare.cpp $(srcdir)/ksambashare.cpp $(srcdir)/knfsshare.cpp $(srcdir)/ktrader.cpp $(srcdir)/ktraderparse.cpp $(srcdir)/ktraderparsetree.cpp $(srcdir)/kservicetypefactory.cpp $(srcdir)/kservicetype.cpp $(srcdir)/kmimetype.cpp $(srcdir)/kservicegroup.cpp $(srcdir)/kservice.cpp $(srcdir)/kservicefactory.cpp $(srcdir)/kuserprofile.cpp $(srcdir)/kservicegroupfactory.cpp $(srcdir)/kurifilter.cpp $(srcdir)/kfilterbase.cpp $(srcdir)/kfilterdev.cpp $(srcdir)/kshellcompletion.cpp $(srcdir)/kurlcompletion.cpp $(srcdir)/kautomount.cpp $(srcdir)/krun.cpp $(srcdir)/kfileitem.cpp $(srcdir)/kdirlister.cpp $(srcdir)/kimageio.cpp $(srcdir)/chmodjob.cpp $(srcdir)/kscan.cpp $(srcdir)/kar.cpp $(srcdir)/ktar.cpp $(srcdir)/kzip.cpp $(srcdir)/previewjob.cpp $(srcdir)/metainfojob.cpp $(srcdir)/davjob.cpp $(srcdir)/kdatatool.cpp $(srcdir)/karchive.cpp $(srcdir)/kfilefilter.cpp $(srcdir)/kfilemetainfo.cpp $(srcdir)/kdcopservicestarter.cpp $(srcdir)/dataslave.cpp $(srcdir)/dataprotocol.cpp $(srcdir)/kacl.cpp $(srcdir)/posixacladdons.cpp  kdatatool.moc previewjob.moc kdirwatch_p.moc kmimetyperesolver.moc ktrader.moc kurifilter.moc davjob.moc kfileshare.moc kautomount.moc metainfojob.moc kshellcompletion.moc chmodjob.moc dataslave.moc kdirlister.moc kfilemetainfo.moc kurlcompletion.moc krun.moc kfilterbase.moc kdirlister_p.moc knfsshare.moc kdirwatch.moc kservice_p.moc ksambashare.moc kscan.moc
	@echo 'creating libksycoca_la.all_cpp.cpp ...'; \
	rm -f libksycoca_la.all_cpp.files libksycoca_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libksycoca_la.all_cpp.final; \
	for file in kdirwatch.cpp kfileshare.cpp ksambashare.cpp knfsshare.cpp ktrader.cpp ktraderparse.cpp ktraderparsetree.cpp kservicetypefactory.cpp kservicetype.cpp kmimetype.cpp kservicegroup.cpp kservice.cpp kservicefactory.cpp kuserprofile.cpp kservicegroupfactory.cpp kurifilter.cpp kfilterbase.cpp kfilterdev.cpp kshellcompletion.cpp kurlcompletion.cpp kautomount.cpp krun.cpp kfileitem.cpp kdirlister.cpp kimageio.cpp chmodjob.cpp kscan.cpp kar.cpp ktar.cpp kzip.cpp previewjob.cpp metainfojob.cpp davjob.cpp kdatatool.cpp karchive.cpp kfilefilter.cpp kfilemetainfo.cpp kdcopservicestarter.cpp dataslave.cpp dataprotocol.cpp kacl.cpp posixacladdons.cpp ; do \
	  echo "#include \"$$file\"" >> libksycoca_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libksycoca_la.all_cpp.final; \
	done; \
	cat libksycoca_la.all_cpp.final libksycoca_la.all_cpp.files > libksycoca_la.all_cpp.cpp; \
	rm -f libksycoca_la.all_cpp.final libksycoca_la.all_cpp.files

#>+ 3
clean-final:
	-rm -f libkiocore_la.all_cpp.cpp libksycoca_la.all_cpp.cpp

#>+ 3
final:
	$(MAKE) libkiocore_la_OBJECTS="$(libkiocore_la_final_OBJECTS)" libksycoca_la_OBJECTS="$(libksycoca_la_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) libkiocore_la_OBJECTS="$(libkiocore_la_final_OBJECTS)" libksycoca_la_OBJECTS="$(libksycoca_la_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) libkiocore_la_OBJECTS="$(libkiocore_la_nofinal_OBJECTS)" libksycoca_la_OBJECTS="$(libksycoca_la_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) libkiocore_la_OBJECTS="$(libkiocore_la_nofinal_OBJECTS)" libksycoca_la_OBJECTS="$(libksycoca_la_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 119
kmimetypechooser.o: kmimetypechooser.moc 
netaccess.o: netaccess.moc 
slaveinterface.lo: slaveinterface.moc 
kscan.lo: kscan.moc 
$(srcdir)/pastedialog.cpp: observer_stub.h uiserver_stub.h 
$(srcdir)/kmimemagic.cpp: observer_stub.h uiserver_stub.h 
$(srcdir)/sessiondata.cpp: observer_stub.h uiserver_stub.h 
$(srcdir)/authinfo.cpp: observer_stub.h uiserver_stub.h 
sessiondata.lo: sessiondata.moc 
observer.o: observer.moc 
kautomount.o: kautomount.moc 
pastedialog.lo: pastedialog.moc 
$(srcdir)/slave.cpp: observer_stub.h uiserver_stub.h 
kdatatool.o: kdatatool.moc 
nmcheck-am: nmcheck
davjob.lo: davjob.moc 
kmimetype.lo: kmimetyperesolver.moc 
kfilterbase.o: kfilterbase.moc 
scheduler.o: scheduler.moc 
$(srcdir)/kemailsettings.cpp: observer_stub.h uiserver_stub.h 
$(srcdir)/kdirnotify_stub.cpp: observer_stub.h uiserver_stub.h 
kdirwatch.lo: kdirwatch_p.moc kdirwatch.moc 
netaccess.lo: netaccess.moc 
kmimetype.o: kmimetyperesolver.moc 
pastedialog.o: pastedialog.moc 
passdlg.o: passdlg.moc 
kdatatool.lo: kdatatool.moc 
kfilemetainfo.o: kfilemetainfo.moc 
$(srcdir)/slavebase.cpp: observer_stub.h uiserver_stub.h 
kshellcompletion.lo: kshellcompletion.moc 
kfilterbase.lo: kfilterbase.moc 
krun.o: krun.moc 
slaveconfig.lo: slaveconfig.moc 
skipdlg.o: skipdlg.moc 
$(srcdir)/connection.cpp: observer_stub.h uiserver_stub.h 
observer_stub.cpp: observer_stub.h 
$(srcdir)/kurlpixmapprovider.cpp: observer_stub.h uiserver_stub.h 
ktrader.o: ktrader.moc 
$(srcdir)/passdlg.cpp: observer_stub.h uiserver_stub.h 
kdirwatch.o: kdirwatch_p.moc kdirwatch.moc 
$(srcdir)/netaccess.cpp: observer_stub.h uiserver_stub.h 
statusbarprogress.lo: statusbarprogress.moc 
$(srcdir)/kdirnotify.cpp: observer_stub.h uiserver_stub.h 
slaveconfig.o: slaveconfig.moc 
dataslave.o: dataslave.moc 
connection.o: connection.moc 
renamedlg.o: renamedlg.moc 
$(srcdir)/job.cpp: observer_stub.h uiserver_stub.h 
$(srcdir)/paste.cpp: observer_stub.h uiserver_stub.h 
kservice.o: kservice_p.moc 
knfsshare.lo: knfsshare.moc 
scheduler.lo: scheduler.moc 
chmodjob.lo: chmodjob.moc 
ktrader.lo: ktrader.moc 
previewjob.lo: previewjob.moc 
defaultprogress.lo: defaultprogress.moc 
progressbase.lo: progressbase.moc 
$(srcdir)/renamedlg.cpp: observer_stub.h uiserver_stub.h 
kshred.lo: kshred.moc 
$(srcdir)/observer.cpp: observer_stub.h uiserver_stub.h 
connection.lo: connection.moc 
defaultprogress.o: defaultprogress.moc 
$(srcdir)/slaveconfig.cpp: observer_stub.h uiserver_stub.h 
$(srcdir)/skipdlg.cpp: observer_stub.h uiserver_stub.h 
$(srcdir)/kremoteencoding.cpp: observer_stub.h uiserver_stub.h 
passdlg.lo: passdlg.moc 
kdirlister.o: kdirlister.moc kdirlister_p.moc 
kdirlister.lo: kdirlister.moc kdirlister_p.moc 
$(srcdir)/defaultprogress.cpp: observer_stub.h uiserver_stub.h 
chmodjob.o: chmodjob.moc 
kfileshare.o: kfileshare.moc 
renamedlg.lo: renamedlg.moc 
ksambashare.lo: ksambashare.moc 
job.lo: jobclasses.moc 
uiserver_stub.cpp: uiserver_stub.h 
kshred.o: kshred.moc 
$(srcdir)/kprotocolmanager.cpp: observer_stub.h uiserver_stub.h 
$(srcdir)/scheduler.cpp: observer_stub.h uiserver_stub.h 
$(srcdir)/progressbase.cpp: observer_stub.h uiserver_stub.h 
slave.o: slave.moc 
kfilemetainfo.lo: kfilemetainfo.moc 
sessiondata.o: sessiondata.moc 
kservice.lo: kservice_p.moc 
kurifilter.o: kurifilter.moc 
$(srcdir)/kmimetypechooser.cpp: observer_stub.h uiserver_stub.h 
skipdlg.lo: skipdlg.moc 
kautomount.lo: kautomount.moc 
$(srcdir)/global.cpp: observer_stub.h uiserver_stub.h 
forwardingslavebase.o: forwardingslavebase.moc 
kscan.o: kscan.moc 
kfileshare.lo: kfileshare.moc 
nmcheck: 
$(srcdir)/slaveinterface.cpp: observer_stub.h uiserver_stub.h 
statusbarprogress.o: statusbarprogress.moc 
slaveinterface.o: slaveinterface.moc 
job.o: jobclasses.moc 
forwardingslavebase.lo: forwardingslavebase.moc 
metainfojob.o: metainfojob.moc 
kurlcompletion.o: kurlcompletion.moc 
observer.lo: observer.moc 
knfsshare.o: knfsshare.moc 
kshellcompletion.o: kshellcompletion.moc 
dataslave.lo: dataslave.moc 
$(srcdir)/tcpslavebase.cpp: observer_stub.h uiserver_stub.h 
$(srcdir)/forwardingslavebase.cpp: observer_stub.h uiserver_stub.h 
davjob.o: davjob.moc 
ksambashare.o: ksambashare.moc 
slave.lo: slave.moc 
kurlcompletion.lo: kurlcompletion.moc 
kurifilter.lo: kurifilter.moc 
$(srcdir)/kshred.cpp: observer_stub.h uiserver_stub.h 
kmimetypechooser.lo: kmimetypechooser.moc 
progressbase.o: progressbase.moc 
previewjob.o: previewjob.moc 
krun.lo: krun.moc 
$(srcdir)/kprotocolinfo.cpp: observer_stub.h uiserver_stub.h 
$(srcdir)/statusbarprogress.cpp: observer_stub.h uiserver_stub.h 
metainfojob.lo: metainfojob.moc 
