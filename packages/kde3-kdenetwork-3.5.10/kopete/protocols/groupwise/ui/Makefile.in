# Makefile.in generated by automake 1.10.1 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = kopete/protocols/groupwise/ui
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h \
	$(top_builddir)/kopete/protocols/gadu/libgadu/libgadu-config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libkopetegroupwiseui_la_LIBADD =
am_libkopetegroupwiseui_la_OBJECTS = gwaddcontactpage.lo \
	gweditaccountwidget.lo gwreceiveinvitationdialog.lo \
	gwcontactproperties.lo gwprivacydialog.lo gwsearch.lo \
	gwchatsearchdialog.lo gwchatpropsdialog.lo
#>- libkopetegroupwiseui_la_OBJECTS =  \
#>- 	$(am_libkopetegroupwiseui_la_OBJECTS)
#>+ 7
libkopetegroupwiseui_la_final_OBJECTS = libkopetegroupwiseui_la.all_cpp.lo 
libkopetegroupwiseui_la_nofinal_OBJECTS = gwaddcontactpage.lo \
	gweditaccountwidget.lo gwreceiveinvitationdialog.lo \
	gwcontactproperties.lo gwprivacydialog.lo gwsearch.lo \
	gwchatsearchdialog.lo gwchatpropsdialog.lo gwaccountpreferences.lo gwaddui.lo gwshowinvitation.lo gwcontactpropswidget.lo gwprivacy.lo gwcustomstatuswidget.lo gwcustomstatusedit.lo gwcontactsearch.lo gwchatsearchwidget.lo gwchatpropswidget.lo
@KDE_USE_FINAL_FALSE@libkopetegroupwiseui_la_OBJECTS = $(libkopetegroupwiseui_la_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@libkopetegroupwiseui_la_OBJECTS = $(libkopetegroupwiseui_la_final_OBJECTS)
#>- libkopetegroupwiseui_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(libkopetegroupwiseui_la_LDFLAGS) $(LDFLAGS) -o \
#>- 	$@
#>+ 4
libkopetegroupwiseui_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(libkopetegroupwiseui_la_LDFLAGS) $(LDFLAGS) -o \
	$@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir) -I$(top_builddir)/kopete/protocols/gadu/libgadu
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libkopetegroupwiseui_la_SOURCES)
DIST_SOURCES = $(libkopetegroupwiseui_la_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
ALSA_LIBS = @ALSA_LIBS@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
COMPILE_GADU = @COMPILE_GADU@
COMPILE_GETIFADDRS = @COMPILE_GETIFADDRS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
EXPAT_LIBS = @EXPAT_LIBS@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_LIBS = @GLIB_LIBS@
GLINC = @GLINC@
GLLIB = @GLLIB@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
IDN_CFLAGS = @IDN_CFLAGS@
IDN_LIBS = @IDN_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
KOPETE_COMPAT_INCLUDES = @KOPETE_COMPAT_INCLUDES@
KOPETE_INCLUDES = @KOPETE_INCLUDES@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LIBBSD = @LIBBSD@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBGG_INCLUDES = @LIBGG_INCLUDES@
LIBGG_LIBS = @LIBGG_LIBS@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBSSL = @LIBSSL@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBXF86VIDMODE = @LIBXF86VIDMODE@
LIBXML_CFLAGS = @LIBXML_CFLAGS@
LIBXML_LIBS = @LIBXML_LIBS@
LIBXML_RPATH = @LIBXML_RPATH@
LIBXSLT_CFLAGS = @LIBXSLT_CFLAGS@
LIBXSLT_LIBS = @LIBXSLT_LIBS@
LIBXSLT_RPATH = @LIBXSLT_RPATH@
LIBZ = @LIBZ@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KOPETECOMPAT = @LIB_KOPETECOMPAT@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SLP = @LIB_SLP@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LIB_XSS = @LIB_XSS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEANWHILE_CFLAGS = @MEANWHILE_CFLAGS@
MEANWHILE_LIBS = @MEANWHILE_LIBS@
MEINPROC = @MEINPROC@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
ORTP_CFLAGS = @ORTP_CFLAGS@
ORTP_LIBS = @ORTP_LIBS@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SPEEX_CFLAGS = @SPEEX_CFLAGS@
SPEEX_LIBS = @SPEEX_LIBS@
SSL_INCLUDES = @SSL_INCLUDES@
SSL_LDFLAGS = @SSL_LDFLAGS@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
XMMS_INCLUDES = @XMMS_INCLUDES@
XMMS_LDFLAGS = @XMMS_LDFLAGS@
XMMS_LIBS = @XMMS_LIBS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
YAHOO2_VERSION = @YAHOO2_VERSION@
YAHOOPKGREQ = @YAHOOPKGREQ@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@
INCLUDES = -I$(top_srcdir)/protocols/groupwise/libgroupwise \
	-I$(top_srcdir)/kopete/protocols/groupwise/libgroupwise -I$(top_srcdir)/kopete/protocols/groupwise/libgroupwise/qca/src

#>- METASOURCES = AUTO
noinst_LTLIBRARIES = libkopetegroupwiseui.la
AM_CPPFLAGS = $(KOPETE_INCLUDES) \
			  -I$(srcdir)/..\
			  -I$(srcdir)/../libgroupwise \
			  $(all_includes)

libkopetegroupwiseui_la_LDFLAGS = $(all_libraries)
#>- libkopetegroupwiseui_la_SOURCES = gwaccountpreferences.ui gwaddcontactpage.cpp \
#>- 		gwaddui.ui gweditaccountwidget.cpp gwreceiveinvitationdialog.cpp \
#>- 		gwshowinvitation.ui gwcontactpropswidget.ui gwcontactproperties.cpp gwprivacy.ui \
#>- 		gwprivacydialog.cpp gwsearch.cpp gwcustomstatuswidget.ui gwcustomstatusedit.ui \
#>- 		gwcontactsearch.ui gwchatsearchwidget.ui gwchatsearchdialog.cpp gwchatpropswidget.ui \
#>- 	gwchatpropsdialog.cpp
#>+ 6
libkopetegroupwiseui_la_SOURCES= gwaddcontactpage.cpp \
		 gweditaccountwidget.cpp gwreceiveinvitationdialog.cpp \
		  gwcontactproperties.cpp  \
		gwprivacydialog.cpp gwsearch.cpp   \
		  gwchatsearchdialog.cpp  \
	gwchatpropsdialog.cpp gwaccountpreferences.cpp gwaddui.cpp gwshowinvitation.cpp gwcontactpropswidget.cpp gwprivacy.cpp gwcustomstatuswidget.cpp gwcustomstatusedit.cpp gwcontactsearch.cpp gwchatsearchwidget.cpp gwchatpropswidget.cpp

noinst_HEADERS = gwreceiveinvitationdialog.h gwcontactproperties.h \
				gwprivacydialog.h gwsearch.h gwchatsearchdialog.h gwchatpropsdialog.h

#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kopete/protocols/groupwise/ui/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --foreign  kopete/protocols/groupwise/ui/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kopete/protocols/groupwise/ui/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  kopete/protocols/groupwise/ui/Makefile
	cd $(top_srcdir) && perl admin/am_edit kopete/protocols/groupwise/ui/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libkopetegroupwiseui.la: $(libkopetegroupwiseui_la_OBJECTS) $(libkopetegroupwiseui_la_DEPENDENCIES) 
	$(libkopetegroupwiseui_la_LINK)  $(libkopetegroupwiseui_la_OBJECTS) $(libkopetegroupwiseui_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gwaddcontactpage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gwchatpropsdialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gwchatsearchdialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gwcontactproperties.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gweditaccountwidget.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gwprivacydialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gwreceiveinvitationdialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gwsearch.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
#>- 	mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-ui clean-bcheck clean-final  clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
gweditaccountwidget.moc: $(srcdir)/gweditaccountwidget.h
	$(MOC) $(srcdir)/gweditaccountwidget.h -o gweditaccountwidget.moc

#>+ 2
mocs: gweditaccountwidget.moc

#>+ 3
gwreceiveinvitationdialog.moc: $(srcdir)/gwreceiveinvitationdialog.h
	$(MOC) $(srcdir)/gwreceiveinvitationdialog.h -o gwreceiveinvitationdialog.moc

#>+ 2
mocs: gwreceiveinvitationdialog.moc

#>+ 3
gwchatpropsdialog.moc: $(srcdir)/gwchatpropsdialog.h
	$(MOC) $(srcdir)/gwchatpropsdialog.h -o gwchatpropsdialog.moc

#>+ 2
mocs: gwchatpropsdialog.moc

#>+ 3
gwsearch.moc: $(srcdir)/gwsearch.h
	$(MOC) $(srcdir)/gwsearch.h -o gwsearch.moc

#>+ 2
mocs: gwsearch.moc

#>+ 3
gwaddcontactpage.moc: $(srcdir)/gwaddcontactpage.h
	$(MOC) $(srcdir)/gwaddcontactpage.h -o gwaddcontactpage.moc

#>+ 2
mocs: gwaddcontactpage.moc

#>+ 3
gwprivacydialog.moc: $(srcdir)/gwprivacydialog.h
	$(MOC) $(srcdir)/gwprivacydialog.h -o gwprivacydialog.moc

#>+ 2
mocs: gwprivacydialog.moc

#>+ 3
gwchatsearchdialog.moc: $(srcdir)/gwchatsearchdialog.h
	$(MOC) $(srcdir)/gwchatsearchdialog.h -o gwchatsearchdialog.moc

#>+ 2
mocs: gwchatsearchdialog.moc

#>+ 3
gwcontactproperties.moc: $(srcdir)/gwcontactproperties.h
	$(MOC) $(srcdir)/gwcontactproperties.h -o gwcontactproperties.moc

#>+ 2
mocs: gwcontactproperties.moc

#>+ 3
clean-metasources:
	-rm -f  gweditaccountwidget.moc gwreceiveinvitationdialog.moc gwchatpropsdialog.moc gwsearch.moc gwaddcontactpage.moc gwprivacydialog.moc gwchatsearchdialog.moc gwcontactproperties.moc

#>+ 2
KDE_DIST=gwshowinvitation.ui gwaddcontactpage.h gwprivacy.ui gwcustomstatuswidget.ui gwchatpropswidget.ui gwcustomstatusedit.ui gwaccountpreferences.ui gwchatsearchwidget.ui gweditaccountwidget.h gwaddui.ui Makefile.in gwcontactpropswidget.ui gwcontactsearch.ui Makefile.am 

#>+ 13
clean-ui:
	-rm -f \
	gwaccountpreferences.cpp gwaccountpreferences.h gwaccountpreferences.moc \
	gwaddui.cpp gwaddui.h gwaddui.moc \
	gwshowinvitation.cpp gwshowinvitation.h gwshowinvitation.moc \
	gwcontactpropswidget.cpp gwcontactpropswidget.h gwcontactpropswidget.moc \
	gwprivacy.cpp gwprivacy.h gwprivacy.moc \
	gwcustomstatuswidget.cpp gwcustomstatuswidget.h gwcustomstatuswidget.moc \
	gwcustomstatusedit.cpp gwcustomstatusedit.h gwcustomstatusedit.moc \
	gwcontactsearch.cpp gwcontactsearch.h gwcontactsearch.moc \
	gwchatsearchwidget.cpp gwchatsearchwidget.h gwchatsearchwidget.moc \
	gwchatpropswidget.cpp gwchatpropswidget.h gwchatpropswidget.moc 

#>+ 2
docs-am:

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kopete/protocols/groupwise/ui/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  kopete/protocols/groupwise/ui/Makefile
	cd $(top_srcdir) && perl admin/am_edit kopete/protocols/groupwise/ui/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
libkopetegroupwiseui_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/gwaddcontactpage.cpp $(srcdir)/gweditaccountwidget.cpp $(srcdir)/gwreceiveinvitationdialog.cpp $(srcdir)/gwcontactproperties.cpp $(srcdir)/gwprivacydialog.cpp $(srcdir)/gwsearch.cpp $(srcdir)/gwchatsearchdialog.cpp $(srcdir)/gwchatpropsdialog.cpp gwaccountpreferences.cpp gwaddui.cpp gwshowinvitation.cpp gwcontactpropswidget.cpp gwprivacy.cpp gwcustomstatuswidget.cpp gwcustomstatusedit.cpp gwcontactsearch.cpp gwchatsearchwidget.cpp gwchatpropswidget.cpp  gwaccountpreferences.moc gwprivacydialog.moc gwchatsearchwidget.moc gwprivacy.moc gwcustomstatusedit.moc gwcontactsearch.moc gwshowinvitation.moc gwcontactpropswidget.moc gwaddcontactpage.moc gwchatsearchdialog.moc gwaddui.moc gwreceiveinvitationdialog.moc gwchatpropsdialog.moc gwsearch.moc gwcustomstatuswidget.moc gwcontactproperties.moc gwchatpropswidget.moc gweditaccountwidget.moc
	@echo 'creating libkopetegroupwiseui_la.all_cpp.cpp ...'; \
	rm -f libkopetegroupwiseui_la.all_cpp.files libkopetegroupwiseui_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libkopetegroupwiseui_la.all_cpp.final; \
	for file in gwaddcontactpage.cpp gweditaccountwidget.cpp gwreceiveinvitationdialog.cpp gwcontactproperties.cpp gwprivacydialog.cpp gwsearch.cpp gwchatsearchdialog.cpp gwchatpropsdialog.cpp gwaccountpreferences.cpp gwaddui.cpp gwshowinvitation.cpp gwcontactpropswidget.cpp gwprivacy.cpp gwcustomstatuswidget.cpp gwcustomstatusedit.cpp gwcontactsearch.cpp gwchatsearchwidget.cpp gwchatpropswidget.cpp ; do \
	  echo "#include \"$$file\"" >> libkopetegroupwiseui_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libkopetegroupwiseui_la.all_cpp.final; \
	done; \
	cat libkopetegroupwiseui_la.all_cpp.final libkopetegroupwiseui_la.all_cpp.files > libkopetegroupwiseui_la.all_cpp.cpp; \
	rm -f libkopetegroupwiseui_la.all_cpp.final libkopetegroupwiseui_la.all_cpp.files

#>+ 3
clean-final:
	-rm -f libkopetegroupwiseui_la.all_cpp.cpp

#>+ 3
final:
	$(MAKE) libkopetegroupwiseui_la_OBJECTS="$(libkopetegroupwiseui_la_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) libkopetegroupwiseui_la_OBJECTS="$(libkopetegroupwiseui_la_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) libkopetegroupwiseui_la_OBJECTS="$(libkopetegroupwiseui_la_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) libkopetegroupwiseui_la_OBJECTS="$(libkopetegroupwiseui_la_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 27
gwsearch.o: gwsearch.moc 
gwreceiveinvitationdialog.o: gwreceiveinvitationdialog.moc 
$(srcdir)/gwprivacydialog.cpp: gwaccountpreferences.h gwaddui.h gwshowinvitation.h gwcontactpropswidget.h gwprivacy.h gwcustomstatuswidget.h gwcustomstatusedit.h gwcontactsearch.h gwchatsearchwidget.h gwchatpropswidget.h 
gwcontactproperties.lo: gwcontactproperties.moc 
$(srcdir)/gweditaccountwidget.cpp: gwaccountpreferences.h gwaddui.h gwshowinvitation.h gwcontactpropswidget.h gwprivacy.h gwcustomstatuswidget.h gwcustomstatusedit.h gwcontactsearch.h gwchatsearchwidget.h gwchatpropswidget.h 
gwprivacydialog.o: gwprivacydialog.moc 
gwcontactproperties.o: gwcontactproperties.moc 
$(srcdir)/gwchatpropsdialog.cpp: gwaccountpreferences.h gwaddui.h gwshowinvitation.h gwcontactpropswidget.h gwprivacy.h gwcustomstatuswidget.h gwcustomstatusedit.h gwcontactsearch.h gwchatsearchwidget.h gwchatpropswidget.h 
gweditaccountwidget.o: gweditaccountwidget.moc 
$(srcdir)/gwcontactproperties.cpp: gwaccountpreferences.h gwaddui.h gwshowinvitation.h gwcontactpropswidget.h gwprivacy.h gwcustomstatuswidget.h gwcustomstatusedit.h gwcontactsearch.h gwchatsearchwidget.h gwchatpropswidget.h 
nmcheck: 
gwchatsearchdialog.lo: gwchatsearchdialog.moc 
$(srcdir)/gwreceiveinvitationdialog.cpp: gwaccountpreferences.h gwaddui.h gwshowinvitation.h gwcontactpropswidget.h gwprivacy.h gwcustomstatuswidget.h gwcustomstatusedit.h gwcontactsearch.h gwchatsearchwidget.h gwchatpropswidget.h 
gwaddcontactpage.lo: gwaddcontactpage.moc 
gwprivacydialog.lo: gwprivacydialog.moc 
gwsearch.lo: gwsearch.moc 
$(srcdir)/gwsearch.cpp: gwaccountpreferences.h gwaddui.h gwshowinvitation.h gwcontactpropswidget.h gwprivacy.h gwcustomstatuswidget.h gwcustomstatusedit.h gwcontactsearch.h gwchatsearchwidget.h gwchatpropswidget.h 
nmcheck-am: nmcheck
$(srcdir)/gwchatsearchdialog.cpp: gwaccountpreferences.h gwaddui.h gwshowinvitation.h gwcontactpropswidget.h gwprivacy.h gwcustomstatuswidget.h gwcustomstatusedit.h gwcontactsearch.h gwchatsearchwidget.h gwchatpropswidget.h 
gwchatpropsdialog.lo: gwchatpropsdialog.moc 
$(srcdir)/gwaddcontactpage.cpp: gwaccountpreferences.h gwaddui.h gwshowinvitation.h gwcontactpropswidget.h gwprivacy.h gwcustomstatuswidget.h gwcustomstatusedit.h gwcontactsearch.h gwchatsearchwidget.h gwchatpropswidget.h 
gwchatpropsdialog.o: gwchatpropsdialog.moc 
gwaddcontactpage.o: gwaddcontactpage.moc 
gwreceiveinvitationdialog.lo: gwreceiveinvitationdialog.moc 
gweditaccountwidget.lo: gweditaccountwidget.moc 
gwchatsearchdialog.o: gwchatsearchdialog.moc 

#>+ 150
gwaddui.cpp: $(srcdir)/gwaddui.ui gwaddui.h gwaddui.moc
	rm -f gwaddui.cpp
	echo '#include <kdialog.h>' > gwaddui.cpp
	echo '#include <klocale.h>' >> gwaddui.cpp
	$(UIC) -tr ${UIC_TR} -i gwaddui.h $(srcdir)/gwaddui.ui > gwaddui.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" gwaddui.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_gwaddui,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> gwaddui.cpp ;\
	rm -f gwaddui.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "gwaddui.moc"' >> gwaddui.cpp; else rm -f gwaddui.cpp ; exit $$ret ; fi

gwaddui.h: $(srcdir)/gwaddui.ui
	rm -rf gwaddui.h;
	$(UIC) $(srcdir)/gwaddui.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> gwaddui.h ;
gwaddui.moc: gwaddui.h
	$(MOC) gwaddui.h -o gwaddui.moc

gwcustomstatuswidget.cpp: $(srcdir)/gwcustomstatuswidget.ui gwcustomstatuswidget.h gwcustomstatuswidget.moc
	rm -f gwcustomstatuswidget.cpp
	echo '#include <kdialog.h>' > gwcustomstatuswidget.cpp
	echo '#include <klocale.h>' >> gwcustomstatuswidget.cpp
	$(UIC) -tr ${UIC_TR} -i gwcustomstatuswidget.h $(srcdir)/gwcustomstatuswidget.ui > gwcustomstatuswidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" gwcustomstatuswidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_gwcustomstatuswidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> gwcustomstatuswidget.cpp ;\
	rm -f gwcustomstatuswidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "gwcustomstatuswidget.moc"' >> gwcustomstatuswidget.cpp; else rm -f gwcustomstatuswidget.cpp ; exit $$ret ; fi

gwcustomstatuswidget.h: $(srcdir)/gwcustomstatuswidget.ui
	rm -rf gwcustomstatuswidget.h;
	$(UIC) $(srcdir)/gwcustomstatuswidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> gwcustomstatuswidget.h ;
gwcustomstatuswidget.moc: gwcustomstatuswidget.h
	$(MOC) gwcustomstatuswidget.h -o gwcustomstatuswidget.moc

gwprivacy.cpp: $(srcdir)/gwprivacy.ui gwprivacy.h gwprivacy.moc
	rm -f gwprivacy.cpp
	echo '#include <kdialog.h>' > gwprivacy.cpp
	echo '#include <klocale.h>' >> gwprivacy.cpp
	$(UIC) -tr ${UIC_TR} -i gwprivacy.h $(srcdir)/gwprivacy.ui > gwprivacy.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" gwprivacy.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_gwprivacy,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> gwprivacy.cpp ;\
	rm -f gwprivacy.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "gwprivacy.moc"' >> gwprivacy.cpp; else rm -f gwprivacy.cpp ; exit $$ret ; fi

gwprivacy.h: $(srcdir)/gwprivacy.ui
	rm -rf gwprivacy.h;
	$(UIC) $(srcdir)/gwprivacy.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> gwprivacy.h ;
gwprivacy.moc: gwprivacy.h
	$(MOC) gwprivacy.h -o gwprivacy.moc

gwchatpropswidget.cpp: $(srcdir)/gwchatpropswidget.ui gwchatpropswidget.h gwchatpropswidget.moc
	rm -f gwchatpropswidget.cpp
	echo '#include <kdialog.h>' > gwchatpropswidget.cpp
	echo '#include <klocale.h>' >> gwchatpropswidget.cpp
	$(UIC) -tr ${UIC_TR} -i gwchatpropswidget.h $(srcdir)/gwchatpropswidget.ui > gwchatpropswidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" gwchatpropswidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_gwchatpropswidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> gwchatpropswidget.cpp ;\
	rm -f gwchatpropswidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "gwchatpropswidget.moc"' >> gwchatpropswidget.cpp; else rm -f gwchatpropswidget.cpp ; exit $$ret ; fi

gwchatpropswidget.h: $(srcdir)/gwchatpropswidget.ui
	rm -rf gwchatpropswidget.h;
	$(UIC) $(srcdir)/gwchatpropswidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> gwchatpropswidget.h ;
gwchatpropswidget.moc: gwchatpropswidget.h
	$(MOC) gwchatpropswidget.h -o gwchatpropswidget.moc

gwshowinvitation.cpp: $(srcdir)/gwshowinvitation.ui gwshowinvitation.h gwshowinvitation.moc
	rm -f gwshowinvitation.cpp
	echo '#include <kdialog.h>' > gwshowinvitation.cpp
	echo '#include <klocale.h>' >> gwshowinvitation.cpp
	$(UIC) -tr ${UIC_TR} -i gwshowinvitation.h $(srcdir)/gwshowinvitation.ui > gwshowinvitation.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" gwshowinvitation.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_gwshowinvitation,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> gwshowinvitation.cpp ;\
	rm -f gwshowinvitation.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "gwshowinvitation.moc"' >> gwshowinvitation.cpp; else rm -f gwshowinvitation.cpp ; exit $$ret ; fi

gwshowinvitation.h: $(srcdir)/gwshowinvitation.ui
	rm -rf gwshowinvitation.h;
	$(UIC) $(srcdir)/gwshowinvitation.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> gwshowinvitation.h ;
gwshowinvitation.moc: gwshowinvitation.h
	$(MOC) gwshowinvitation.h -o gwshowinvitation.moc

gwcontactsearch.cpp: $(srcdir)/gwcontactsearch.ui gwcontactsearch.h gwcontactsearch.moc
	rm -f gwcontactsearch.cpp
	echo '#include <kdialog.h>' > gwcontactsearch.cpp
	echo '#include <klocale.h>' >> gwcontactsearch.cpp
	$(UIC) -tr ${UIC_TR} -i gwcontactsearch.h $(srcdir)/gwcontactsearch.ui > gwcontactsearch.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" gwcontactsearch.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_gwcontactsearch,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> gwcontactsearch.cpp ;\
	rm -f gwcontactsearch.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "gwcontactsearch.moc"' >> gwcontactsearch.cpp; else rm -f gwcontactsearch.cpp ; exit $$ret ; fi

gwcontactsearch.h: $(srcdir)/gwcontactsearch.ui
	rm -rf gwcontactsearch.h;
	$(UIC) $(srcdir)/gwcontactsearch.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> gwcontactsearch.h ;
gwcontactsearch.moc: gwcontactsearch.h
	$(MOC) gwcontactsearch.h -o gwcontactsearch.moc

gwcustomstatusedit.cpp: $(srcdir)/gwcustomstatusedit.ui gwcustomstatusedit.h gwcustomstatusedit.moc
	rm -f gwcustomstatusedit.cpp
	echo '#include <kdialog.h>' > gwcustomstatusedit.cpp
	echo '#include <klocale.h>' >> gwcustomstatusedit.cpp
	$(UIC) -tr ${UIC_TR} -i gwcustomstatusedit.h $(srcdir)/gwcustomstatusedit.ui > gwcustomstatusedit.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" gwcustomstatusedit.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_gwcustomstatusedit,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> gwcustomstatusedit.cpp ;\
	rm -f gwcustomstatusedit.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "gwcustomstatusedit.moc"' >> gwcustomstatusedit.cpp; else rm -f gwcustomstatusedit.cpp ; exit $$ret ; fi

gwcustomstatusedit.h: $(srcdir)/gwcustomstatusedit.ui
	rm -rf gwcustomstatusedit.h;
	$(UIC) $(srcdir)/gwcustomstatusedit.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> gwcustomstatusedit.h ;
gwcustomstatusedit.moc: gwcustomstatusedit.h
	$(MOC) gwcustomstatusedit.h -o gwcustomstatusedit.moc

gwaccountpreferences.cpp: $(srcdir)/gwaccountpreferences.ui gwaccountpreferences.h gwaccountpreferences.moc
	rm -f gwaccountpreferences.cpp
	echo '#include <kdialog.h>' > gwaccountpreferences.cpp
	echo '#include <klocale.h>' >> gwaccountpreferences.cpp
	$(UIC) -tr ${UIC_TR} -i gwaccountpreferences.h $(srcdir)/gwaccountpreferences.ui > gwaccountpreferences.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" gwaccountpreferences.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_gwaccountpreferences,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> gwaccountpreferences.cpp ;\
	rm -f gwaccountpreferences.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "gwaccountpreferences.moc"' >> gwaccountpreferences.cpp; else rm -f gwaccountpreferences.cpp ; exit $$ret ; fi

gwaccountpreferences.h: $(srcdir)/gwaccountpreferences.ui
	rm -rf gwaccountpreferences.h;
	$(UIC) $(srcdir)/gwaccountpreferences.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> gwaccountpreferences.h ;
gwaccountpreferences.moc: gwaccountpreferences.h
	$(MOC) gwaccountpreferences.h -o gwaccountpreferences.moc

gwchatsearchwidget.cpp: $(srcdir)/gwchatsearchwidget.ui gwchatsearchwidget.h gwchatsearchwidget.moc
	rm -f gwchatsearchwidget.cpp
	echo '#include <kdialog.h>' > gwchatsearchwidget.cpp
	echo '#include <klocale.h>' >> gwchatsearchwidget.cpp
	$(UIC) -tr ${UIC_TR} -i gwchatsearchwidget.h $(srcdir)/gwchatsearchwidget.ui > gwchatsearchwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" gwchatsearchwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_gwchatsearchwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> gwchatsearchwidget.cpp ;\
	rm -f gwchatsearchwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "gwchatsearchwidget.moc"' >> gwchatsearchwidget.cpp; else rm -f gwchatsearchwidget.cpp ; exit $$ret ; fi

gwchatsearchwidget.h: $(srcdir)/gwchatsearchwidget.ui
	rm -rf gwchatsearchwidget.h;
	$(UIC) $(srcdir)/gwchatsearchwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> gwchatsearchwidget.h ;
gwchatsearchwidget.moc: gwchatsearchwidget.h
	$(MOC) gwchatsearchwidget.h -o gwchatsearchwidget.moc

gwcontactpropswidget.cpp: $(srcdir)/gwcontactpropswidget.ui gwcontactpropswidget.h gwcontactpropswidget.moc
	rm -f gwcontactpropswidget.cpp
	echo '#include <kdialog.h>' > gwcontactpropswidget.cpp
	echo '#include <klocale.h>' >> gwcontactpropswidget.cpp
	$(UIC) -tr ${UIC_TR} -i gwcontactpropswidget.h $(srcdir)/gwcontactpropswidget.ui > gwcontactpropswidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" gwcontactpropswidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_gwcontactpropswidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> gwcontactpropswidget.cpp ;\
	rm -f gwcontactpropswidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "gwcontactpropswidget.moc"' >> gwcontactpropswidget.cpp; else rm -f gwcontactpropswidget.cpp ; exit $$ret ; fi

gwcontactpropswidget.h: $(srcdir)/gwcontactpropswidget.ui
	rm -rf gwcontactpropswidget.h;
	$(UIC) $(srcdir)/gwcontactpropswidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> gwcontactpropswidget.h ;
gwcontactpropswidget.moc: gwcontactpropswidget.h
	$(MOC) gwcontactpropswidget.h -o gwcontactpropswidget.moc
