/**********************************************************************

	--- Qt Architect generated file ---

	File: speeddialogData.cpp
	Last generated: Sun Dec 21 09:13:46 1997

	DO NOT EDIT!!!  This file will be automatically
	regenerated by qtarch.  All changes will be lost.

 *********************************************************************/

#include "speeddialogData.h"

#include <qlabel.h>
#include <klocale.h>
#include <kpushbutton.h>
#include <kstdguiitem.h>
#include <qlayout.h>
#include <kdialog.h>

speeddialogData::speeddialogData ( QWidget* parent, const char* name )
    :QDialog( parent, name, 0 )
{
    QGridLayout *grid = new QGridLayout( this, 3, 2 , KDialog::marginHint(), KDialog::spacingHint());
    sliderTick = new QSlider( this, "Slider_1" );
    grid->addWidget( sliderTick, 0, 1 );
    connect( sliderTick, SIGNAL(valueChanged(int)), SLOT(updateTick(int)) );
    sliderTick->setOrientation( QSlider::Horizontal );
    sliderTick->setRange( 10, 200 );
    sliderTick->setSteps( 10, 50 );
    sliderTick->setValue( 30 );
    sliderTick->setTracking( TRUE );
    sliderTick->setTickmarks( QSlider::NoMarks );
    sliderTick->setTickInterval( 0 );

    sliderStep = new QSlider( this, "Slider_2" );
    grid->addWidget( sliderStep, 1, 1 );

    connect( sliderStep, SIGNAL(valueChanged(int)), SLOT(updateStep(int)) );
    sliderStep->setOrientation( QSlider::Horizontal );
    sliderStep->setRange( 1, 10 );
    sliderStep->setSteps( 1, 2 );
    sliderStep->setValue( 3 );
    sliderStep->setTracking( TRUE );
    sliderStep->setTickmarks( QSlider::NoMarks );
    sliderStep->setTickInterval( 0 );

    lcdTick = new QLCDNumber( this, "LCDNumber_1" );
    lcdTick->setFrameStyle( 33 );
    lcdTick->setSmallDecimalPoint( FALSE );
    lcdTick->setNumDigits( 3 );
    lcdTick->setMode( QLCDNumber::DEC );
    lcdTick->setSegmentStyle( QLCDNumber::Outline );
    grid->addWidget( lcdTick, 0, 2  );

    lcdStep = new QLCDNumber( this, "LCDNumber_2" );
    lcdStep->setFrameStyle( 33 );
    lcdStep->setSmallDecimalPoint( FALSE );
    lcdStep->setNumDigits( 3 );
    lcdStep->setMode( QLCDNumber::DEC );
    lcdStep->setSegmentStyle( QLCDNumber::Outline );
    grid->addWidget( lcdStep, 1, 2 );


    QLabel* dlgedit_Label_1;
    dlgedit_Label_1 = new QLabel( this, "Label_1" );
    dlgedit_Label_1->setText( i18n("Tick interval:") );
    dlgedit_Label_1->setAlignment( 289 );
    dlgedit_Label_1->setMargin( -1 );
    grid->addWidget( dlgedit_Label_1, 0, 0 );


    QLabel* dlgedit_Label_2;
    dlgedit_Label_2 = new QLabel( this, "Label_2" );
    dlgedit_Label_2->setText( i18n("Step size:") );
    dlgedit_Label_2->setAlignment( 289 );
    dlgedit_Label_2->setMargin( -1 );
    grid->addWidget( dlgedit_Label_2, 1, 0 );


    QPushButton* dlgedit_PushButton_2;
    dlgedit_PushButton_2 = new KPushButton( KStdGuiItem::close(), this, "PushButton_2" );
    connect( dlgedit_PushButton_2, SIGNAL(pressed()), SLOT(terminate()) );
//	dlgedit_PushButton_2->setAutoRepeat( FALSE );
//	dlgedit_PushButton_2->setAutoResize( FALSE );
    grid->addWidget( dlgedit_PushButton_2, 2, 2 );

    //resize( 270,120 );
    setMinimumSize( 0, 0 );
    setMaximumSize( 32767, 32767 );
}


speeddialogData::~speeddialogData()
{
}
void speeddialogData::updateTick(int)
{
}
void speeddialogData::updateStep(int)
{
}
void speeddialogData::terminate()
{
}
#include "speeddialogData.moc"
