# Makefile.in generated by automake 1.10.1 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = kbruch$(EXEEXT)
subdir = kbruch/src
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(kde_kcfgdir)" \
	"$(DESTDIR)$(rcdir)" "$(DESTDIR)$(xdg_appsdir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_kbruch_OBJECTS = exercisebase.$(OBJEXT) task.$(OBJEXT) \
	ratio.$(OBJEXT) taskview.$(OBJEXT) statisticsview.$(OBJEXT) \
	primenumber.$(OBJEXT) kbruch.$(OBJEXT) mainqtwidget.$(OBJEXT) \
	taskwidget.$(OBJEXT) fractionbasewidget.$(OBJEXT) \
	resultwidget.$(OBJEXT) exercisecompare.$(OBJEXT) \
	ratiowidget.$(OBJEXT) rationalwidget.$(OBJEXT) \
	exerciseconvert.$(OBJEXT) exercisefactorize.$(OBJEXT) \
	factorizedwidget.$(OBJEXT)
#>- kbruch_OBJECTS = $(am_kbruch_OBJECTS)
#>+ 11
kbruch_final_OBJECTS = kbruch.all_cpp.o 
kbruch_nofinal_OBJECTS = exercisebase.$(OBJEXT) task.$(OBJEXT) \
	ratio.$(OBJEXT) taskview.$(OBJEXT) statisticsview.$(OBJEXT) \
	primenumber.$(OBJEXT) kbruch.$(OBJEXT) mainqtwidget.$(OBJEXT) \
	taskwidget.$(OBJEXT) fractionbasewidget.$(OBJEXT) \
	resultwidget.$(OBJEXT) exercisecompare.$(OBJEXT) \
	ratiowidget.$(OBJEXT) rationalwidget.$(OBJEXT) \
	exerciseconvert.$(OBJEXT) exercisefactorize.$(OBJEXT) \
	factorizedwidget.$(OBJEXT) taskvieweroptionsbase.$(OBJEXT) settingsclass.$(OBJEXT)
@KDE_USE_FINAL_FALSE@kbruch_OBJECTS = $(kbruch_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@kbruch_OBJECTS = $(kbruch_final_OBJECTS)
am__DEPENDENCIES_1 =
kbruch_DEPENDENCIES = $(am__DEPENDENCIES_1)
#>- kbruch_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(kbruch_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
kbruch_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(kbruch_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(kbruch_SOURCES)
DIST_SOURCES = $(kbruch_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
kde_kcfgDATA_INSTALL = $(INSTALL_DATA)
rcDATA_INSTALL = $(INSTALL_DATA)
xdg_appsDATA_INSTALL = $(INSTALL_DATA)
DATA = $(kde_kcfg_DATA) $(rc_DATA) $(xdg_apps_DATA)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_PYTHON_INCLUDES = @BOOST_PYTHON_INCLUDES@
BOOST_PYTHON_LIBS = @BOOST_PYTHON_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EQCHEM_LDADD = @EQCHEM_LDADD@
EQCHEM_SUB = @EQCHEM_SUB@
EXEEXT = @EXEEXT@
F77 = @F77@
FACILE = @FACILE@
FACILELIB = @FACILELIB@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
KIGVERSION = @KIGVERSION@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUSB = @LIBUSB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
OCAMLLIB = @OCAMLLIB@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
PYTHON_LDFLAGS = @PYTHON_LDFLAGS@
PYTHON_LIBS = @PYTHON_LIBS@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@
kbruch_COMPILE_FIRST = version.h
#>- kbruch_SOURCES = exercisebase.cpp taskvieweroptionsbase.ui task.cpp ratio.cpp taskview.cpp statisticsview.cpp primenumber.cpp kbruch.cpp mainqtwidget.cpp taskwidget.cpp fractionbasewidget.cpp resultwidget.cpp exercisecompare.cpp ratiowidget.cpp rationalwidget.cpp exerciseconvert.cpp exercisefactorize.cpp factorizedwidget.cpp settingsclass.kcfgc
#>+ 1
kbruch_SOURCES=exercisebase.cpp  task.cpp ratio.cpp taskview.cpp statisticsview.cpp primenumber.cpp kbruch.cpp mainqtwidget.cpp taskwidget.cpp fractionbasewidget.cpp resultwidget.cpp exercisecompare.cpp ratiowidget.cpp rationalwidget.cpp exerciseconvert.cpp exercisefactorize.cpp factorizedwidget.cpp  taskvieweroptionsbase.cpp settingsclass.cpp
kbruch_LDADD = $(LIB_KDEUI)
# the library search path.
kbruch_LDFLAGS = $(all_libraries) $(KDE_RPATH)
EXTRA_DIST = kbruch.cpp kbruch.h kbruch.desktop hi32-app-kbruch.png hi16-app-kbruch.png lo32-app-kbruch.png lo16-app-kbruch.png mainqtwidget.cpp mainqtwidget.h primenumber.cpp primenumber.h statisticsview.cpp statisticsview.h exercisebase.cpp exercisebase.h taskview.cpp taskview.h ratio.cpp ratio.h task.cpp task.h taskwidget.cpp taskwidget.h fractionbasewidget.cpp fractionbasewidget.h resultwidget.cpp resultwidget.h exercisecompare.cpp exercisecompare.h ratiowidget.cpp ratiowidget.h rationalwidget.cpp rationalwidget.h exerciseconvert.cpp exerciseconvert.h exercisefactorize.cpp exercisefactorize.h factorizedwidget.cpp factorizedwidget.h kbruch.rc taskvieweroptionsbase.ui
xdg_apps_DATA = kbruch.desktop
kde_kcfg_DATA = kbruch.kcfg
KDE_ICON = AUTO

####### kdevelop will overwrite this part!!! (end)############
# this 10 paths are KDE specific. Use them:
# kde_htmldir       Where your docs should go to. (contains lang subdirs)
# kde_appsdir       Where your application file (.kdelnk) should go to.
# kde_icondir       Where your icon should go to.
# kde_minidir       Where your mini icon should go to.
# kde_datadir       Where you install application data. (Use a subdir)
# kde_locale        Where translation files should go to.(contains lang subdirs)
# kde_cgidir        Where cgi-bin executables should go to.
# kde_confdir       Where config files should go to.
# kde_mimedir       Where mimetypes should go to.
# kde_toolbardir    Where general toolbar icons should go to.
# kde_wallpaperdir  Where general wallpapers should go to.

# set the include path for X, qt and KDE
INCLUDES = $(all_includes)
#>- METASOURCES = AUTO
rcdir = $(kde_datadir)/kbruch
rc_DATA = kbruchui.rc
CLEANFILES = version.h
noinst_HEADERS = version.h
#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kbruch/src/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --foreign  kbruch/src/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kbruch/src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  kbruch/src/Makefile
	cd $(top_srcdir) && perl admin/am_edit kbruch/src/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
kbruch$(EXEEXT): $(kbruch_OBJECTS) $(kbruch_DEPENDENCIES) 
	@rm -f kbruch$(EXEEXT)
	$(kbruch_LINK) $(kbruch_OBJECTS) $(kbruch_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exercisebase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exercisecompare.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exerciseconvert.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exercisefactorize.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/factorizedwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fractionbasewidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kbruch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mainqtwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/primenumber.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ratio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rationalwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ratiowidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/resultwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/statisticsview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/task.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/taskview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/taskwidget.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-kde_kcfgDATA: $(kde_kcfg_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(kde_kcfgdir)" || $(MKDIR_P) "$(DESTDIR)$(kde_kcfgdir)"
	@list='$(kde_kcfg_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(kde_kcfgDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(kde_kcfgdir)/$$f'"; \
	  $(kde_kcfgDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(kde_kcfgdir)/$$f"; \
	done

uninstall-kde_kcfgDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(kde_kcfg_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(kde_kcfgdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(kde_kcfgdir)/$$f"; \
	done
install-rcDATA: $(rc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(rcdir)" || $(MKDIR_P) "$(DESTDIR)$(rcdir)"
	@list='$(rc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(rcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(rcdir)/$$f'"; \
	  $(rcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(rcdir)/$$f"; \
	done

uninstall-rcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(rc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(rcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(rcdir)/$$f"; \
	done
install-xdg_appsDATA: $(xdg_apps_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xdg_appsdir)" || $(MKDIR_P) "$(DESTDIR)$(xdg_appsdir)"
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(xdg_appsDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  $(xdg_appsDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

uninstall-xdg_appsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(kde_kcfgdir)" "$(DESTDIR)$(rcdir)" "$(DESTDIR)$(xdg_appsdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-ui clean-kcfg clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

#>- install-data-am: install-kde_kcfgDATA install-rcDATA \
#>- 	install-xdg_appsDATA
#>+ 2
install-data-am: install-kde-icons  install-kde_kcfgDATA install-rcDATA \
	install-xdg_appsDATA

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

#>- uninstall-am: uninstall-binPROGRAMS uninstall-kde_kcfgDATA \
#>- 	uninstall-rcDATA uninstall-xdg_appsDATA
#>+ 2
uninstall-am: uninstall-kde-icons  uninstall-binPROGRAMS uninstall-kde_kcfgDATA \
	uninstall-rcDATA uninstall-xdg_appsDATA

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-kde_kcfgDATA install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-rcDATA install-strip \
	install-xdg_appsDATA installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-kde_kcfgDATA uninstall-rcDATA \
	uninstall-xdg_appsDATA


messages: rc.cpp
	LIST=`find . -name \*.h -o -name \*.hh -o -name \*.H -o -name \*.hxx -o -name \*.hpp -o -name \*.cpp -o -name \*.cc -o -name \*.cxx -o -name \*.ecpp -o -name \*.C`; \
	if test -n "$$LIST"; then \
	 $(XGETTEXT) $$LIST -o $(podir)/kbruch.pot; \
	fi

version.h: $(top_srcdir)/kbruch/VERSION
	printf "#undef KBRUCH_VERSION\n#define KBRUCH_VERSION \"`cat $(top_srcdir)/kbruch/VERSION`\"\n" > version.h
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
factorizedwidget.moc: $(srcdir)/factorizedwidget.h
	$(MOC) $(srcdir)/factorizedwidget.h -o factorizedwidget.moc

#>+ 2
mocs: factorizedwidget.moc

#>+ 3
taskview.moc: $(srcdir)/taskview.h
	$(MOC) $(srcdir)/taskview.h -o taskview.moc

#>+ 2
mocs: taskview.moc

#>+ 3
exercisefactorize.moc: $(srcdir)/exercisefactorize.h
	$(MOC) $(srcdir)/exercisefactorize.h -o exercisefactorize.moc

#>+ 2
mocs: exercisefactorize.moc

#>+ 3
exercisebase.moc: $(srcdir)/exercisebase.h
	$(MOC) $(srcdir)/exercisebase.h -o exercisebase.moc

#>+ 2
mocs: exercisebase.moc

#>+ 3
exerciseconvert.moc: $(srcdir)/exerciseconvert.h
	$(MOC) $(srcdir)/exerciseconvert.h -o exerciseconvert.moc

#>+ 2
mocs: exerciseconvert.moc

#>+ 3
ratiowidget.moc: $(srcdir)/ratiowidget.h
	$(MOC) $(srcdir)/ratiowidget.h -o ratiowidget.moc

#>+ 2
mocs: ratiowidget.moc

#>+ 3
exercisecompare.moc: $(srcdir)/exercisecompare.h
	$(MOC) $(srcdir)/exercisecompare.h -o exercisecompare.moc

#>+ 2
mocs: exercisecompare.moc

#>+ 3
taskwidget.moc: $(srcdir)/taskwidget.h
	$(MOC) $(srcdir)/taskwidget.h -o taskwidget.moc

#>+ 2
mocs: taskwidget.moc

#>+ 3
fractionbasewidget.moc: $(srcdir)/fractionbasewidget.h
	$(MOC) $(srcdir)/fractionbasewidget.h -o fractionbasewidget.moc

#>+ 2
mocs: fractionbasewidget.moc

#>+ 3
rationalwidget.moc: $(srcdir)/rationalwidget.h
	$(MOC) $(srcdir)/rationalwidget.h -o rationalwidget.moc

#>+ 2
mocs: rationalwidget.moc

#>+ 3
resultwidget.moc: $(srcdir)/resultwidget.h
	$(MOC) $(srcdir)/resultwidget.h -o resultwidget.moc

#>+ 2
mocs: resultwidget.moc

#>+ 3
statisticsview.moc: $(srcdir)/statisticsview.h
	$(MOC) $(srcdir)/statisticsview.h -o statisticsview.moc

#>+ 2
mocs: statisticsview.moc

#>+ 3
mainqtwidget.moc: $(srcdir)/mainqtwidget.h
	$(MOC) $(srcdir)/mainqtwidget.h -o mainqtwidget.moc

#>+ 2
mocs: mainqtwidget.moc

#>+ 3
clean-metasources:
	-rm -f  factorizedwidget.moc taskview.moc exercisefactorize.moc exercisebase.moc exerciseconvert.moc ratiowidget.moc exercisecompare.moc taskwidget.moc fractionbasewidget.moc rationalwidget.moc resultwidget.moc statisticsview.moc mainqtwidget.moc

#>+ 2
KDE_DIST=cr64-action-kbruch_exercise_factorisation.png cr32-action-kbruch_exercise_factorisation.png cr64-action-kbruch_exercise_common.png hi22-app-kbruch.png settingsclass.kcfgc cr64-action-kbruch_exercise_conversion.png hi64-app-kbruch.png kbruch.kcfg kbruchui.rc hi128-app-kbruch.png cr64-action-kbruch_exercise_compare.png cr32-action-kbruch_exercise_conversion.png hi48-app-kbruch.png Makefile.in cr32-action-kbruch_exercise_common.png Makefile.am hisc-app-kbruch.svgz cr32-action-kbruch_exercise_compare.png 

#>+ 4
clean-ui:
	-rm -f \
	taskvieweroptionsbase.cpp taskvieweroptionsbase.h taskvieweroptionsbase.moc 

#>+ 4
clean-kcfg:
	-rm -f \
	settingsclass.cpp settingsclass.h 

#>+ 2
docs-am:

#>+ 43
install-kde-icons:
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/crystalsvg/32x32/actions
	$(INSTALL_DATA) $(srcdir)/cr32-action-kbruch_exercise_compare.png $(DESTDIR)$(kde_icondir)/crystalsvg/32x32/actions/kbruch_exercise_compare.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps
	$(INSTALL_DATA) $(srcdir)/hi32-app-kbruch.png $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/kbruch.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/crystalsvg/64x64/actions
	$(INSTALL_DATA) $(srcdir)/cr64-action-kbruch_exercise_common.png $(DESTDIR)$(kde_icondir)/crystalsvg/64x64/actions/kbruch_exercise_common.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps
	$(INSTALL_DATA) $(srcdir)/hi16-app-kbruch.png $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/kbruch.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps
	$(INSTALL_DATA) $(srcdir)/hi48-app-kbruch.png $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/kbruch.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps
	$(INSTALL_DATA) $(srcdir)/hi64-app-kbruch.png $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps/kbruch.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/128x128/apps
	$(INSTALL_DATA) $(srcdir)/hi128-app-kbruch.png $(DESTDIR)$(kde_icondir)/hicolor/128x128/apps/kbruch.png
	$(INSTALL_DATA) $(srcdir)/cr32-action-kbruch_exercise_conversion.png $(DESTDIR)$(kde_icondir)/crystalsvg/32x32/actions/kbruch_exercise_conversion.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/scalable/apps
	$(INSTALL_DATA) $(srcdir)/hisc-app-kbruch.svgz $(DESTDIR)$(kde_icondir)/hicolor/scalable/apps/kbruch.svgz
	$(INSTALL_DATA) $(srcdir)/cr64-action-kbruch_exercise_compare.png $(DESTDIR)$(kde_icondir)/crystalsvg/64x64/actions/kbruch_exercise_compare.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps
	$(INSTALL_DATA) $(srcdir)/hi22-app-kbruch.png $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps/kbruch.png
	$(INSTALL_DATA) $(srcdir)/cr32-action-kbruch_exercise_common.png $(DESTDIR)$(kde_icondir)/crystalsvg/32x32/actions/kbruch_exercise_common.png
	$(INSTALL_DATA) $(srcdir)/cr64-action-kbruch_exercise_conversion.png $(DESTDIR)$(kde_icondir)/crystalsvg/64x64/actions/kbruch_exercise_conversion.png
	$(INSTALL_DATA) $(srcdir)/cr64-action-kbruch_exercise_factorisation.png $(DESTDIR)$(kde_icondir)/crystalsvg/64x64/actions/kbruch_exercise_factorisation.png
	$(INSTALL_DATA) $(srcdir)/cr32-action-kbruch_exercise_factorisation.png $(DESTDIR)$(kde_icondir)/crystalsvg/32x32/actions/kbruch_exercise_factorisation.png

uninstall-kde-icons:
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/32x32/actions/kbruch_exercise_compare.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/kbruch.png
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/64x64/actions/kbruch_exercise_common.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/kbruch.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/kbruch.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps/kbruch.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/128x128/apps/kbruch.png
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/32x32/actions/kbruch_exercise_conversion.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/scalable/apps/kbruch.svgz
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/64x64/actions/kbruch_exercise_compare.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps/kbruch.png
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/32x32/actions/kbruch_exercise_common.png
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/64x64/actions/kbruch_exercise_conversion.png
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/64x64/actions/kbruch_exercise_factorisation.png
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/32x32/actions/kbruch_exercise_factorisation.png

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kbruch/src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  kbruch/src/Makefile
	cd $(top_srcdir) && perl admin/am_edit kbruch/src/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
kbruch.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/exercisebase.cpp $(srcdir)/task.cpp $(srcdir)/ratio.cpp $(srcdir)/taskview.cpp $(srcdir)/statisticsview.cpp $(srcdir)/primenumber.cpp $(srcdir)/kbruch.cpp $(srcdir)/mainqtwidget.cpp $(srcdir)/taskwidget.cpp $(srcdir)/fractionbasewidget.cpp $(srcdir)/resultwidget.cpp $(srcdir)/exercisecompare.cpp $(srcdir)/ratiowidget.cpp $(srcdir)/rationalwidget.cpp $(srcdir)/exerciseconvert.cpp $(srcdir)/exercisefactorize.cpp $(srcdir)/factorizedwidget.cpp taskvieweroptionsbase.cpp settingsclass.cpp  factorizedwidget.moc exercisefactorize.moc taskview.moc ratiowidget.moc exerciseconvert.moc exercisebase.moc taskwidget.moc exercisecompare.moc rationalwidget.moc fractionbasewidget.moc taskvieweroptionsbase.moc statisticsview.moc resultwidget.moc mainqtwidget.moc
	@echo 'creating kbruch.all_cpp.cpp ...'; \
	rm -f kbruch.all_cpp.files kbruch.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> kbruch.all_cpp.final; \
	for file in exercisebase.cpp task.cpp ratio.cpp taskview.cpp statisticsview.cpp primenumber.cpp kbruch.cpp mainqtwidget.cpp taskwidget.cpp fractionbasewidget.cpp resultwidget.cpp exercisecompare.cpp ratiowidget.cpp rationalwidget.cpp exerciseconvert.cpp exercisefactorize.cpp factorizedwidget.cpp taskvieweroptionsbase.cpp settingsclass.cpp ; do \
	  echo "#include \"$$file\"" >> kbruch.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> kbruch.all_cpp.final; \
	done; \
	cat kbruch.all_cpp.final kbruch.all_cpp.files > kbruch.all_cpp.cpp; \
	rm -f kbruch.all_cpp.final kbruch.all_cpp.files

#>+ 3
clean-final:
	-rm -f kbruch.all_cpp.cpp

#>+ 3
final:
	$(MAKE) kbruch_OBJECTS="$(kbruch_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) kbruch_OBJECTS="$(kbruch_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) kbruch_OBJECTS="$(kbruch_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) kbruch_OBJECTS="$(kbruch_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 48
$(srcdir)/exercisebase.cpp: taskvieweroptionsbase.h settingsclass.h version.h 
exercisefactorize.lo: exercisefactorize.moc 
$(srcdir)/exercisefactorize.cpp: taskvieweroptionsbase.h settingsclass.h version.h 
settingsclass.cpp: version.h 
$(srcdir)/exercisecompare.cpp: taskvieweroptionsbase.h settingsclass.h version.h 
exercisebase.o: exercisebase.moc 
$(srcdir)/taskview.cpp: taskvieweroptionsbase.h settingsclass.h version.h 
resultwidget.o: resultwidget.moc 
fractionbasewidget.lo: fractionbasewidget.moc 
rationalwidget.o: rationalwidget.moc 
factorizedwidget.lo: factorizedwidget.moc 
$(srcdir)/rationalwidget.cpp: taskvieweroptionsbase.h settingsclass.h version.h 
ratiowidget.lo: ratiowidget.moc 
taskview.o: taskview.moc 
nmcheck-am: nmcheck
exercisecompare.lo: exercisecompare.moc 
mainqtwidget.o: mainqtwidget.moc 
exercisebase.lo: exercisebase.moc 
$(srcdir)/factorizedwidget.cpp: taskvieweroptionsbase.h settingsclass.h version.h 
$(srcdir)/ratio.cpp: taskvieweroptionsbase.h settingsclass.h version.h 
taskwidget.o: taskwidget.moc 
statisticsview.o: statisticsview.moc 
exercisefactorize.o: exercisefactorize.moc 
fractionbasewidget.o: fractionbasewidget.moc 
exercisecompare.o: exercisecompare.moc 
$(srcdir)/task.cpp: taskvieweroptionsbase.h settingsclass.h version.h 
taskvieweroptionsbase.cpp: version.h 
$(srcdir)/exerciseconvert.cpp: taskvieweroptionsbase.h settingsclass.h version.h 
resultwidget.lo: resultwidget.moc 
$(srcdir)/mainqtwidget.cpp: taskvieweroptionsbase.h settingsclass.h version.h 
mainqtwidget.lo: mainqtwidget.moc 
$(srcdir)/ratiowidget.cpp: taskvieweroptionsbase.h settingsclass.h version.h 
exerciseconvert.lo: exerciseconvert.moc 
rationalwidget.lo: rationalwidget.moc 
ratiowidget.o: ratiowidget.moc 
nmcheck: 
$(srcdir)/statisticsview.cpp: taskvieweroptionsbase.h settingsclass.h version.h 
$(srcdir)/resultwidget.cpp: taskvieweroptionsbase.h settingsclass.h version.h 
factorizedwidget.o: factorizedwidget.moc 
$(srcdir)/taskwidget.cpp: taskvieweroptionsbase.h settingsclass.h version.h 
taskview.lo: taskview.moc 
exerciseconvert.o: exerciseconvert.moc 
statisticsview.lo: statisticsview.moc 
$(srcdir)/kbruch.cpp: taskvieweroptionsbase.h settingsclass.h version.h 
$(srcdir)/primenumber.cpp: taskvieweroptionsbase.h settingsclass.h version.h 
$(srcdir)/fractionbasewidget.cpp: taskvieweroptionsbase.h settingsclass.h version.h 
taskwidget.lo: taskwidget.moc 

#>+ 21
settingsclass.cpp: settingsclass.h
settingsclass.h: $(srcdir)/kbruch.kcfg $(srcdir)/settingsclass.kcfgc $(KCFG_DEPENDENCIES)
	$(KCONFIG_COMPILER) $(srcdir)/kbruch.kcfg $(srcdir)/settingsclass.kcfgc; ret=$$?; \
	if test "$$ret" != 0; then rm -f settingsclass.h ; exit $$ret ;  fi


taskvieweroptionsbase.cpp: $(srcdir)/taskvieweroptionsbase.ui taskvieweroptionsbase.h taskvieweroptionsbase.moc
	rm -f taskvieweroptionsbase.cpp
	echo '#include <kdialog.h>' > taskvieweroptionsbase.cpp
	echo '#include <klocale.h>' >> taskvieweroptionsbase.cpp
	$(UIC) -tr ${UIC_TR} -i taskvieweroptionsbase.h $(srcdir)/taskvieweroptionsbase.ui > taskvieweroptionsbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" taskvieweroptionsbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_taskvieweroptionsbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> taskvieweroptionsbase.cpp ;\
	rm -f taskvieweroptionsbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "taskvieweroptionsbase.moc"' >> taskvieweroptionsbase.cpp; else rm -f taskvieweroptionsbase.cpp ; exit $$ret ; fi

taskvieweroptionsbase.h: $(srcdir)/taskvieweroptionsbase.ui
	rm -rf taskvieweroptionsbase.h;
	$(UIC) $(srcdir)/taskvieweroptionsbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> taskvieweroptionsbase.h ;
taskvieweroptionsbase.moc: taskvieweroptionsbase.h
	$(MOC) taskvieweroptionsbase.h -o taskvieweroptionsbase.moc
