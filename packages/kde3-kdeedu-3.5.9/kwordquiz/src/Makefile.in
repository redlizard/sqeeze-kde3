# Makefile.in generated by automake 1.10.1 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = kwordquiz$(EXEEXT)
subdir = kwordquiz/src
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(kde_confdir)" \
	"$(DESTDIR)$(kde_kcfgdir)" "$(DESTDIR)$(mimedir)" \
	"$(DESTDIR)$(rcdir)" "$(DESTDIR)$(xdg_appsdir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_kwordquiz_OBJECTS = kwordquizprefs.$(OBJEXT) \
	kwordquizview.$(OBJEXT) kwordquizdoc.$(OBJEXT) \
	kwordquiz.$(OBJEXT) main.$(OBJEXT) qaview.$(OBJEXT) \
	flashview.$(OBJEXT) multipleview.$(OBJEXT) wqquiz.$(OBJEXT) \
	wqlistitem.$(OBJEXT) wqscore.$(OBJEXT) keduvocdata.$(OBJEXT) \
	prefeditor.$(OBJEXT) prefquiz.$(OBJEXT) dlgsort.$(OBJEXT) \
	dlgrc.$(OBJEXT) dlgspecchar.$(OBJEXT) kvtmlwriter.$(OBJEXT) \
	dlglanguage.$(OBJEXT) wqprintdialogpage.$(OBJEXT) \
	prefcharacter.$(OBJEXT) paukerreader.$(OBJEXT) \
	wqlreader.$(OBJEXT) wqlwriter.$(OBJEXT) wqundo.$(OBJEXT) \
	prefcardappearance.$(OBJEXT) kwqnewstuff.$(OBJEXT)
#>- kwordquiz_OBJECTS = $(am_kwordquiz_OBJECTS)
#>+ 14
kwordquiz_final_OBJECTS = kwordquiz.all_cpp.o 
kwordquiz_nofinal_OBJECTS = kwordquizprefs.$(OBJEXT) \
	kwordquizview.$(OBJEXT) kwordquizdoc.$(OBJEXT) \
	kwordquiz.$(OBJEXT) main.$(OBJEXT) qaview.$(OBJEXT) \
	flashview.$(OBJEXT) multipleview.$(OBJEXT) wqquiz.$(OBJEXT) \
	wqlistitem.$(OBJEXT) wqscore.$(OBJEXT) keduvocdata.$(OBJEXT) \
	prefeditor.$(OBJEXT) prefquiz.$(OBJEXT) dlgsort.$(OBJEXT) \
	dlgrc.$(OBJEXT) dlgspecchar.$(OBJEXT) kvtmlwriter.$(OBJEXT) \
	dlglanguage.$(OBJEXT) wqprintdialogpage.$(OBJEXT) \
	prefcharacter.$(OBJEXT) paukerreader.$(OBJEXT) \
	wqlreader.$(OBJEXT) wqlwriter.$(OBJEXT) wqundo.$(OBJEXT) \
	prefcardappearance.$(OBJEXT) kwqnewstuff.$(OBJEXT) dlglanguagebase.$(OBJEXT) flashviewbase.$(OBJEXT) multipleviewbase.$(OBJEXT) qaviewbase.$(OBJEXT) prefeditorbase.$(OBJEXT) prefquizbase.$(OBJEXT) dlgsortbase.$(OBJEXT) dlgrcbase.$(OBJEXT) prefcharacterbase.$(OBJEXT) prefcardappearancebase.$(OBJEXT) prefs.$(OBJEXT)
@KDE_USE_FINAL_FALSE@kwordquiz_OBJECTS = $(kwordquiz_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@kwordquiz_OBJECTS = $(kwordquiz_final_OBJECTS)
am__DEPENDENCIES_1 =
kwordquiz_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
#>- kwordquiz_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(kwordquiz_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
kwordquiz_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(kwordquiz_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(kwordquiz_SOURCES)
DIST_SOURCES = $(kwordquiz_SOURCES)
#>- RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
#>- 	html-recursive info-recursive install-data-recursive \
#>- 	install-dvi-recursive install-exec-recursive \
#>- 	install-html-recursive install-info-recursive \
#>- 	install-pdf-recursive install-ps-recursive install-recursive \
#>- 	installcheck-recursive installdirs-recursive pdf-recursive \
#>- 	ps-recursive uninstall-recursive
#>+ 7
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive nmcheck-recursive bcheck-recursive
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
kde_confDATA_INSTALL = $(INSTALL_DATA)
kde_kcfgDATA_INSTALL = $(INSTALL_DATA)
mimeDATA_INSTALL = $(INSTALL_DATA)
rcDATA_INSTALL = $(INSTALL_DATA)
xdg_appsDATA_INSTALL = $(INSTALL_DATA)
DATA = $(kde_conf_DATA) $(kde_kcfg_DATA) $(mime_DATA) $(rc_DATA) \
	$(xdg_apps_DATA)
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_PYTHON_INCLUDES = @BOOST_PYTHON_INCLUDES@
BOOST_PYTHON_LIBS = @BOOST_PYTHON_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EQCHEM_LDADD = @EQCHEM_LDADD@
EQCHEM_SUB = @EQCHEM_SUB@
EXEEXT = @EXEEXT@
F77 = @F77@
FACILE = @FACILE@
FACILELIB = @FACILELIB@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
KIGVERSION = @KIGVERSION@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUSB = @LIBUSB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
OCAMLLIB = @OCAMLLIB@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
PYTHON_LDFLAGS = @PYTHON_LDFLAGS@
PYTHON_LIBS = @PYTHON_LIBS@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@
#>- kwordquiz_SOURCES = kwordquizprefs.cpp kwordquizview.cpp kwordquizdoc.cpp \
#>- 			kwordquiz.cpp main.cpp dlglanguagebase.ui flashviewbase.ui multipleviewbase.ui \
#>- 			qaviewbase.ui qaview.cpp flashview.cpp multipleview.cpp wqquiz.cpp wqlistitem.cpp \
#>- 			wqscore.cpp keduvocdata.cpp prefeditorbase.ui prefquizbase.ui prefeditor.cpp \
#>- 			prefquiz.cpp dlgsortbase.ui dlgsort.cpp dlgrcbase.ui dlgrc.cpp dlgspecchar.cpp \
#>- 			kvtmlwriter.cpp dlglanguage.cpp wqprintdialogpage.cpp prefcharacter.cpp \
#>- 			prefcharacterbase.ui paukerreader.cpp wqlreader.cpp wqlwriter.cpp wqundo.cpp prefs.kcfgc \
#>- 		prefcardappearance.cpp prefcardappearancebase.ui kwqnewstuff.cpp kwqnewstuff.h
#>+ 8
kwordquiz_SOURCES=kwordquizprefs.cpp kwordquizview.cpp kwordquizdoc.cpp \
			kwordquiz.cpp main.cpp    \
			 qaview.cpp flashview.cpp multipleview.cpp wqquiz.cpp wqlistitem.cpp \
			wqscore.cpp keduvocdata.cpp   prefeditor.cpp \
			prefquiz.cpp  dlgsort.cpp  dlgrc.cpp dlgspecchar.cpp \
			kvtmlwriter.cpp dlglanguage.cpp wqprintdialogpage.cpp prefcharacter.cpp \
			 paukerreader.cpp wqlreader.cpp wqlwriter.cpp wqundo.cpp  \
		prefcardappearance.cpp  kwqnewstuff.cpp kwqnewstuff.h dlglanguagebase.cpp flashviewbase.cpp multipleviewbase.cpp qaviewbase.cpp prefeditorbase.cpp prefquizbase.cpp dlgsortbase.cpp dlgrcbase.cpp prefcharacterbase.cpp prefcardappearancebase.cpp prefs.cpp

kwordquiz_LDADD = $(LIB_QT) $(LIB_KDECORE) $(LIB_KDEUI) $(LIB_KFILE) \
	$(LIBSOCKET) $(LIB_KDEPRINT) -lknewstuff

EXTRA_DIST = main.cpp kwordquiz.cpp kwordquiz.h kwordquizdoc.cpp kwordquizdoc.h kwordquizview.cpp kwordquizview.h kwordquizui.rc kwordquizprefs.cpp kwordquizprefs.h
kde_kcfg_DATA = kwordquiz.kcfg
kde_conf_DATA = kwordquizrc
mime_DATA = x-kwordquiz.desktop
mimedir = $(kde_mimedir)/application

####### kdevelop will overwrite this part!!! (end)############
# These paths are KDE specific. Use them:
# kde_appsdir         Where your application's menu entry (.desktop) should go to.
# kde_icondir         Where your icon should go to - better use KDE_ICON.
# kde_sounddir        Where your sounds should go to.
# kde_htmldir         Where your docs should go to. (contains lang subdirs)
# kde_datadir         Where you install application data. (Use a subdir)
# kde_locale          Where translation files should go to. (contains lang subdirs)
# kde_cgidir          Where cgi-bin executables should go to.
# kde_confdir         Where config files should go to (system-wide ones with default values).
# kde_mimedir         Where mimetypes .desktop files should go to.
# kde_servicesdir     Where services .desktop files should go to.
# kde_servicetypesdir Where servicetypes .desktop files should go to.
# kde_toolbardir      Where general toolbar icons should go to (deprecated, use KDE_ICON).
# kde_wallpaperdir    Where general wallpapers should go to.
# kde_templatesdir    Where templates for the "New" menu (Konqueror/KDesktop) should go to.
# kde_bindir          Where executables should go to. Use bin_PROGRAMS or bin_SCRIPTS.
# kde_libdir          Where shared libraries should go to. Use lib_LTLIBRARIES.
# kde_moduledir       Where modules (e.g. parts) should go to. Use kde_module_LTLIBRARIES.
# kde_styledir        Where Qt/KDE widget styles should go to (new in KDE 3).
# kde_designerdir     Where Qt Designer plugins should go to (new in KDE 3).

# set the include path for X, qt and KDE
INCLUDES = -I$(top_srcdir)/kwordquiz/icons $(all_includes)
SUBDIRS = . pics examples
#>- METASOURCES = AUTO

# the library search path.
kwordquiz_LDFLAGS = $(all_libraries) $(KDE_RPATH)
rcdir = $(kde_datadir)/kwordquiz
rc_DATA = kwordquizui.rc eventsrc
xdg_apps_DATA = kwordquiz.desktop
noinst_HEADERS = qaview.h flashview.h multipleview.h wqquiz.h wqlistitem.h \
		wqscore.h prefeditor.h prefquiz.h dlgsort.h dlgrc.h dlgspecchar.h kvtmlwriter.h \
		dlglanguage.h dlglanguage.h wqprintdialogpage.h prefcharacter.h wqlreader.h \
		wqlwriter.h wqundo.h prefcardappearance.h

#>- all: all-recursive
#>+ 1
all: docs-am  all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kwordquiz/src/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --foreign  kwordquiz/src/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kwordquiz/src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  kwordquiz/src/Makefile
	cd $(top_srcdir) && perl admin/am_edit kwordquiz/src/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
kwordquiz$(EXEEXT): $(kwordquiz_OBJECTS) $(kwordquiz_DEPENDENCIES) 
	@rm -f kwordquiz$(EXEEXT)
	$(kwordquiz_LINK) $(kwordquiz_OBJECTS) $(kwordquiz_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlglanguage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlgrc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlgsort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlgspecchar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flashview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/keduvocdata.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kvtmlwriter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kwordquiz.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kwordquizdoc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kwordquizprefs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kwordquizview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kwqnewstuff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multipleview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/paukerreader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prefcardappearance.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prefcharacter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prefeditor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prefquiz.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qaview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wqlistitem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wqlreader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wqlwriter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wqprintdialogpage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wqquiz.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wqscore.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wqundo.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-kde_confDATA: $(kde_conf_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(kde_confdir)" || $(MKDIR_P) "$(DESTDIR)$(kde_confdir)"
	@list='$(kde_conf_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(kde_confDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(kde_confdir)/$$f'"; \
	  $(kde_confDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(kde_confdir)/$$f"; \
	done

uninstall-kde_confDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(kde_conf_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(kde_confdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(kde_confdir)/$$f"; \
	done
install-kde_kcfgDATA: $(kde_kcfg_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(kde_kcfgdir)" || $(MKDIR_P) "$(DESTDIR)$(kde_kcfgdir)"
	@list='$(kde_kcfg_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(kde_kcfgDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(kde_kcfgdir)/$$f'"; \
	  $(kde_kcfgDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(kde_kcfgdir)/$$f"; \
	done

uninstall-kde_kcfgDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(kde_kcfg_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(kde_kcfgdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(kde_kcfgdir)/$$f"; \
	done
install-mimeDATA: $(mime_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(mimedir)" || $(MKDIR_P) "$(DESTDIR)$(mimedir)"
	@list='$(mime_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(mimeDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(mimedir)/$$f'"; \
	  $(mimeDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(mimedir)/$$f"; \
	done

uninstall-mimeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(mime_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(mimedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(mimedir)/$$f"; \
	done
install-rcDATA: $(rc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(rcdir)" || $(MKDIR_P) "$(DESTDIR)$(rcdir)"
	@list='$(rc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(rcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(rcdir)/$$f'"; \
	  $(rcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(rcdir)/$$f"; \
	done

uninstall-rcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(rc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(rcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(rcdir)/$$f"; \
	done
install-xdg_appsDATA: $(xdg_apps_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xdg_appsdir)" || $(MKDIR_P) "$(DESTDIR)$(xdg_appsdir)"
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(xdg_appsDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  $(xdg_appsDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

uninstall-xdg_appsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(kde_confdir)" "$(DESTDIR)$(kde_kcfgdir)" "$(DESTDIR)$(mimedir)" "$(DESTDIR)$(rcdir)" "$(DESTDIR)$(xdg_appsdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-ui clean-kcfg clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-kde_confDATA install-kde_kcfgDATA \
	install-mimeDATA install-rcDATA install-xdg_appsDATA

install-dvi: install-dvi-recursive

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-kde_confDATA \
	uninstall-kde_kcfgDATA uninstall-mimeDATA uninstall-rcDATA \
	uninstall-xdg_appsDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-kde_confDATA install-kde_kcfgDATA \
	install-man install-mimeDATA install-pdf install-pdf-am \
	install-ps install-ps-am install-rcDATA install-strip \
	install-xdg_appsDATA installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-kde_confDATA uninstall-kde_kcfgDATA \
	uninstall-mimeDATA uninstall-rcDATA uninstall-xdg_appsDATA


messages: rc.cpp
	LIST=`find . -name \*.h -o -name \*.hh -o -name \*.H -o -name \*.hxx -o -name \*.hpp -o -name \*.cpp -o -name \*.cc -o -name \*.cxx -o -name \*.ecpp -o -name \*.C`; \
	if test -n "$$LIST"; then \
	 $(XGETTEXT) $$LIST -o $(podir)/kwordquiz.pot; \
	fi
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
qaview.moc: $(srcdir)/qaview.h
	$(MOC) $(srcdir)/qaview.h -o qaview.moc

#>+ 2
mocs: qaview.moc

#>+ 3
flashview.moc: $(srcdir)/flashview.h
	$(MOC) $(srcdir)/flashview.h -o flashview.moc

#>+ 2
mocs: flashview.moc

#>+ 3
prefcharacter.moc: $(srcdir)/prefcharacter.h
	$(MOC) $(srcdir)/prefcharacter.h -o prefcharacter.moc

#>+ 2
mocs: prefcharacter.moc

#>+ 3
kwqnewstuff.moc: $(srcdir)/kwqnewstuff.h
	$(MOC) $(srcdir)/kwqnewstuff.h -o kwqnewstuff.moc

#>+ 2
mocs: kwqnewstuff.moc

#>+ 3
dlgrc.moc: $(srcdir)/dlgrc.h
	$(MOC) $(srcdir)/dlgrc.h -o dlgrc.moc

#>+ 2
mocs: dlgrc.moc

#>+ 3
wqquiz.moc: $(srcdir)/wqquiz.h
	$(MOC) $(srcdir)/wqquiz.h -o wqquiz.moc

#>+ 2
mocs: wqquiz.moc

#>+ 3
kwordquizdoc.moc: $(srcdir)/kwordquizdoc.h
	$(MOC) $(srcdir)/kwordquizdoc.h -o kwordquizdoc.moc

#>+ 2
mocs: kwordquizdoc.moc

#>+ 3
prefquiz.moc: $(srcdir)/prefquiz.h
	$(MOC) $(srcdir)/prefquiz.h -o prefquiz.moc

#>+ 2
mocs: prefquiz.moc

#>+ 3
prefeditor.moc: $(srcdir)/prefeditor.h
	$(MOC) $(srcdir)/prefeditor.h -o prefeditor.moc

#>+ 2
mocs: prefeditor.moc

#>+ 3
kwordquiz.moc: $(srcdir)/kwordquiz.h
	$(MOC) $(srcdir)/kwordquiz.h -o kwordquiz.moc

#>+ 2
mocs: kwordquiz.moc

#>+ 3
dlgsort.moc: $(srcdir)/dlgsort.h
	$(MOC) $(srcdir)/dlgsort.h -o dlgsort.moc

#>+ 2
mocs: dlgsort.moc

#>+ 3
kwordquizprefs.moc: $(srcdir)/kwordquizprefs.h
	$(MOC) $(srcdir)/kwordquizprefs.h -o kwordquizprefs.moc

#>+ 2
mocs: kwordquizprefs.moc

#>+ 3
multipleview.moc: $(srcdir)/multipleview.h
	$(MOC) $(srcdir)/multipleview.h -o multipleview.moc

#>+ 2
mocs: multipleview.moc

#>+ 3
kwordquizview.moc: $(srcdir)/kwordquizview.h
	$(MOC) $(srcdir)/kwordquizview.h -o kwordquizview.moc

#>+ 2
mocs: kwordquizview.moc

#>+ 3
prefcardappearance.moc: $(srcdir)/prefcardappearance.h
	$(MOC) $(srcdir)/prefcardappearance.h -o prefcardappearance.moc

#>+ 2
mocs: prefcardappearance.moc

#>+ 3
dlglanguage.moc: $(srcdir)/dlglanguage.h
	$(MOC) $(srcdir)/dlglanguage.h -o dlglanguage.moc

#>+ 2
mocs: dlglanguage.moc

#>+ 3
wqprintdialogpage.moc: $(srcdir)/wqprintdialogpage.h
	$(MOC) $(srcdir)/wqprintdialogpage.h -o wqprintdialogpage.moc

#>+ 2
mocs: wqprintdialogpage.moc

#>+ 3
dlgspecchar.moc: $(srcdir)/dlgspecchar.h
	$(MOC) $(srcdir)/dlgspecchar.h -o dlgspecchar.moc

#>+ 2
mocs: dlgspecchar.moc

#>+ 3
clean-metasources:
	-rm -f  qaview.moc flashview.moc prefcharacter.moc kwqnewstuff.moc dlgrc.moc wqquiz.moc kwordquizdoc.moc prefquiz.moc prefeditor.moc kwordquiz.moc dlgsort.moc kwordquizprefs.moc multipleview.moc kwordquizview.moc prefcardappearance.moc dlglanguage.moc wqprintdialogpage.moc dlgspecchar.moc

#>+ 2
KDE_DIST=dlgsortbase.ui eventsrc prefquizbase.ui prefcardappearancebase.ui qaviewbase.ui dlgrcbase.ui x-kwordquiz.desktop Makefile.in prefcharacterbase.ui kwordquizrc keduvocdata.h prefs.kcfgc multipleviewbase.ui flashviewbase.ui kwordquiz.desktop paukerreader.h kwordquiz.kcfg prefeditorbase.ui dlglanguagebase.ui version.h Makefile.am 

#>+ 13
clean-ui:
	-rm -f \
	dlglanguagebase.cpp dlglanguagebase.h dlglanguagebase.moc \
	flashviewbase.cpp flashviewbase.h flashviewbase.moc \
	multipleviewbase.cpp multipleviewbase.h multipleviewbase.moc \
	qaviewbase.cpp qaviewbase.h qaviewbase.moc \
	prefeditorbase.cpp prefeditorbase.h prefeditorbase.moc \
	prefquizbase.cpp prefquizbase.h prefquizbase.moc \
	dlgsortbase.cpp dlgsortbase.h dlgsortbase.moc \
	dlgrcbase.cpp dlgrcbase.h dlgrcbase.moc \
	prefcharacterbase.cpp prefcharacterbase.h prefcharacterbase.moc \
	prefcardappearancebase.cpp prefcardappearancebase.h prefcardappearancebase.moc 

#>+ 4
clean-kcfg:
	-rm -f \
	prefs.cpp prefs.h 

#>+ 2
docs-am:

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kwordquiz/src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  kwordquiz/src/Makefile
	cd $(top_srcdir) && perl admin/am_edit kwordquiz/src/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-recursive

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
kwordquiz.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/kwordquizprefs.cpp $(srcdir)/kwordquizview.cpp $(srcdir)/kwordquizdoc.cpp $(srcdir)/kwordquiz.cpp $(srcdir)/main.cpp $(srcdir)/qaview.cpp $(srcdir)/flashview.cpp $(srcdir)/multipleview.cpp $(srcdir)/wqquiz.cpp $(srcdir)/wqlistitem.cpp $(srcdir)/wqscore.cpp $(srcdir)/keduvocdata.cpp $(srcdir)/prefeditor.cpp $(srcdir)/prefquiz.cpp $(srcdir)/dlgsort.cpp $(srcdir)/dlgrc.cpp $(srcdir)/dlgspecchar.cpp $(srcdir)/kvtmlwriter.cpp $(srcdir)/dlglanguage.cpp $(srcdir)/wqprintdialogpage.cpp $(srcdir)/prefcharacter.cpp $(srcdir)/paukerreader.cpp $(srcdir)/wqlreader.cpp $(srcdir)/wqlwriter.cpp $(srcdir)/wqundo.cpp $(srcdir)/prefcardappearance.cpp $(srcdir)/kwqnewstuff.cpp dlglanguagebase.cpp flashviewbase.cpp multipleviewbase.cpp qaviewbase.cpp prefeditorbase.cpp prefquizbase.cpp dlgsortbase.cpp dlgrcbase.cpp prefcharacterbase.cpp prefcardappearancebase.cpp prefs.cpp  flashview.moc qaview.moc dlglanguagebase.moc prefcharacter.moc kwqnewstuff.moc prefeditorbase.moc dlgrcbase.moc wqquiz.moc dlgrc.moc prefquiz.moc kwordquizdoc.moc prefeditor.moc multipleviewbase.moc dlgsort.moc kwordquiz.moc prefcardappearancebase.moc qaviewbase.moc multipleview.moc kwordquizprefs.moc kwordquizview.moc dlgsortbase.moc prefcardappearance.moc prefquizbase.moc flashviewbase.moc dlgspecchar.moc wqprintdialogpage.moc dlglanguage.moc prefcharacterbase.moc
	@echo 'creating kwordquiz.all_cpp.cpp ...'; \
	rm -f kwordquiz.all_cpp.files kwordquiz.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> kwordquiz.all_cpp.final; \
	for file in kwordquizprefs.cpp kwordquizview.cpp kwordquizdoc.cpp kwordquiz.cpp main.cpp qaview.cpp flashview.cpp multipleview.cpp wqquiz.cpp wqlistitem.cpp wqscore.cpp keduvocdata.cpp prefeditor.cpp prefquiz.cpp dlgsort.cpp dlgrc.cpp dlgspecchar.cpp kvtmlwriter.cpp dlglanguage.cpp wqprintdialogpage.cpp prefcharacter.cpp paukerreader.cpp wqlreader.cpp wqlwriter.cpp wqundo.cpp prefcardappearance.cpp kwqnewstuff.cpp dlglanguagebase.cpp flashviewbase.cpp multipleviewbase.cpp qaviewbase.cpp prefeditorbase.cpp prefquizbase.cpp dlgsortbase.cpp dlgrcbase.cpp prefcharacterbase.cpp prefcardappearancebase.cpp prefs.cpp ; do \
	  echo "#include \"$$file\"" >> kwordquiz.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> kwordquiz.all_cpp.final; \
	done; \
	cat kwordquiz.all_cpp.final kwordquiz.all_cpp.files > kwordquiz.all_cpp.cpp; \
	rm -f kwordquiz.all_cpp.final kwordquiz.all_cpp.files

#>+ 3
clean-final:
	-rm -f kwordquiz.all_cpp.cpp

#>+ 3
final:
	$(MAKE) kwordquiz_OBJECTS="$(kwordquiz_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) kwordquiz_OBJECTS="$(kwordquiz_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) kwordquiz_OBJECTS="$(kwordquiz_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) kwordquiz_OBJECTS="$(kwordquiz_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 67
dlglanguage.o: dlglanguage.moc 
kwordquizview.lo: kwordquizview.moc 
$(srcdir)/dlgrc.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
$(srcdir)/wqlreader.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
$(srcdir)/kvtmlwriter.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
$(srcdir)/flashview.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
prefcharacter.lo: prefcharacter.moc 
prefquiz.o: prefquiz.moc 
$(srcdir)/main.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
$(srcdir)/prefeditor.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
$(srcdir)/prefquiz.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
$(srcdir)/wqlwriter.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
prefcardappearance.lo: prefcardappearance.moc 
nmcheck-am: nmcheck
$(srcdir)/dlgspecchar.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
$(srcdir)/kwordquizdoc.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
dlgspecchar.lo: dlgspecchar.moc 
kwordquiz.o: kwordquiz.moc 
$(srcdir)/kwordquiz.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
flashview.lo: flashview.moc 
qaview.o: qaview.moc 
qaview.lo: qaview.moc 
kwordquizview.o: kwordquizview.moc 
kwqnewstuff.o: kwqnewstuff.moc 
$(srcdir)/paukerreader.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
$(srcdir)/prefcharacter.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
kwordquizprefs.lo: kwordquizprefs.moc 
dlgrc.o: dlgrc.moc 
$(srcdir)/multipleview.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
multipleview.o: multipleview.moc 
kwordquizprefs.o: kwordquizprefs.moc 
$(srcdir)/kwordquizprefs.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
dlgrc.lo: dlgrc.moc 
$(srcdir)/wqprintdialogpage.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
flashview.o: flashview.moc 
dlgspecchar.o: dlgspecchar.moc 
$(srcdir)/dlglanguage.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
$(srcdir)/keduvocdata.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
dlgsort.lo: dlgsort.moc 
prefcharacter.o: prefcharacter.moc 
$(srcdir)/qaview.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
$(srcdir)/wqscore.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
prefquiz.lo: prefquiz.moc 
$(srcdir)/wqlistitem.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
dlglanguage.lo: dlglanguage.moc 
wqprintdialogpage.lo: wqprintdialogpage.moc 
$(srcdir)/wqundo.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
$(srcdir)/wqquiz.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
wqquiz.lo: wqquiz.moc 
kwordquizdoc.lo: kwordquizdoc.moc 
$(srcdir)/prefcardappearance.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
prefeditor.lo: prefeditor.moc 
dlgsort.o: dlgsort.moc 
prefcardappearance.o: prefcardappearance.moc 
$(srcdir)/kwqnewstuff.h: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
nmcheck: 
$(srcdir)/dlgsort.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
multipleview.lo: multipleview.moc 
kwordquiz.lo: kwordquiz.moc 
wqprintdialogpage.o: wqprintdialogpage.moc 
$(srcdir)/kwordquizview.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
$(srcdir)/kwqnewstuff.cpp: dlglanguagebase.h flashviewbase.h multipleviewbase.h qaviewbase.h prefeditorbase.h prefquizbase.h dlgsortbase.h dlgrcbase.h prefcharacterbase.h prefcardappearancebase.h prefs.h 
wqquiz.o: wqquiz.moc 
kwqnewstuff.lo: kwqnewstuff.moc 
prefeditor.o: prefeditor.moc 
kwordquizdoc.o: kwordquizdoc.moc 

#>+ 156
flashviewbase.cpp: $(srcdir)/flashviewbase.ui flashviewbase.h flashviewbase.moc
	rm -f flashviewbase.cpp
	echo '#include <kdialog.h>' > flashviewbase.cpp
	echo '#include <klocale.h>' >> flashviewbase.cpp
	$(UIC) -tr ${UIC_TR} -i flashviewbase.h $(srcdir)/flashviewbase.ui > flashviewbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" flashviewbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_flashviewbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> flashviewbase.cpp ;\
	rm -f flashviewbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "flashviewbase.moc"' >> flashviewbase.cpp; else rm -f flashviewbase.cpp ; exit $$ret ; fi

flashviewbase.h: $(srcdir)/flashviewbase.ui
	rm -rf flashviewbase.h;
	$(UIC) $(srcdir)/flashviewbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> flashviewbase.h ;
flashviewbase.moc: flashviewbase.h
	$(MOC) flashviewbase.h -o flashviewbase.moc

prefeditorbase.cpp: $(srcdir)/prefeditorbase.ui prefeditorbase.h prefeditorbase.moc
	rm -f prefeditorbase.cpp
	echo '#include <kdialog.h>' > prefeditorbase.cpp
	echo '#include <klocale.h>' >> prefeditorbase.cpp
	$(UIC) -tr ${UIC_TR} -i prefeditorbase.h $(srcdir)/prefeditorbase.ui > prefeditorbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" prefeditorbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_prefeditorbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> prefeditorbase.cpp ;\
	rm -f prefeditorbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "prefeditorbase.moc"' >> prefeditorbase.cpp; else rm -f prefeditorbase.cpp ; exit $$ret ; fi

prefeditorbase.h: $(srcdir)/prefeditorbase.ui
	rm -rf prefeditorbase.h;
	$(UIC) $(srcdir)/prefeditorbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> prefeditorbase.h ;
prefeditorbase.moc: prefeditorbase.h
	$(MOC) prefeditorbase.h -o prefeditorbase.moc

dlglanguagebase.cpp: $(srcdir)/dlglanguagebase.ui dlglanguagebase.h dlglanguagebase.moc
	rm -f dlglanguagebase.cpp
	echo '#include <kdialog.h>' > dlglanguagebase.cpp
	echo '#include <klocale.h>' >> dlglanguagebase.cpp
	$(UIC) -tr ${UIC_TR} -i dlglanguagebase.h $(srcdir)/dlglanguagebase.ui > dlglanguagebase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" dlglanguagebase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_dlglanguagebase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> dlglanguagebase.cpp ;\
	rm -f dlglanguagebase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "dlglanguagebase.moc"' >> dlglanguagebase.cpp; else rm -f dlglanguagebase.cpp ; exit $$ret ; fi

dlglanguagebase.h: $(srcdir)/dlglanguagebase.ui
	rm -rf dlglanguagebase.h;
	$(UIC) $(srcdir)/dlglanguagebase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> dlglanguagebase.h ;
dlglanguagebase.moc: dlglanguagebase.h
	$(MOC) dlglanguagebase.h -o dlglanguagebase.moc

prefcharacterbase.cpp: $(srcdir)/prefcharacterbase.ui prefcharacterbase.h prefcharacterbase.moc
	rm -f prefcharacterbase.cpp
	echo '#include <kdialog.h>' > prefcharacterbase.cpp
	echo '#include <klocale.h>' >> prefcharacterbase.cpp
	$(UIC) -tr ${UIC_TR} -i prefcharacterbase.h $(srcdir)/prefcharacterbase.ui > prefcharacterbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" prefcharacterbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_prefcharacterbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> prefcharacterbase.cpp ;\
	rm -f prefcharacterbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "prefcharacterbase.moc"' >> prefcharacterbase.cpp; else rm -f prefcharacterbase.cpp ; exit $$ret ; fi

prefcharacterbase.h: $(srcdir)/prefcharacterbase.ui
	rm -rf prefcharacterbase.h;
	$(UIC) $(srcdir)/prefcharacterbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> prefcharacterbase.h ;
prefcharacterbase.moc: prefcharacterbase.h
	$(MOC) prefcharacterbase.h -o prefcharacterbase.moc

prefs.cpp: prefs.h
prefs.h: $(srcdir)/kwordquiz.kcfg $(srcdir)/prefs.kcfgc $(KCFG_DEPENDENCIES)
	$(KCONFIG_COMPILER) $(srcdir)/kwordquiz.kcfg $(srcdir)/prefs.kcfgc; ret=$$?; \
	if test "$$ret" != 0; then rm -f prefs.h ; exit $$ret ;  fi


multipleviewbase.cpp: $(srcdir)/multipleviewbase.ui multipleviewbase.h multipleviewbase.moc
	rm -f multipleviewbase.cpp
	echo '#include <kdialog.h>' > multipleviewbase.cpp
	echo '#include <klocale.h>' >> multipleviewbase.cpp
	$(UIC) -tr ${UIC_TR} -i multipleviewbase.h $(srcdir)/multipleviewbase.ui > multipleviewbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" multipleviewbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_multipleviewbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> multipleviewbase.cpp ;\
	rm -f multipleviewbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "multipleviewbase.moc"' >> multipleviewbase.cpp; else rm -f multipleviewbase.cpp ; exit $$ret ; fi

multipleviewbase.h: $(srcdir)/multipleviewbase.ui
	rm -rf multipleviewbase.h;
	$(UIC) $(srcdir)/multipleviewbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> multipleviewbase.h ;
multipleviewbase.moc: multipleviewbase.h
	$(MOC) multipleviewbase.h -o multipleviewbase.moc

dlgsortbase.cpp: $(srcdir)/dlgsortbase.ui dlgsortbase.h dlgsortbase.moc
	rm -f dlgsortbase.cpp
	echo '#include <kdialog.h>' > dlgsortbase.cpp
	echo '#include <klocale.h>' >> dlgsortbase.cpp
	$(UIC) -tr ${UIC_TR} -i dlgsortbase.h $(srcdir)/dlgsortbase.ui > dlgsortbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" dlgsortbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_dlgsortbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> dlgsortbase.cpp ;\
	rm -f dlgsortbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "dlgsortbase.moc"' >> dlgsortbase.cpp; else rm -f dlgsortbase.cpp ; exit $$ret ; fi

dlgsortbase.h: $(srcdir)/dlgsortbase.ui
	rm -rf dlgsortbase.h;
	$(UIC) $(srcdir)/dlgsortbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> dlgsortbase.h ;
dlgsortbase.moc: dlgsortbase.h
	$(MOC) dlgsortbase.h -o dlgsortbase.moc

prefcardappearancebase.cpp: $(srcdir)/prefcardappearancebase.ui prefcardappearancebase.h prefcardappearancebase.moc
	rm -f prefcardappearancebase.cpp
	echo '#include <kdialog.h>' > prefcardappearancebase.cpp
	echo '#include <klocale.h>' >> prefcardappearancebase.cpp
	$(UIC) -tr ${UIC_TR} -i prefcardappearancebase.h $(srcdir)/prefcardappearancebase.ui > prefcardappearancebase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" prefcardappearancebase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_prefcardappearancebase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> prefcardappearancebase.cpp ;\
	rm -f prefcardappearancebase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "prefcardappearancebase.moc"' >> prefcardappearancebase.cpp; else rm -f prefcardappearancebase.cpp ; exit $$ret ; fi

prefcardappearancebase.h: $(srcdir)/prefcardappearancebase.ui
	rm -rf prefcardappearancebase.h;
	$(UIC) $(srcdir)/prefcardappearancebase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> prefcardappearancebase.h ;
prefcardappearancebase.moc: prefcardappearancebase.h
	$(MOC) prefcardappearancebase.h -o prefcardappearancebase.moc

dlgrcbase.cpp: $(srcdir)/dlgrcbase.ui dlgrcbase.h dlgrcbase.moc
	rm -f dlgrcbase.cpp
	echo '#include <kdialog.h>' > dlgrcbase.cpp
	echo '#include <klocale.h>' >> dlgrcbase.cpp
	$(UIC) -tr ${UIC_TR} -i dlgrcbase.h $(srcdir)/dlgrcbase.ui > dlgrcbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" dlgrcbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_dlgrcbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> dlgrcbase.cpp ;\
	rm -f dlgrcbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "dlgrcbase.moc"' >> dlgrcbase.cpp; else rm -f dlgrcbase.cpp ; exit $$ret ; fi

dlgrcbase.h: $(srcdir)/dlgrcbase.ui
	rm -rf dlgrcbase.h;
	$(UIC) $(srcdir)/dlgrcbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> dlgrcbase.h ;
dlgrcbase.moc: dlgrcbase.h
	$(MOC) dlgrcbase.h -o dlgrcbase.moc

qaviewbase.cpp: $(srcdir)/qaviewbase.ui qaviewbase.h qaviewbase.moc
	rm -f qaviewbase.cpp
	echo '#include <kdialog.h>' > qaviewbase.cpp
	echo '#include <klocale.h>' >> qaviewbase.cpp
	$(UIC) -tr ${UIC_TR} -i qaviewbase.h $(srcdir)/qaviewbase.ui > qaviewbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" qaviewbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_qaviewbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> qaviewbase.cpp ;\
	rm -f qaviewbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "qaviewbase.moc"' >> qaviewbase.cpp; else rm -f qaviewbase.cpp ; exit $$ret ; fi

qaviewbase.h: $(srcdir)/qaviewbase.ui
	rm -rf qaviewbase.h;
	$(UIC) $(srcdir)/qaviewbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> qaviewbase.h ;
qaviewbase.moc: qaviewbase.h
	$(MOC) qaviewbase.h -o qaviewbase.moc

prefquizbase.cpp: $(srcdir)/prefquizbase.ui prefquizbase.h prefquizbase.moc
	rm -f prefquizbase.cpp
	echo '#include <kdialog.h>' > prefquizbase.cpp
	echo '#include <klocale.h>' >> prefquizbase.cpp
	$(UIC) -tr ${UIC_TR} -i prefquizbase.h $(srcdir)/prefquizbase.ui > prefquizbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" prefquizbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_prefquizbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> prefquizbase.cpp ;\
	rm -f prefquizbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "prefquizbase.moc"' >> prefquizbase.cpp; else rm -f prefquizbase.cpp ; exit $$ret ; fi

prefquizbase.h: $(srcdir)/prefquizbase.ui
	rm -rf prefquizbase.h;
	$(UIC) $(srcdir)/prefquizbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> prefquizbase.h ;
prefquizbase.moc: prefquizbase.h
	$(MOC) prefquizbase.h -o prefquizbase.moc
