# Makefile.in generated by automake 1.10.1 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = kvoctrain/kvoctrain/common-dialogs
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libcommondlg_la_LIBADD =
am_libcommondlg_la_OBJECTS = ProgressDlg.lo kvoctrainprefs.lo \
	generaloptions.lo viewoptions.lo pasteoptions.lo \
	blockoptions.lo groupoptions.lo languageoptions.lo \
	queryoptions.lo thresholdoptions.lo profilesdialog.lo
#>- libcommondlg_la_OBJECTS = $(am_libcommondlg_la_OBJECTS)
#>+ 7
libcommondlg_la_final_OBJECTS = libcommondlg_la.all_cpp.lo 
libcommondlg_la_nofinal_OBJECTS = ProgressDlg.lo kvoctrainprefs.lo \
	generaloptions.lo viewoptions.lo pasteoptions.lo \
	blockoptions.lo groupoptions.lo languageoptions.lo \
	queryoptions.lo thresholdoptions.lo profilesdialog.lo ProgressDlgForm.lo generaloptionsbase.lo viewoptionsbase.lo pasteoptionsbase.lo blockoptionsbase.lo groupoptionsbase.lo languageoptionsbase.lo queryoptionsbase.lo thresholdoptionsbase.lo languagesettings.lo prefs.lo presettings.lo
@KDE_USE_FINAL_FALSE@libcommondlg_la_OBJECTS = $(libcommondlg_la_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@libcommondlg_la_OBJECTS = $(libcommondlg_la_final_OBJECTS)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libcommondlg_la_SOURCES)
DIST_SOURCES = $(libcommondlg_la_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(kde_kcfgdir)"
kde_kcfgDATA_INSTALL = $(INSTALL_DATA)
DATA = $(kde_kcfg_DATA)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_PYTHON_INCLUDES = @BOOST_PYTHON_INCLUDES@
BOOST_PYTHON_LIBS = @BOOST_PYTHON_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EQCHEM_LDADD = @EQCHEM_LDADD@
EQCHEM_SUB = @EQCHEM_SUB@
EXEEXT = @EXEEXT@
F77 = @F77@
FACILE = @FACILE@
FACILELIB = @FACILELIB@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
KIGVERSION = @KIGVERSION@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUSB = @LIBUSB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
OCAMLLIB = @OCAMLLIB@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
PYTHON_LDFLAGS = @PYTHON_LDFLAGS@
PYTHON_LIBS = @PYTHON_LIBS@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@
INCLUDES = -I$(srcdir)/.. -I$(srcdir)/../kvt-core $(all_includes)
noinst_LTLIBRARIES = libcommondlg.la
#>- libcommondlg_la_SOURCES = ProgressDlg.cpp ProgressDlgForm.ui \
#>-   languagesettings.kcfgc prefs.kcfgc presettings.kcfgc kvoctrainprefs.cpp kvoctrainprefs.h \
#>-   generaloptionsbase.ui generaloptions.cpp viewoptionsbase.ui viewoptions.cpp \
#>-   pasteoptionsbase.ui pasteoptions.cpp blockoptionsbase.ui groupoptionsbase.ui \
#>-   languageoptionsbase.ui queryoptionsbase.ui thresholdoptionsbase.ui blockoptions.cpp \
#>-   groupoptions.cpp languageoptions.cpp queryoptions.cpp thresholdoptions.cpp \
#>-   profilesdialog.cpp
#>+ 7
libcommondlg_la_SOURCES=ProgressDlg.cpp  \
     kvoctrainprefs.cpp kvoctrainprefs.h \
   generaloptions.cpp  viewoptions.cpp \
   pasteoptions.cpp   \
     blockoptions.cpp \
  groupoptions.cpp languageoptions.cpp queryoptions.cpp thresholdoptions.cpp \
  profilesdialog.cpp ProgressDlgForm.cpp generaloptionsbase.cpp viewoptionsbase.cpp pasteoptionsbase.cpp blockoptionsbase.cpp groupoptionsbase.cpp languageoptionsbase.cpp queryoptionsbase.cpp thresholdoptionsbase.cpp languagesettings.cpp prefs.cpp presettings.cpp

#>- METASOURCES = AUTO
kde_kcfg_DATA = kvoctrain.kcfg languagesettings.kcfg presettings.kcfg
noinst_HEADERS = generaloptions.h viewoptions.h pasteoptions.h blockoptions.h \
  groupoptions.h languageoptions.h queryoptions.h thresholdoptions.h profilesdialog.h

#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kvoctrain/kvoctrain/common-dialogs/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --foreign  kvoctrain/kvoctrain/common-dialogs/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kvoctrain/kvoctrain/common-dialogs/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  kvoctrain/kvoctrain/common-dialogs/Makefile
	cd $(top_srcdir) && perl admin/am_edit kvoctrain/kvoctrain/common-dialogs/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libcommondlg.la: $(libcommondlg_la_OBJECTS) $(libcommondlg_la_DEPENDENCIES) 
	$(CXXLINK)  $(libcommondlg_la_OBJECTS) $(libcommondlg_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ProgressDlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blockoptions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/generaloptions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/groupoptions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kvoctrainprefs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/languageoptions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pasteoptions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/profilesdialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/queryoptions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thresholdoptions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/viewoptions.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-kde_kcfgDATA: $(kde_kcfg_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(kde_kcfgdir)" || $(MKDIR_P) "$(DESTDIR)$(kde_kcfgdir)"
	@list='$(kde_kcfg_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(kde_kcfgDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(kde_kcfgdir)/$$f'"; \
	  $(kde_kcfgDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(kde_kcfgdir)/$$f"; \
	done

uninstall-kde_kcfgDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(kde_kcfg_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(kde_kcfgdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(kde_kcfgdir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(kde_kcfgdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
#>- 	mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-ui clean-kcfg clean-bcheck clean-final  clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-kde_kcfgDATA

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-kde_kcfgDATA

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-kde_kcfgDATA install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-kde_kcfgDATA

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
ProgressDlg.moc: $(srcdir)/ProgressDlg.h
	$(MOC) $(srcdir)/ProgressDlg.h -o ProgressDlg.moc

#>+ 2
mocs: ProgressDlg.moc

#>+ 3
kvoctrainprefs.moc: $(srcdir)/kvoctrainprefs.h
	$(MOC) $(srcdir)/kvoctrainprefs.h -o kvoctrainprefs.moc

#>+ 2
mocs: kvoctrainprefs.moc

#>+ 3
profilesdialog.moc: $(srcdir)/profilesdialog.h
	$(MOC) $(srcdir)/profilesdialog.h -o profilesdialog.moc

#>+ 2
mocs: profilesdialog.moc

#>+ 3
blockoptions.moc: $(srcdir)/blockoptions.h
	$(MOC) $(srcdir)/blockoptions.h -o blockoptions.moc

#>+ 2
mocs: blockoptions.moc

#>+ 3
viewoptions.moc: $(srcdir)/viewoptions.h
	$(MOC) $(srcdir)/viewoptions.h -o viewoptions.moc

#>+ 2
mocs: viewoptions.moc

#>+ 3
groupoptions.moc: $(srcdir)/groupoptions.h
	$(MOC) $(srcdir)/groupoptions.h -o groupoptions.moc

#>+ 2
mocs: groupoptions.moc

#>+ 3
generaloptions.moc: $(srcdir)/generaloptions.h
	$(MOC) $(srcdir)/generaloptions.h -o generaloptions.moc

#>+ 2
mocs: generaloptions.moc

#>+ 3
queryoptions.moc: $(srcdir)/queryoptions.h
	$(MOC) $(srcdir)/queryoptions.h -o queryoptions.moc

#>+ 2
mocs: queryoptions.moc

#>+ 3
languageoptions.moc: $(srcdir)/languageoptions.h
	$(MOC) $(srcdir)/languageoptions.h -o languageoptions.moc

#>+ 2
mocs: languageoptions.moc

#>+ 3
pasteoptions.moc: $(srcdir)/pasteoptions.h
	$(MOC) $(srcdir)/pasteoptions.h -o pasteoptions.moc

#>+ 2
mocs: pasteoptions.moc

#>+ 3
thresholdoptions.moc: $(srcdir)/thresholdoptions.h
	$(MOC) $(srcdir)/thresholdoptions.h -o thresholdoptions.moc

#>+ 2
mocs: thresholdoptions.moc

#>+ 3
clean-metasources:
	-rm -f  ProgressDlg.moc kvoctrainprefs.moc profilesdialog.moc blockoptions.moc viewoptions.moc groupoptions.moc generaloptions.moc queryoptions.moc languageoptions.moc pasteoptions.moc thresholdoptions.moc

#>+ 2
KDE_DIST=groupoptionsbase.ui languageoptionsbase.ui Makefile.in kvoctrain.kcfg presettings.kcfg languagesettings.kcfg viewoptionsbase.ui prefs.kcfgc ProgressDlgForm.ui ProgressDlg.h queryoptionsbase.ui blockoptionsbase.ui languagesettings.kcfgc generaloptionsbase.ui presettings.kcfgc thresholdoptionsbase.ui pasteoptionsbase.ui Makefile.am 

#>+ 12
clean-ui:
	-rm -f \
	ProgressDlgForm.cpp ProgressDlgForm.h ProgressDlgForm.moc \
	generaloptionsbase.cpp generaloptionsbase.h generaloptionsbase.moc \
	viewoptionsbase.cpp viewoptionsbase.h viewoptionsbase.moc \
	pasteoptionsbase.cpp pasteoptionsbase.h pasteoptionsbase.moc \
	blockoptionsbase.cpp blockoptionsbase.h blockoptionsbase.moc \
	groupoptionsbase.cpp groupoptionsbase.h groupoptionsbase.moc \
	languageoptionsbase.cpp languageoptionsbase.h languageoptionsbase.moc \
	queryoptionsbase.cpp queryoptionsbase.h queryoptionsbase.moc \
	thresholdoptionsbase.cpp thresholdoptionsbase.h thresholdoptionsbase.moc 

#>+ 6
clean-kcfg:
	-rm -f \
	languagesettings.cpp languagesettings.h \
	prefs.cpp prefs.h \
	presettings.cpp presettings.h 

#>+ 2
docs-am:

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kvoctrain/kvoctrain/common-dialogs/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  kvoctrain/kvoctrain/common-dialogs/Makefile
	cd $(top_srcdir) && perl admin/am_edit kvoctrain/kvoctrain/common-dialogs/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
libcommondlg_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/ProgressDlg.cpp $(srcdir)/kvoctrainprefs.cpp $(srcdir)/generaloptions.cpp $(srcdir)/viewoptions.cpp $(srcdir)/pasteoptions.cpp $(srcdir)/blockoptions.cpp $(srcdir)/groupoptions.cpp $(srcdir)/languageoptions.cpp $(srcdir)/queryoptions.cpp $(srcdir)/thresholdoptions.cpp $(srcdir)/profilesdialog.cpp ProgressDlgForm.cpp generaloptionsbase.cpp viewoptionsbase.cpp pasteoptionsbase.cpp blockoptionsbase.cpp groupoptionsbase.cpp languageoptionsbase.cpp queryoptionsbase.cpp thresholdoptionsbase.cpp languagesettings.cpp prefs.cpp presettings.cpp  ProgressDlg.moc pasteoptionsbase.moc generaloptionsbase.moc viewoptions.moc blockoptions.moc queryoptionsbase.moc languageoptions.moc languageoptionsbase.moc thresholdoptions.moc ProgressDlgForm.moc kvoctrainprefs.moc thresholdoptionsbase.moc profilesdialog.moc blockoptionsbase.moc groupoptions.moc generaloptions.moc queryoptions.moc pasteoptions.moc groupoptionsbase.moc viewoptionsbase.moc
	@echo 'creating libcommondlg_la.all_cpp.cpp ...'; \
	rm -f libcommondlg_la.all_cpp.files libcommondlg_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libcommondlg_la.all_cpp.final; \
	for file in ProgressDlg.cpp kvoctrainprefs.cpp generaloptions.cpp viewoptions.cpp pasteoptions.cpp blockoptions.cpp groupoptions.cpp languageoptions.cpp queryoptions.cpp thresholdoptions.cpp profilesdialog.cpp ProgressDlgForm.cpp generaloptionsbase.cpp viewoptionsbase.cpp pasteoptionsbase.cpp blockoptionsbase.cpp groupoptionsbase.cpp languageoptionsbase.cpp queryoptionsbase.cpp thresholdoptionsbase.cpp languagesettings.cpp prefs.cpp presettings.cpp ; do \
	  echo "#include \"$$file\"" >> libcommondlg_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libcommondlg_la.all_cpp.final; \
	done; \
	cat libcommondlg_la.all_cpp.final libcommondlg_la.all_cpp.files > libcommondlg_la.all_cpp.cpp; \
	rm -f libcommondlg_la.all_cpp.final libcommondlg_la.all_cpp.files

#>+ 3
clean-final:
	-rm -f libcommondlg_la.all_cpp.cpp

#>+ 3
final:
	$(MAKE) libcommondlg_la_OBJECTS="$(libcommondlg_la_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) libcommondlg_la_OBJECTS="$(libcommondlg_la_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) libcommondlg_la_OBJECTS="$(libcommondlg_la_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) libcommondlg_la_OBJECTS="$(libcommondlg_la_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 37
generaloptions.lo: generaloptions.moc 
$(srcdir)/profilesdialog.cpp: ProgressDlgForm.h generaloptionsbase.h viewoptionsbase.h pasteoptionsbase.h blockoptionsbase.h groupoptionsbase.h languageoptionsbase.h queryoptionsbase.h thresholdoptionsbase.h languagesettings.h prefs.h presettings.h 
profilesdialog.o: profilesdialog.moc 
$(srcdir)/groupoptions.cpp: ProgressDlgForm.h generaloptionsbase.h viewoptionsbase.h pasteoptionsbase.h blockoptionsbase.h groupoptionsbase.h languageoptionsbase.h queryoptionsbase.h thresholdoptionsbase.h languagesettings.h prefs.h presettings.h 
thresholdoptions.lo: thresholdoptions.moc 
ProgressDlg.lo: ProgressDlg.moc 
groupoptions.lo: groupoptions.moc 
$(srcdir)/blockoptions.cpp: ProgressDlgForm.h generaloptionsbase.h viewoptionsbase.h pasteoptionsbase.h blockoptionsbase.h groupoptionsbase.h languageoptionsbase.h queryoptionsbase.h thresholdoptionsbase.h languagesettings.h prefs.h presettings.h 
blockoptions.lo: blockoptions.moc 
viewoptions.lo: viewoptions.moc 
nmcheck-am: nmcheck
pasteoptions.o: pasteoptions.moc 
generaloptions.o: generaloptions.moc 
viewoptions.o: viewoptions.moc 
languageoptions.o: languageoptions.moc 
$(srcdir)/viewoptions.cpp: ProgressDlgForm.h generaloptionsbase.h viewoptionsbase.h pasteoptionsbase.h blockoptionsbase.h groupoptionsbase.h languageoptionsbase.h queryoptionsbase.h thresholdoptionsbase.h languagesettings.h prefs.h presettings.h 
blockoptions.o: blockoptions.moc 
thresholdoptions.o: thresholdoptions.moc 
queryoptions.o: queryoptions.moc 
$(srcdir)/languageoptions.cpp: ProgressDlgForm.h generaloptionsbase.h viewoptionsbase.h pasteoptionsbase.h blockoptionsbase.h groupoptionsbase.h languageoptionsbase.h queryoptionsbase.h thresholdoptionsbase.h languagesettings.h prefs.h presettings.h 
profilesdialog.lo: profilesdialog.moc 
$(srcdir)/kvoctrainprefs.cpp: ProgressDlgForm.h generaloptionsbase.h viewoptionsbase.h pasteoptionsbase.h blockoptionsbase.h groupoptionsbase.h languageoptionsbase.h queryoptionsbase.h thresholdoptionsbase.h languagesettings.h prefs.h presettings.h 
$(srcdir)/thresholdoptions.cpp: ProgressDlgForm.h generaloptionsbase.h viewoptionsbase.h pasteoptionsbase.h blockoptionsbase.h groupoptionsbase.h languageoptionsbase.h queryoptionsbase.h thresholdoptionsbase.h languagesettings.h prefs.h presettings.h 
$(srcdir)/ProgressDlg.cpp: ProgressDlgForm.h generaloptionsbase.h viewoptionsbase.h pasteoptionsbase.h blockoptionsbase.h groupoptionsbase.h languageoptionsbase.h queryoptionsbase.h thresholdoptionsbase.h languagesettings.h prefs.h presettings.h 
$(srcdir)/queryoptions.cpp: ProgressDlgForm.h generaloptionsbase.h viewoptionsbase.h pasteoptionsbase.h blockoptionsbase.h groupoptionsbase.h languageoptionsbase.h queryoptionsbase.h thresholdoptionsbase.h languagesettings.h prefs.h presettings.h 
$(srcdir)/pasteoptions.cpp: ProgressDlgForm.h generaloptionsbase.h viewoptionsbase.h pasteoptionsbase.h blockoptionsbase.h groupoptionsbase.h languageoptionsbase.h queryoptionsbase.h thresholdoptionsbase.h languagesettings.h prefs.h presettings.h 
nmcheck: 
pasteoptions.lo: pasteoptions.moc 
ProgressDlg.o: ProgressDlg.moc 
$(srcdir)/kvoctrainprefs.h: ProgressDlgForm.h generaloptionsbase.h viewoptionsbase.h pasteoptionsbase.h blockoptionsbase.h groupoptionsbase.h languageoptionsbase.h queryoptionsbase.h thresholdoptionsbase.h languagesettings.h prefs.h presettings.h 
groupoptions.o: groupoptions.moc 
queryoptions.lo: queryoptions.moc 
languageoptions.lo: languageoptions.moc 
$(srcdir)/generaloptions.cpp: ProgressDlgForm.h generaloptionsbase.h viewoptionsbase.h pasteoptionsbase.h blockoptionsbase.h groupoptionsbase.h languageoptionsbase.h queryoptionsbase.h thresholdoptionsbase.h languagesettings.h prefs.h presettings.h 
kvoctrainprefs.lo: kvoctrainprefs.moc 
kvoctrainprefs.o: kvoctrainprefs.moc 

#>+ 153
presettings.cpp: presettings.h
presettings.h: $(srcdir)/presettings.kcfg $(srcdir)/presettings.kcfgc $(KCFG_DEPENDENCIES)
	$(KCONFIG_COMPILER) $(srcdir)/presettings.kcfg $(srcdir)/presettings.kcfgc; ret=$$?; \
	if test "$$ret" != 0; then rm -f presettings.h ; exit $$ret ;  fi


queryoptionsbase.cpp: $(srcdir)/queryoptionsbase.ui queryoptionsbase.h queryoptionsbase.moc
	rm -f queryoptionsbase.cpp
	echo '#include <kdialog.h>' > queryoptionsbase.cpp
	echo '#include <klocale.h>' >> queryoptionsbase.cpp
	$(UIC) -tr ${UIC_TR} -i queryoptionsbase.h $(srcdir)/queryoptionsbase.ui > queryoptionsbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" queryoptionsbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_queryoptionsbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> queryoptionsbase.cpp ;\
	rm -f queryoptionsbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "queryoptionsbase.moc"' >> queryoptionsbase.cpp; else rm -f queryoptionsbase.cpp ; exit $$ret ; fi

queryoptionsbase.h: $(srcdir)/queryoptionsbase.ui
	rm -rf queryoptionsbase.h;
	$(UIC) $(srcdir)/queryoptionsbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> queryoptionsbase.h ;
queryoptionsbase.moc: queryoptionsbase.h
	$(MOC) queryoptionsbase.h -o queryoptionsbase.moc

ProgressDlgForm.cpp: $(srcdir)/ProgressDlgForm.ui ProgressDlgForm.h ProgressDlgForm.moc
	rm -f ProgressDlgForm.cpp
	echo '#include <kdialog.h>' > ProgressDlgForm.cpp
	echo '#include <klocale.h>' >> ProgressDlgForm.cpp
	$(UIC) -tr ${UIC_TR} -i ProgressDlgForm.h $(srcdir)/ProgressDlgForm.ui > ProgressDlgForm.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" ProgressDlgForm.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_ProgressDlgForm,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> ProgressDlgForm.cpp ;\
	rm -f ProgressDlgForm.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "ProgressDlgForm.moc"' >> ProgressDlgForm.cpp; else rm -f ProgressDlgForm.cpp ; exit $$ret ; fi

ProgressDlgForm.h: $(srcdir)/ProgressDlgForm.ui
	rm -rf ProgressDlgForm.h;
	$(UIC) $(srcdir)/ProgressDlgForm.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> ProgressDlgForm.h ;
ProgressDlgForm.moc: ProgressDlgForm.h
	$(MOC) ProgressDlgForm.h -o ProgressDlgForm.moc

languageoptionsbase.cpp: $(srcdir)/languageoptionsbase.ui languageoptionsbase.h languageoptionsbase.moc
	rm -f languageoptionsbase.cpp
	echo '#include <kdialog.h>' > languageoptionsbase.cpp
	echo '#include <klocale.h>' >> languageoptionsbase.cpp
	$(UIC) -tr ${UIC_TR} -i languageoptionsbase.h $(srcdir)/languageoptionsbase.ui > languageoptionsbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" languageoptionsbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_languageoptionsbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> languageoptionsbase.cpp ;\
	rm -f languageoptionsbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "languageoptionsbase.moc"' >> languageoptionsbase.cpp; else rm -f languageoptionsbase.cpp ; exit $$ret ; fi

languageoptionsbase.h: $(srcdir)/languageoptionsbase.ui
	rm -rf languageoptionsbase.h;
	$(UIC) $(srcdir)/languageoptionsbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> languageoptionsbase.h ;
languageoptionsbase.moc: languageoptionsbase.h
	$(MOC) languageoptionsbase.h -o languageoptionsbase.moc

thresholdoptionsbase.cpp: $(srcdir)/thresholdoptionsbase.ui thresholdoptionsbase.h thresholdoptionsbase.moc
	rm -f thresholdoptionsbase.cpp
	echo '#include <kdialog.h>' > thresholdoptionsbase.cpp
	echo '#include <klocale.h>' >> thresholdoptionsbase.cpp
	$(UIC) -tr ${UIC_TR} -i thresholdoptionsbase.h $(srcdir)/thresholdoptionsbase.ui > thresholdoptionsbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" thresholdoptionsbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_thresholdoptionsbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> thresholdoptionsbase.cpp ;\
	rm -f thresholdoptionsbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "thresholdoptionsbase.moc"' >> thresholdoptionsbase.cpp; else rm -f thresholdoptionsbase.cpp ; exit $$ret ; fi

thresholdoptionsbase.h: $(srcdir)/thresholdoptionsbase.ui
	rm -rf thresholdoptionsbase.h;
	$(UIC) $(srcdir)/thresholdoptionsbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> thresholdoptionsbase.h ;
thresholdoptionsbase.moc: thresholdoptionsbase.h
	$(MOC) thresholdoptionsbase.h -o thresholdoptionsbase.moc

blockoptionsbase.cpp: $(srcdir)/blockoptionsbase.ui blockoptionsbase.h blockoptionsbase.moc
	rm -f blockoptionsbase.cpp
	echo '#include <kdialog.h>' > blockoptionsbase.cpp
	echo '#include <klocale.h>' >> blockoptionsbase.cpp
	$(UIC) -tr ${UIC_TR} -i blockoptionsbase.h $(srcdir)/blockoptionsbase.ui > blockoptionsbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" blockoptionsbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_blockoptionsbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> blockoptionsbase.cpp ;\
	rm -f blockoptionsbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "blockoptionsbase.moc"' >> blockoptionsbase.cpp; else rm -f blockoptionsbase.cpp ; exit $$ret ; fi

blockoptionsbase.h: $(srcdir)/blockoptionsbase.ui
	rm -rf blockoptionsbase.h;
	$(UIC) $(srcdir)/blockoptionsbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> blockoptionsbase.h ;
blockoptionsbase.moc: blockoptionsbase.h
	$(MOC) blockoptionsbase.h -o blockoptionsbase.moc

prefs.cpp: prefs.h
prefs.h: $(srcdir)/kvoctrain.kcfg $(srcdir)/prefs.kcfgc $(KCFG_DEPENDENCIES)
	$(KCONFIG_COMPILER) $(srcdir)/kvoctrain.kcfg $(srcdir)/prefs.kcfgc; ret=$$?; \
	if test "$$ret" != 0; then rm -f prefs.h ; exit $$ret ;  fi


generaloptionsbase.cpp: $(srcdir)/generaloptionsbase.ui generaloptionsbase.h generaloptionsbase.moc
	rm -f generaloptionsbase.cpp
	echo '#include <kdialog.h>' > generaloptionsbase.cpp
	echo '#include <klocale.h>' >> generaloptionsbase.cpp
	$(UIC) -tr ${UIC_TR} -i generaloptionsbase.h $(srcdir)/generaloptionsbase.ui > generaloptionsbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" generaloptionsbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_generaloptionsbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> generaloptionsbase.cpp ;\
	rm -f generaloptionsbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "generaloptionsbase.moc"' >> generaloptionsbase.cpp; else rm -f generaloptionsbase.cpp ; exit $$ret ; fi

generaloptionsbase.h: $(srcdir)/generaloptionsbase.ui
	rm -rf generaloptionsbase.h;
	$(UIC) $(srcdir)/generaloptionsbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> generaloptionsbase.h ;
generaloptionsbase.moc: generaloptionsbase.h
	$(MOC) generaloptionsbase.h -o generaloptionsbase.moc

groupoptionsbase.cpp: $(srcdir)/groupoptionsbase.ui groupoptionsbase.h groupoptionsbase.moc
	rm -f groupoptionsbase.cpp
	echo '#include <kdialog.h>' > groupoptionsbase.cpp
	echo '#include <klocale.h>' >> groupoptionsbase.cpp
	$(UIC) -tr ${UIC_TR} -i groupoptionsbase.h $(srcdir)/groupoptionsbase.ui > groupoptionsbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" groupoptionsbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_groupoptionsbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> groupoptionsbase.cpp ;\
	rm -f groupoptionsbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "groupoptionsbase.moc"' >> groupoptionsbase.cpp; else rm -f groupoptionsbase.cpp ; exit $$ret ; fi

groupoptionsbase.h: $(srcdir)/groupoptionsbase.ui
	rm -rf groupoptionsbase.h;
	$(UIC) $(srcdir)/groupoptionsbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> groupoptionsbase.h ;
groupoptionsbase.moc: groupoptionsbase.h
	$(MOC) groupoptionsbase.h -o groupoptionsbase.moc

languagesettings.cpp: languagesettings.h
languagesettings.h: $(srcdir)/languagesettings.kcfg $(srcdir)/languagesettings.kcfgc $(KCFG_DEPENDENCIES)
	$(KCONFIG_COMPILER) $(srcdir)/languagesettings.kcfg $(srcdir)/languagesettings.kcfgc; ret=$$?; \
	if test "$$ret" != 0; then rm -f languagesettings.h ; exit $$ret ;  fi


viewoptionsbase.cpp: $(srcdir)/viewoptionsbase.ui viewoptionsbase.h viewoptionsbase.moc
	rm -f viewoptionsbase.cpp
	echo '#include <kdialog.h>' > viewoptionsbase.cpp
	echo '#include <klocale.h>' >> viewoptionsbase.cpp
	$(UIC) -tr ${UIC_TR} -i viewoptionsbase.h $(srcdir)/viewoptionsbase.ui > viewoptionsbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" viewoptionsbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_viewoptionsbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> viewoptionsbase.cpp ;\
	rm -f viewoptionsbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "viewoptionsbase.moc"' >> viewoptionsbase.cpp; else rm -f viewoptionsbase.cpp ; exit $$ret ; fi

viewoptionsbase.h: $(srcdir)/viewoptionsbase.ui
	rm -rf viewoptionsbase.h;
	$(UIC) $(srcdir)/viewoptionsbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> viewoptionsbase.h ;
viewoptionsbase.moc: viewoptionsbase.h
	$(MOC) viewoptionsbase.h -o viewoptionsbase.moc

pasteoptionsbase.cpp: $(srcdir)/pasteoptionsbase.ui pasteoptionsbase.h pasteoptionsbase.moc
	rm -f pasteoptionsbase.cpp
	echo '#include <kdialog.h>' > pasteoptionsbase.cpp
	echo '#include <klocale.h>' >> pasteoptionsbase.cpp
	$(UIC) -tr ${UIC_TR} -i pasteoptionsbase.h $(srcdir)/pasteoptionsbase.ui > pasteoptionsbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" pasteoptionsbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_pasteoptionsbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> pasteoptionsbase.cpp ;\
	rm -f pasteoptionsbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "pasteoptionsbase.moc"' >> pasteoptionsbase.cpp; else rm -f pasteoptionsbase.cpp ; exit $$ret ; fi

pasteoptionsbase.h: $(srcdir)/pasteoptionsbase.ui
	rm -rf pasteoptionsbase.h;
	$(UIC) $(srcdir)/pasteoptionsbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> pasteoptionsbase.h ;
pasteoptionsbase.moc: pasteoptionsbase.h
	$(MOC) pasteoptionsbase.h -o pasteoptionsbase.moc
