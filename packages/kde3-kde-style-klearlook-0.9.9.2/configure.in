dnl =======================================================
dnl FILE: ./admin/configure.in.min
dnl =======================================================

dnl    This file is part of the KDE libraries/packages
dnl    Copyright (C) 2001 Stephan Kulow (coolo@kde.org)
 
dnl    This file is free software; you can redistribute it and/or
dnl    modify it under the terms of the GNU Library General Public
dnl    License as published by the Free Software Foundation; either
dnl    version 2 of the License, or (at your option) any later version.
 
dnl    This library is distributed in the hope that it will be useful,
dnl    but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl    Library General Public License for more details.
 
dnl    You should have received a copy of the GNU Library General Public License
dnl    along with this library; see the file COPYING.LIB.  If not, write to
dnl    the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
dnl    Boston, MA 02111-1307, USA.

# Original Author was Kalle@kde.org
# I lifted it in some mater. (Stephan Kulow)
# I used much code from Janos Farkas

dnl Process this file with autoconf to produce a configure script.

AC_INIT(acinclude.m4) dnl a source file from your sub dir

dnl This is so we can use kde-common
AC_CONFIG_AUX_DIR(admin)

dnl This ksh/zsh feature conflicts with `cd blah ; pwd`
unset CDPATH

dnl Checking host/target/build systems, for make, install etc.
AC_CANONICAL_SYSTEM 
dnl Perform program name transformation
AC_ARG_PROGRAM

dnl Automake doc recommends to do this only here. (Janos)
AM_INIT_AUTOMAKE(QtCurve, 0.23.1) dnl searches for some needed programs

KDE_SET_PREFIX

dnl generate the config header
AM_CONFIG_HEADER(config.h) dnl at the distribution this done

dnl Checks for programs.
AC_CHECK_COMPILERS
AC_ENABLE_SHARED(yes)
AC_ENABLE_STATIC(no)
KDE_PROG_LIBTOOL

dnl for NLS support. Call them in this order!
dnl WITH_NLS is for the po files
AM_KDE_WITH_NLS

dnl KDE_USE_QT
AC_PATH_KDE
dnl =======================================================
dnl FILE: configure.in.in
dnl =======================================================

#MIN_CONFIG
dnl PACKAGE set before
CXXFLAGS="$CXXFLAGS -DQT_CLEAN_NAMESPACE  -DQT_NO_ASCII_CAST"
AC_CHECK_FUNCS(setenv unsetenv)
AC_CHECK_BOOL

# Checks for libs.
FOUND_GTK1=0
FOUND_GTK2=0
SINGLE_STYLE=0

AC_PATH_PROG(gtkconf, gtk-config, no)
if test -n "$gtkconf"; then
  vers=`$gtkconf --version 2>/dev/null | awk 'BEGIN { FS = "."; } { printf "%d", ($1 * 1000 + $2) * 1000 + $3;}'`
  if test -n "$vers" && test "$vers" -ge 1002009; then
    GTK_LIBS="`$gtkconf --libs`"
    GTK_CFLAGS="`$gtkconf --cflags`"
    GTK_PREFIX="`$gtkconf --prefix`"
    AC_SUBST(GTK_LIBS)
    AC_SUBST(GTK_CFLAGS)
    AC_SUBST(GTK_PREFIX)
    FOUND_GTK1=1
  else
    AC_MSG_WARN([Not compiling for GTK1.x - you need at least Gtk v1.2.9])
  fi
else
  AC_MSG_WARN([Not compiling for GTK1.x - Gtk1.x not installed, need at least v1.2.9])
fi

AC_PATH_PROG(pkgconfig, pkg-config, no)
if test -n "$pkg-config"; then
  GTK2_VERSION=`$pkgconfig --variable=gtk_binary_version gtk+-2.0`
  if test -n "$GTK2_VERSION"; then
    GTK2_CFLAGS=`$pkgconfig gtk+-2.0 --cflags`
    GTK2_LIBS=`$pkgconfig gtk+-2.0 --libs`
    GTK2_PREFIX="`$pkgconfig gtk+-2.0 --variable=prefix`"
    AC_SUBST(GTK2_CFLAGS)
    AC_SUBST(GTK2_LIBS)
    AC_SUBST(GTK2_VERSION)
    AC_SUBST(GTK2_PREFIX)
    FOUND_GTK2=1
  else
    AC_MSG_WARN([Not compiling for GTK2.x - Gtk2.x not installed])
  fi
else
  AC_MSG_WARN([Not compiling for GTK2.x - pkg-config not installed])
fi

# KDECONFIG comes from KDE's configure stuff...
KDE_VERSION=`$KDECONFIG --version | grep KDE | awk -F: '{print $2}' | awk -F' ' '{print $1}' | awk 'BEGIN { FS = "."; } { printf "%d", ($1 * 1000 + $2) * 1000 + $3;}'`

if test -n "$KDE_VERSION" && test "$KDE_VERSION" -ge 3001090 ; then
    SINGLE_STYLE=1
    AC_DEFINE(USE_SINGLE_STYLE, 1, [Defines whether only 1 stlye config file should be installed - controlled via KControl])
fi

AM_CONDITIONAL(got_gtk1, test $FOUND_GTK1 -eq 1)
AM_CONDITIONAL(got_gtk2, test $FOUND_GTK2 -eq 1)
AM_CONDITIONAL(single_style, test $SINGLE_STYLE -eq 1)

if test $FOUND_GTK1 -eq 0; then
  echo ""
  echo "*** Theme/engine will *not* be created for GTK 1.x based apps"
  echo ""
fi

if test $FOUND_GTK2 -eq 0; then
  echo ""
  echo "*** Theme/engine will *not* be created for GTK 2.x based apps"
  echo ""
fi
KDE_CREATE_SUBDIRSLIST
AC_CONFIG_FILES([ Makefile ])
AC_CONFIG_FILES([ kde/Makefile ])
AC_CONFIG_FILES([ kde/config/Makefile ])
AC_OUTPUT
# Check if KDE_SET_PREFIX was called, and --prefix was passed to configure
if test -n "$kde_libs_prefix" -a -n "$given_prefix"; then
  # And if so, warn when they don't match
  if test "$kde_libs_prefix" != "$given_prefix"; then
    # And if kde doesn't know about the prefix yet
    echo ":"`kde-config --path exe`":" | grep ":$given_prefix/bin/:" 2>&1 >/dev/null
    if test $? -ne 0; then
      echo ""
      echo "Warning: you chose to install this package in $given_prefix,"
      echo "but KDE was found in $kde_libs_prefix."
      echo "For this to work, you will need to tell KDE about the new prefix, by ensuring"
      echo "that KDEDIRS contains it, e.g. export KDEDIRS=$given_prefix:$kde_libs_prefix"
      echo "Then restart KDE."
      echo ""
    fi
  fi
fi

if test "$all_tests" = "bad"; then
  if test ! "$cache_file" = "/dev/null"; then
    echo ""
    echo "Please remove the file $cache_file after changing your setup"
    echo "so that configure will find the changes next time."
    echo ""
  fi
else
  echo ""
  echo "Good - your configure finished. Start make now"
  echo ""
fi
