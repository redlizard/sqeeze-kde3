# Makefile.in generated by automake 1.10.1 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = juk$(EXEEXT)
check_PROGRAMS = tagguessertest$(EXEEXT)
subdir = juk
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in TODO
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(rcdir)" \
	"$(DESTDIR)$(servicemenudir)" "$(DESTDIR)$(xdg_appsdir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_juk_OBJECTS = advancedsearchdialog.$(OBJEXT) \
	actioncollection.$(OBJEXT) akodeplayer.$(OBJEXT) \
	artsplayer.$(OBJEXT) cache.$(OBJEXT) \
	categoryreaderinterface.$(OBJEXT) collectionlist.$(OBJEXT) \
	coverdialog.$(OBJEXT) covericonview.$(OBJEXT) \
	coverinfo.$(OBJEXT) covermanager.$(OBJEXT) \
	deletedialog.$(OBJEXT) directorylist.$(OBJEXT) \
	dynamicplaylist.$(OBJEXT) exampleoptions.$(OBJEXT) \
	folderplaylist.$(OBJEXT) filehandle.$(OBJEXT) \
	filerenamer.$(OBJEXT) filerenameroptions.$(OBJEXT) \
	filerenamerconfigdlg.$(OBJEXT) gstreamerplayer.$(OBJEXT) \
	webimagefetcher.$(OBJEXT) webimagefetcherdialog.$(OBJEXT) \
	historyplaylist.$(OBJEXT) juk.$(OBJEXT) k3bexporter.$(OBJEXT) \
	keydialog.$(OBJEXT) main.$(OBJEXT) mediafiles.$(OBJEXT) \
	musicbrainzquery.$(OBJEXT) nowplaying.$(OBJEXT) \
	playermanager.$(OBJEXT) playlist.$(OBJEXT) \
	playlistbox.$(OBJEXT) playlistcollection.$(OBJEXT) \
	playlistinterface.$(OBJEXT) playlistitem.$(OBJEXT) \
	playlistsearch.$(OBJEXT) playlistsplitter.$(OBJEXT) \
	searchplaylist.$(OBJEXT) searchwidget.$(OBJEXT) \
	slideraction.$(OBJEXT) sortedstringlist.$(OBJEXT) \
	splashscreen.$(OBJEXT) statuslabel.$(OBJEXT) \
	stringshare.$(OBJEXT) systemtray.$(OBJEXT) tag.$(OBJEXT) \
	tageditor.$(OBJEXT) tagguesser.$(OBJEXT) \
	tagguesserconfigdlg.$(OBJEXT) tagrenameroptions.$(OBJEXT) \
	tagtransactionmanager.$(OBJEXT) trackpickerdialog.$(OBJEXT) \
	tracksequenceiterator.$(OBJEXT) tracksequencemanager.$(OBJEXT) \
	treeviewitemplaylist.$(OBJEXT) upcomingplaylist.$(OBJEXT) \
	ktrm.$(OBJEXT) viewmode.$(OBJEXT)
#>- juk_OBJECTS = $(am_juk_OBJECTS)
#>+ 29
juk_OBJECTS = advancedsearchdialog.$(OBJEXT) \
	actioncollection.$(OBJEXT) akodeplayer.$(OBJEXT) \
	artsplayer.$(OBJEXT) cache.$(OBJEXT) \
	categoryreaderinterface.$(OBJEXT) collectionlist.$(OBJEXT) \
	coverdialog.$(OBJEXT) covericonview.$(OBJEXT) \
	coverinfo.$(OBJEXT) covermanager.$(OBJEXT) \
	deletedialog.$(OBJEXT) directorylist.$(OBJEXT) \
	dynamicplaylist.$(OBJEXT) exampleoptions.$(OBJEXT) \
	folderplaylist.$(OBJEXT) filehandle.$(OBJEXT) \
	filerenamer.$(OBJEXT) filerenameroptions.$(OBJEXT) \
	filerenamerconfigdlg.$(OBJEXT) gstreamerplayer.$(OBJEXT) \
	webimagefetcher.$(OBJEXT) webimagefetcherdialog.$(OBJEXT) \
	historyplaylist.$(OBJEXT) juk.$(OBJEXT) k3bexporter.$(OBJEXT) \
	keydialog.$(OBJEXT) main.$(OBJEXT) mediafiles.$(OBJEXT) \
	musicbrainzquery.$(OBJEXT) nowplaying.$(OBJEXT) \
	playermanager.$(OBJEXT) playlist.$(OBJEXT) \
	playlistbox.$(OBJEXT) playlistcollection.$(OBJEXT) \
	playlistinterface.$(OBJEXT) playlistitem.$(OBJEXT) \
	playlistsearch.$(OBJEXT) playlistsplitter.$(OBJEXT) \
	searchplaylist.$(OBJEXT) searchwidget.$(OBJEXT) \
	slideraction.$(OBJEXT) sortedstringlist.$(OBJEXT) \
	splashscreen.$(OBJEXT) statuslabel.$(OBJEXT) \
	stringshare.$(OBJEXT) systemtray.$(OBJEXT) tag.$(OBJEXT) \
	tageditor.$(OBJEXT) tagguesser.$(OBJEXT) \
	tagguesserconfigdlg.$(OBJEXT) tagrenameroptions.$(OBJEXT) \
	tagtransactionmanager.$(OBJEXT) trackpickerdialog.$(OBJEXT) \
	tracksequenceiterator.$(OBJEXT) tracksequencemanager.$(OBJEXT) \
	treeviewitemplaylist.$(OBJEXT) upcomingplaylist.$(OBJEXT) \
	ktrm.$(OBJEXT) viewmode.$(OBJEXT) jukIface_skel.$(OBJEXT) coverdialogbase.$(OBJEXT) deletedialogbase.$(OBJEXT) directorylistbase.$(OBJEXT) exampleoptionsbase.$(OBJEXT) filerenamerbase.$(OBJEXT) filerenameroptionsbase.$(OBJEXT) tagguesserconfigdlgwidget.$(OBJEXT) trackpickerdialogbase.$(OBJEXT)
am__DEPENDENCIES_1 =
juk_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
#>- juk_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(juk_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
juk_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(juk_LDFLAGS) \
	$(LDFLAGS) -o $@
am_tagguessertest_OBJECTS = tagguessertest.$(OBJEXT) \
	tagguesser.$(OBJEXT)
#>- tagguessertest_OBJECTS = $(am_tagguessertest_OBJECTS)
#>+ 2
tagguessertest_OBJECTS = tagguessertest.$(OBJEXT) \
	tagguesser.$(OBJEXT)
tagguessertest_DEPENDENCIES = $(am__DEPENDENCIES_1)
#>- tagguessertest_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(tagguessertest_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
tagguessertest_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(tagguessertest_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(juk_SOURCES) $(tagguessertest_SOURCES)
DIST_SOURCES = $(juk_SOURCES) $(tagguessertest_SOURCES)
#>- RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
#>- 	html-recursive info-recursive install-data-recursive \
#>- 	install-dvi-recursive install-exec-recursive \
#>- 	install-html-recursive install-info-recursive \
#>- 	install-pdf-recursive install-ps-recursive install-recursive \
#>- 	installcheck-recursive installdirs-recursive pdf-recursive \
#>- 	ps-recursive uninstall-recursive
#>+ 7
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive nmcheck-recursive bcheck-recursive
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
rcDATA_INSTALL = $(INSTALL_DATA)
servicemenuDATA_INSTALL = $(INSTALL_DATA)
xdg_appsDATA_INSTALL = $(INSTALL_DATA)
DATA = $(rc_DATA) $(servicemenu_DATA) $(xdg_apps_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AKODE_CONFIG = @AKODE_CONFIG@
AMTAR = @AMTAR@
AR = @AR@
ARCH_CFLAGS = @ARCH_CFLAGS@
ARCH_TYPE = @ARCH_TYPE@
ARTSCCONFIG = @ARTSCCONFIG@
ARTSC_INCLUDE = @ARTSC_INCLUDE@
ARTSC_LIBS = @ARTSC_LIBS@
ARTS_CFLAGS = @ARTS_CFLAGS@
ARTS_LIBASOUND = @ARTS_LIBASOUND@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASDEPMODE = @CCASDEPMODE@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CDPARANOIA_LIBS = @CDPARANOIA_LIBS@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
EXTRAINCS = @EXTRAINCS@
EXTRALIBS = @EXTRALIBS@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
GST_CFLAGS = @GST_CFLAGS@
GST_LIBS = @GST_LIBS@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INTELCPPFLAG = @INTELCPPFLAG@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LAME_LIBS = @LAME_LIBS@
LDADD_GST = @LDADD_GST@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_GST = @LDFLAGS_GST@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LIBALIB = @LIBALIB@
LIBASOUND = @LIBASOUND@
LIBAUDIO = @LIBAUDIO@
LIBAUDIOFILE = @LIBAUDIOFILE@
LIBCDAUDIO = @LIBCDAUDIO@
LIBCDROM = @LIBCDROM@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBFLAC = @LIBFLAC@
LIBFPE = @LIBFPE@
LIBJPEG = @LIBJPEG@
LIBMME = @LIBMME@
LIBOBJS = @LIBOBJS@
LIBOGGFLAC = @LIBOGGFLAC@
LIBOSSAUDIO = @LIBOSSAUDIO@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_ARTS = @LIB_ARTS@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MPEGLIB_ARTS_MAJOR_VERSION = @MPEGLIB_ARTS_MAJOR_VERSION@
MPEGLIB_ARTS_MICRO_VERSION = @MPEGLIB_ARTS_MICRO_VERSION@
MPEGLIB_ARTS_MINOR_VERSION = @MPEGLIB_ARTS_MINOR_VERSION@
MPEGLIB_ARTS_VERSION = @MPEGLIB_ARTS_VERSION@
MPG123_PLAT_LIB = @MPG123_PLAT_LIB@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
OS_TYPE = @OS_TYPE@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TAGLIB_CONFIG = @TAGLIB_CONFIG@
THIS_LIB_LIBS = @THIS_LIB_LIBS@
THIS_LIB_MAJOR_VERSION = @THIS_LIB_MAJOR_VERSION@
THIS_LIB_MICRO_VERSION = @THIS_LIB_MICRO_VERSION@
THIS_LIB_MINOR_VERSION = @THIS_LIB_MINOR_VERSION@
THIS_LIB_NAME = @THIS_LIB_NAME@
THIS_LIB_VERSION = @THIS_LIB_VERSION@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
VORBISENC_LIBS = @VORBISENC_LIBS@
VORBISFILE_LIBS = @VORBISFILE_LIBS@
VORBIS_LIBS = @VORBIS_LIBS@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XINE_CFLAGS = @XINE_CFLAGS@
XINE_CONFIG = @XINE_CONFIG@
XINE_LIBS = @XINE_LIBS@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
akode_includes = @akode_includes@
akode_libs = @akode_libs@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
arts_datadir = @arts_datadir@
arts_includes = @arts_includes@
arts_libraries = @arts_libraries@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_artsplug_compiles = @kde_artsplug_compiles@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
taglib_includes = @taglib_includes@
taglib_libs = @taglib_libs@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@
#>- juk_SOURCES = \
#>- 	advancedsearchdialog.cpp \
#>- 	actioncollection.cpp \
#>- 	akodeplayer.cpp \
#>- 	artsplayer.cpp \
#>- 	cache.cpp \
#>- 	categoryreaderinterface.cpp \
#>- 	collectionlist.cpp \
#>- 	coverdialog.cpp \
#>- 	coverdialogbase.ui \
#>- 	covericonview.cpp \
#>- 	coverinfo.cpp \
#>- 	covermanager.cpp \
#>- 	deletedialog.cpp \
#>- 	deletedialogbase.ui \
#>- 	directorylist.cpp \
#>- 	directorylistbase.ui \
#>- 	dynamicplaylist.cpp \
#>- 	exampleoptions.cpp \
#>- 	exampleoptionsbase.ui \
#>- 	folderplaylist.cpp \
#>- 	filehandle.cpp \
#>- 	filerenamer.cpp \
#>- 	filerenamerbase.ui \
#>- 	filerenameroptions.cpp \
#>- 	filerenameroptionsbase.ui \
#>- 	filerenamerconfigdlg.cpp \
#>- 	gstreamerplayer.cpp \
#>- 	webimagefetcher.cpp \
#>- 	webimagefetcherdialog.cpp \
#>- 	historyplaylist.cpp \
#>- 	juk.cpp \
#>- 	jukIface.skel \
#>- 	k3bexporter.cpp \
#>- 	keydialog.cpp \
#>- 	main.cpp \
#>- 	mediafiles.cpp \
#>- 	musicbrainzquery.cpp \
#>- 	nowplaying.cpp \
#>- 	playermanager.cpp \
#>- 	playlist.cpp \
#>- 	playlistbox.cpp \
#>- 	playlistcollection.cpp \
#>- 	playlistinterface.cpp \
#>- 	playlistitem.cpp \
#>- 	playlistsearch.cpp \
#>- 	playlistsplitter.cpp \
#>- 	searchplaylist.cpp \
#>- 	searchwidget.cpp \
#>- 	slideraction.cpp \
#>- 	sortedstringlist.cpp \
#>- 	splashscreen.cpp \
#>- 	statuslabel.cpp \
#>- 	stringshare.cpp \
#>- 	systemtray.cpp \
#>- 	tag.cpp \
#>- 	tageditor.cpp \
#>- 	tagguesser.cpp \
#>- 	tagguesserconfigdlg.cpp \
#>- 	tagguesserconfigdlgwidget.ui \
#>- 	tagrenameroptions.cpp \
#>- 	tagtransactionmanager.cpp \
#>- 	trackpickerdialog.cpp \
#>- 	trackpickerdialogbase.ui \
#>- 	tracksequenceiterator.cpp \
#>- 	tracksequencemanager.cpp \
#>- 	treeviewitemplaylist.cpp \
#>- 	upcomingplaylist.cpp \
#>- 	ktrm.cpp \
#>- 	viewmode.cpp
#>+ 70
juk_SOURCES=\
	advancedsearchdialog.cpp \
	actioncollection.cpp \
	akodeplayer.cpp \
	artsplayer.cpp \
	cache.cpp \
	categoryreaderinterface.cpp \
	collectionlist.cpp \
	coverdialog.cpp \
	 \
	covericonview.cpp \
	coverinfo.cpp \
	covermanager.cpp \
	deletedialog.cpp \
	 \
	directorylist.cpp \
	 \
	dynamicplaylist.cpp \
	exampleoptions.cpp \
	 \
	folderplaylist.cpp \
	filehandle.cpp \
	filerenamer.cpp \
	 \
	filerenameroptions.cpp \
	 \
	filerenamerconfigdlg.cpp \
	gstreamerplayer.cpp \
	webimagefetcher.cpp \
	webimagefetcherdialog.cpp \
	historyplaylist.cpp \
	juk.cpp \
	 \
	k3bexporter.cpp \
	keydialog.cpp \
	main.cpp \
	mediafiles.cpp \
	musicbrainzquery.cpp \
	nowplaying.cpp \
	playermanager.cpp \
	playlist.cpp \
	playlistbox.cpp \
	playlistcollection.cpp \
	playlistinterface.cpp \
	playlistitem.cpp \
	playlistsearch.cpp \
	playlistsplitter.cpp \
	searchplaylist.cpp \
	searchwidget.cpp \
	slideraction.cpp \
	sortedstringlist.cpp \
	splashscreen.cpp \
	statuslabel.cpp \
	stringshare.cpp \
	systemtray.cpp \
	tag.cpp \
	tageditor.cpp \
	tagguesser.cpp \
	tagguesserconfigdlg.cpp \
	 \
	tagrenameroptions.cpp \
	tagtransactionmanager.cpp \
	trackpickerdialog.cpp \
	 \
	tracksequenceiterator.cpp \
	tracksequencemanager.cpp \
	treeviewitemplaylist.cpp \
	upcomingplaylist.cpp \
	ktrm.cpp \
	viewmode.cpp jukIface_skel.cpp coverdialogbase.cpp deletedialogbase.cpp directorylistbase.cpp exampleoptionsbase.cpp filerenamerbase.cpp filerenameroptionsbase.cpp tagguesserconfigdlgwidget.cpp trackpickerdialogbase.cpp

tagguessertest_SOURCES = tagguessertest.cpp tagguesser.cpp
INCLUDES = $(all_includes) $(taglib_includes) $(akode_includes) $(GST_CFLAGS) $(ARTS_CFLAGS)

##################################################
# check to see if MusicBrainz is available
##################################################
@link_lib_MB_TRUE@mblibs = -ltunepimp
##################################################
juk_LDADD = -lm $(LDADD_GST) $(mblibs) $(LIB_KIO) $(taglib_libs) $(akode_libs) $(LIB_KHTML) $(LIB_ARTS)
juk_LDFLAGS = $(all_libraries) $(KDE_RPATH) $(LDFLAGS_GST)
KDE_CXXFLAGS = $(USE_EXCEPTIONS)
tagguessertest_LDADD = $(LIB_KDECORE)
tagguessertest_LDFLAGS = $(all_libraries)
SUBDIRS = pics
rcdir = $(kde_datadir)/juk
rc_DATA = jukui.rc jukui-rtl.rc
servicemenudir = $(kde_datadir)/konqueror/servicemenus
servicemenu_DATA = jukservicemenu.desktop
#>- METASOURCES = AUTO
KDE_ICON = AUTO
POFILES = AUTO
xdg_apps_DATA = juk.desktop
KDE_OPTIONS = nofinal
#>- all: all-recursive
#>+ 1
all: docs-am  all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  juk/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --foreign  juk/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  juk/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  juk/Makefile
	cd $(top_srcdir) && perl admin/am_edit juk/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
juk$(EXEEXT): $(juk_OBJECTS) $(juk_DEPENDENCIES) 
	@rm -f juk$(EXEEXT)
	$(juk_LINK) $(juk_OBJECTS) $(juk_LDADD) $(LIBS)
tagguessertest$(EXEEXT): $(tagguessertest_OBJECTS) $(tagguessertest_DEPENDENCIES) 
	@rm -f tagguessertest$(EXEEXT)
	$(tagguessertest_LINK) $(tagguessertest_OBJECTS) $(tagguessertest_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/actioncollection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/advancedsearchdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/akodeplayer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/artsplayer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cache.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/categoryreaderinterface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/collectionlist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/coverdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/covericonview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/coverinfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/covermanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/deletedialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/directorylist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dynamicplaylist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exampleoptions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filehandle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filerenamer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filerenamerconfigdlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filerenameroptions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/folderplaylist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gstreamerplayer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/historyplaylist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/juk.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/k3bexporter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/keydialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ktrm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mediafiles.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/musicbrainzquery.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nowplaying.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playermanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playlist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playlistbox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playlistcollection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playlistinterface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playlistitem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playlistsearch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playlistsplitter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/searchplaylist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/searchwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/slideraction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sortedstringlist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/splashscreen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/statuslabel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stringshare.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/systemtray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tag.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tageditor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tagguesser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tagguesserconfigdlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tagguessertest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tagrenameroptions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tagtransactionmanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trackpickerdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tracksequenceiterator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tracksequencemanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/treeviewitemplaylist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/upcomingplaylist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/viewmode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/webimagefetcher.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/webimagefetcherdialog.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-rcDATA: $(rc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(rcdir)" || $(MKDIR_P) "$(DESTDIR)$(rcdir)"
	@list='$(rc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(rcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(rcdir)/$$f'"; \
	  $(rcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(rcdir)/$$f"; \
	done

uninstall-rcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(rc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(rcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(rcdir)/$$f"; \
	done
install-servicemenuDATA: $(servicemenu_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(servicemenudir)" || $(MKDIR_P) "$(DESTDIR)$(servicemenudir)"
	@list='$(servicemenu_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(servicemenuDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(servicemenudir)/$$f'"; \
	  $(servicemenuDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(servicemenudir)/$$f"; \
	done

uninstall-servicemenuDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(servicemenu_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(servicemenudir)/$$f'"; \
	  rm -f "$(DESTDIR)$(servicemenudir)/$$f"; \
	done
install-xdg_appsDATA: $(xdg_apps_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xdg_appsdir)" || $(MKDIR_P) "$(DESTDIR)$(xdg_appsdir)"
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(xdg_appsDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  $(xdg_appsDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

uninstall-xdg_appsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-recursive
all-am: Makefile $(PROGRAMS) $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(rcdir)" "$(DESTDIR)$(servicemenudir)" "$(DESTDIR)$(xdg_appsdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

#>- clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
#>- 	clean-libtool mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-idl clean-ui clean-bcheck  clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

#>- install-data-am: install-rcDATA install-servicemenuDATA \
#>- 	install-xdg_appsDATA
#>+ 2
install-data-am: install-kde-icons  install-rcDATA install-servicemenuDATA \
	install-xdg_appsDATA

install-dvi: install-dvi-recursive

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

#>- uninstall-am: uninstall-binPROGRAMS uninstall-rcDATA \
#>- 	uninstall-servicemenuDATA uninstall-xdg_appsDATA
#>+ 2
uninstall-am: uninstall-kde-icons  uninstall-binPROGRAMS uninstall-rcDATA \
	uninstall-servicemenuDATA uninstall-xdg_appsDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-rcDATA \
	install-servicemenuDATA install-strip install-xdg_appsDATA \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-rcDATA \
	uninstall-servicemenuDATA uninstall-xdg_appsDATA


messages: rc.cpp
	$(EXTRACTRC) *.rc >> rc.cpp
	$(XGETTEXT) *.rc *.cpp *.h -o $(podir)/juk.pot
	-rm rc.cpp
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 5
jukIface.kidl: $(srcdir)/jukIface.h $(DCOP_DEPENDENCIES)
	$(DCOPIDL) $(srcdir)/jukIface.h > jukIface.kidl || ( rm -f jukIface.kidl ; false )
jukIface_skel.cpp: jukIface.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-stub jukIface.kidl

#>+ 3
collectionlist.moc: $(srcdir)/collectionlist.h
	$(MOC) $(srcdir)/collectionlist.h -o collectionlist.moc

#>+ 2
mocs: collectionlist.moc

#>+ 3
deletedialog.moc: $(srcdir)/deletedialog.h
	$(MOC) $(srcdir)/deletedialog.h -o deletedialog.moc

#>+ 2
mocs: deletedialog.moc

#>+ 3
artsplayer.moc: $(srcdir)/artsplayer.h
	$(MOC) $(srcdir)/artsplayer.h -o artsplayer.moc

#>+ 2
mocs: artsplayer.moc

#>+ 3
viewmode.moc: $(srcdir)/viewmode.h
	$(MOC) $(srcdir)/viewmode.h -o viewmode.moc

#>+ 2
mocs: viewmode.moc

#>+ 3
directorylist.moc: $(srcdir)/directorylist.h
	$(MOC) $(srcdir)/directorylist.h -o directorylist.moc

#>+ 2
mocs: directorylist.moc

#>+ 3
dynamicplaylist.moc: $(srcdir)/dynamicplaylist.h
	$(MOC) $(srcdir)/dynamicplaylist.h -o dynamicplaylist.moc

#>+ 2
mocs: dynamicplaylist.moc

#>+ 3
treeviewitemplaylist.moc: $(srcdir)/treeviewitemplaylist.h
	$(MOC) $(srcdir)/treeviewitemplaylist.h -o treeviewitemplaylist.moc

#>+ 2
mocs: treeviewitemplaylist.moc

#>+ 3
exampleoptions.moc: $(srcdir)/exampleoptions.h
	$(MOC) $(srcdir)/exampleoptions.h -o exampleoptions.moc

#>+ 2
mocs: exampleoptions.moc

#>+ 3
filerenameroptions.moc: $(srcdir)/filerenameroptions.h
	$(MOC) $(srcdir)/filerenameroptions.h -o filerenameroptions.moc

#>+ 2
mocs: filerenameroptions.moc

#>+ 3
statuslabel.moc: $(srcdir)/statuslabel.h
	$(MOC) $(srcdir)/statuslabel.h -o statuslabel.moc

#>+ 2
mocs: statuslabel.moc

#>+ 3
tagguesserconfigdlg.moc: $(srcdir)/tagguesserconfigdlg.h
	$(MOC) $(srcdir)/tagguesserconfigdlg.h -o tagguesserconfigdlg.moc

#>+ 2
mocs: tagguesserconfigdlg.moc

#>+ 3
tracksequencemanager.moc: $(srcdir)/tracksequencemanager.h
	$(MOC) $(srcdir)/tracksequencemanager.h -o tracksequencemanager.moc

#>+ 2
mocs: tracksequencemanager.moc

#>+ 3
systemtray.moc: $(srcdir)/systemtray.h
	$(MOC) $(srcdir)/systemtray.h -o systemtray.moc

#>+ 2
mocs: systemtray.moc

#>+ 3
filerenamerconfigdlg.moc: $(srcdir)/filerenamerconfigdlg.h
	$(MOC) $(srcdir)/filerenamerconfigdlg.h -o filerenamerconfigdlg.moc

#>+ 2
mocs: filerenamerconfigdlg.moc

#>+ 3
coverdialog.moc: $(srcdir)/coverdialog.h
	$(MOC) $(srcdir)/coverdialog.h -o coverdialog.moc

#>+ 2
mocs: coverdialog.moc

#>+ 3
webimagefetcher.moc: $(srcdir)/webimagefetcher.h
	$(MOC) $(srcdir)/webimagefetcher.h -o webimagefetcher.moc

#>+ 2
mocs: webimagefetcher.moc

#>+ 3
playlistcollection.moc: $(srcdir)/playlistcollection.h
	$(MOC) $(srcdir)/playlistcollection.h -o playlistcollection.moc

#>+ 2
mocs: playlistcollection.moc

#>+ 3
akodeplayer.moc: $(srcdir)/akodeplayer.h
	$(MOC) $(srcdir)/akodeplayer.h -o akodeplayer.moc

#>+ 2
mocs: akodeplayer.moc

#>+ 3
historyplaylist.moc: $(srcdir)/historyplaylist.h
	$(MOC) $(srcdir)/historyplaylist.h -o historyplaylist.moc

#>+ 2
mocs: historyplaylist.moc

#>+ 3
playlistsplitter.moc: $(srcdir)/playlistsplitter.h
	$(MOC) $(srcdir)/playlistsplitter.h -o playlistsplitter.moc

#>+ 2
mocs: playlistsplitter.moc

#>+ 3
searchplaylist.moc: $(srcdir)/searchplaylist.h
	$(MOC) $(srcdir)/searchplaylist.h -o searchplaylist.moc

#>+ 2
mocs: searchplaylist.moc

#>+ 3
nowplaying.moc: $(srcdir)/nowplaying.h
	$(MOC) $(srcdir)/nowplaying.h -o nowplaying.moc

#>+ 2
mocs: nowplaying.moc

#>+ 3
tageditor.moc: $(srcdir)/tageditor.h
	$(MOC) $(srcdir)/tageditor.h -o tageditor.moc

#>+ 2
mocs: tageditor.moc

#>+ 3
searchwidget.moc: $(srcdir)/searchwidget.h
	$(MOC) $(srcdir)/searchwidget.h -o searchwidget.moc

#>+ 2
mocs: searchwidget.moc

#>+ 3
tagtransactionmanager.moc: $(srcdir)/tagtransactionmanager.h
	$(MOC) $(srcdir)/tagtransactionmanager.h -o tagtransactionmanager.moc

#>+ 2
mocs: tagtransactionmanager.moc

#>+ 3
keydialog.moc: $(srcdir)/keydialog.h
	$(MOC) $(srcdir)/keydialog.h -o keydialog.moc

#>+ 2
mocs: keydialog.moc

#>+ 3
playlistbox.moc: $(srcdir)/playlistbox.h
	$(MOC) $(srcdir)/playlistbox.h -o playlistbox.moc

#>+ 2
mocs: playlistbox.moc

#>+ 3
filerenamer.moc: $(srcdir)/filerenamer.h
	$(MOC) $(srcdir)/filerenamer.h -o filerenamer.moc

#>+ 2
mocs: filerenamer.moc

#>+ 3
folderplaylist.moc: $(srcdir)/folderplaylist.h
	$(MOC) $(srcdir)/folderplaylist.h -o folderplaylist.moc

#>+ 2
mocs: folderplaylist.moc

#>+ 3
gstreamerplayer.moc: $(srcdir)/gstreamerplayer.h
	$(MOC) $(srcdir)/gstreamerplayer.h -o gstreamerplayer.moc

#>+ 2
mocs: gstreamerplayer.moc

#>+ 3
playlist.moc: $(srcdir)/playlist.h
	$(MOC) $(srcdir)/playlist.h -o playlist.moc

#>+ 2
mocs: playlist.moc

#>+ 3
juk.moc: $(srcdir)/juk.h
	$(MOC) $(srcdir)/juk.h -o juk.moc

#>+ 2
mocs: juk.moc

#>+ 3
trackpickerdialog.moc: $(srcdir)/trackpickerdialog.h
	$(MOC) $(srcdir)/trackpickerdialog.h -o trackpickerdialog.moc

#>+ 2
mocs: trackpickerdialog.moc

#>+ 3
advancedsearchdialog.moc: $(srcdir)/advancedsearchdialog.h
	$(MOC) $(srcdir)/advancedsearchdialog.h -o advancedsearchdialog.moc

#>+ 2
mocs: advancedsearchdialog.moc

#>+ 3
webimagefetcherdialog.moc: $(srcdir)/webimagefetcherdialog.h
	$(MOC) $(srcdir)/webimagefetcherdialog.h -o webimagefetcherdialog.moc

#>+ 2
mocs: webimagefetcherdialog.moc

#>+ 3
slideraction.moc: $(srcdir)/slideraction.h
	$(MOC) $(srcdir)/slideraction.h -o slideraction.moc

#>+ 2
mocs: slideraction.moc

#>+ 3
k3bexporter.moc: $(srcdir)/k3bexporter.h
	$(MOC) $(srcdir)/k3bexporter.h -o k3bexporter.moc

#>+ 2
mocs: k3bexporter.moc

#>+ 3
playermanager.moc: $(srcdir)/playermanager.h
	$(MOC) $(srcdir)/playermanager.h -o playermanager.moc

#>+ 2
mocs: playermanager.moc

#>+ 3
clean-metasources:
	-rm -f  collectionlist.moc deletedialog.moc artsplayer.moc viewmode.moc directorylist.moc dynamicplaylist.moc treeviewitemplaylist.moc exampleoptions.moc filerenameroptions.moc statuslabel.moc tagguesserconfigdlg.moc tracksequencemanager.moc systemtray.moc filerenamerconfigdlg.moc coverdialog.moc webimagefetcher.moc playlistcollection.moc akodeplayer.moc historyplaylist.moc playlistsplitter.moc searchplaylist.moc nowplaying.moc tageditor.moc searchwidget.moc tagtransactionmanager.moc keydialog.moc playlistbox.moc filerenamer.moc folderplaylist.moc gstreamerplayer.moc playlist.moc juk.moc trackpickerdialog.moc advancedsearchdialog.moc webimagefetcherdialog.moc slideraction.moc k3bexporter.moc playermanager.moc

#>+ 2
KDE_DIST=jukui.rc trackpickerdialogbase.ui actioncollection.h filehandle.h filehandleproperties.h hi48-app-juk.png ktrm.h jukui-rtl.rc categoryreaderinterface.h directorylistbase.ui tagrenameroptions.h playlistbox.h artsplayer.h deletedialogbase.ui musicbrainzquery.h jukservicemenu.desktop tagguesser.h treeviewitemplaylist.h stringhash.h playlistitem.h filerenameroptions.h tagguesserconfigdlg.h webimagefetcherdialog.h mediafiles.h filerenamerconfigdlg.h tageditor.h player.h viewmode.h directorylist.h hi16-app-juk.png Makefile.in tracksequenceiterator.h juk.h advancedsearchdialog.h gstreamerplayer.h tracksequencemanager.h coverinfo.h playlistinterface.h hi128-app-juk.png tagguesserconfigdlgwidget.ui coverdialogbase.ui configure.in.bot playlistexporter.h upcomingplaylist.h filerenamer.h filerenamerbase.ui nowplaying.h HACKING playlistcollection.h searchwidget.h coverdialog.h playlistsearch.h hi64-app-juk.png stringshare.h cr22-action-juk_dock.png statuslabel.h filerenameroptionsbase.ui exampleoptionsbase.ui slideraction.h k3bexporter.h tag.h playlist.h systemtray.h jukIface.h keydialog.h juk.desktop tagtransactionmanager.h sortedstringlist.h akodeplayer.h configure.in.in splashscreen.h dynamicplaylist.h exampleoptions.h webimagefetcher.h cache.h deletedialog.h covermanager.h folderplaylist.h playlistsplitter.h covericonview.h playermanager.h collectionlist.h hi32-app-juk.png trackpickerdialog.h searchplaylist.h Makefile.am historyplaylist.h 

#>+ 4
clean-idl:
	-rm -f \
	jukIface_skel.cpp jukIface_skel.h jukIface.kidl 

#>+ 11
clean-ui:
	-rm -f \
	coverdialogbase.cpp coverdialogbase.h coverdialogbase.moc \
	deletedialogbase.cpp deletedialogbase.h deletedialogbase.moc \
	directorylistbase.cpp directorylistbase.h directorylistbase.moc \
	exampleoptionsbase.cpp exampleoptionsbase.h exampleoptionsbase.moc \
	filerenamerbase.cpp filerenamerbase.h filerenamerbase.moc \
	filerenameroptionsbase.cpp filerenameroptionsbase.h filerenameroptionsbase.moc \
	tagguesserconfigdlgwidget.cpp tagguesserconfigdlgwidget.h tagguesserconfigdlgwidget.moc \
	trackpickerdialogbase.cpp trackpickerdialogbase.h trackpickerdialogbase.moc 

#>+ 2
docs-am:

#>+ 22
install-kde-icons:
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps
	$(INSTALL_DATA) $(srcdir)/hi48-app-juk.png $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/juk.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps
	$(INSTALL_DATA) $(srcdir)/hi64-app-juk.png $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps/juk.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/crystalsvg/22x22/actions
	$(INSTALL_DATA) $(srcdir)/cr22-action-juk_dock.png $(DESTDIR)$(kde_icondir)/crystalsvg/22x22/actions/juk_dock.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/128x128/apps
	$(INSTALL_DATA) $(srcdir)/hi128-app-juk.png $(DESTDIR)$(kde_icondir)/hicolor/128x128/apps/juk.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps
	$(INSTALL_DATA) $(srcdir)/hi16-app-juk.png $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/juk.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps
	$(INSTALL_DATA) $(srcdir)/hi32-app-juk.png $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/juk.png

uninstall-kde-icons:
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/juk.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps/juk.png
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/22x22/actions/juk_dock.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/128x128/apps/juk.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/juk.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/juk.png

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  juk/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  juk/Makefile
	cd $(top_srcdir) && perl admin/am_edit juk/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-recursive

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 3
final:
	$(MAKE) all-am

#>+ 3
final-install:
	$(MAKE) install-am

#>+ 3
no-final:
	$(MAKE) all-am

#>+ 3
no-final-install:
	$(MAKE) install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 139
directorylist.lo: directorylist.moc 
playlist.o: playlist.moc 
systemtray.o: systemtray.moc 
$(srcdir)/filerenamer.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/covermanager.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
deletedialog.lo: deletedialog.moc 
viewmode.lo: viewmode.moc 
folderplaylist.o: folderplaylist.moc 
$(srcdir)/mediafiles.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
playermanager.o: playermanager.moc 
webimagefetcherdialog.lo: webimagefetcherdialog.moc 
$(srcdir)/filerenameroptions.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
coverdialog.o: coverdialog.moc 
filerenamer.lo: filerenamer.moc 
tracksequencemanager.o: tracksequencemanager.moc 
juk.lo: juk.moc 
$(srcdir)/exampleoptions.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
playlistbox.lo: playlistbox.moc 
artsplayer.lo: artsplayer.moc 
nmcheck-am: nmcheck
$(srcdir)/playlistsearch.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
viewmode.o: viewmode.moc 
$(srcdir)/stringshare.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/filehandle.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/filerenamerconfigdlg.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
tagguesserconfigdlg.lo: tagguesserconfigdlg.moc 
$(srcdir)/juk.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/collectionlist.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
k3bexporter.o: k3bexporter.moc 
$(srcdir)/trackpickerdialog.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
filerenameroptions.o: filerenameroptions.moc 
gstreamerplayer.lo: gstreamerplayer.moc 
tagguesserconfigdlg.o: tagguesserconfigdlg.moc 
$(srcdir)/tagguesserconfigdlg.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
playlistbox.o: playlistbox.moc 
searchwidget.lo: searchwidget.moc 
dynamicplaylist.o: dynamicplaylist.moc 
$(srcdir)/playlistitem.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/tag.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/splashscreen.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/statuslabel.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
nowplaying.o: nowplaying.moc 
directorylist.o: directorylist.moc 
$(srcdir)/musicbrainzquery.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/deletedialog.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
juk.o: juk.moc 
trackpickerdialog.o: trackpickerdialog.moc 
tageditor.o: tageditor.moc 
$(srcdir)/sortedstringlist.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/slideraction.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
tagtransactionmanager.lo: tagtransactionmanager.moc 
filerenamerconfigdlg.lo: filerenamerconfigdlg.moc 
folderplaylist.lo: folderplaylist.moc 
filerenameroptions.lo: filerenameroptions.moc 
$(srcdir)/artsplayer.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/systemtray.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/coverdialog.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/nowplaying.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
collectionlist.o: collectionlist.moc 
exampleoptions.lo: exampleoptions.moc 
deletedialog.o: deletedialog.moc 
$(srcdir)/searchplaylist.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/playermanager.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
coverdialog.lo: coverdialog.moc 
trackpickerdialog.lo: trackpickerdialog.moc 
tageditor.lo: tageditor.moc 
$(srcdir)/playlist.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
playermanager.lo: playermanager.moc 
$(srcdir)/k3bexporter.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/playlistinterface.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
historyplaylist.o: historyplaylist.moc 
$(srcdir)/playlistbox.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/tagrenameroptions.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/cache.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/viewmode.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/coverinfo.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
searchplaylist.lo: searchplaylist.moc 
$(srcdir)/main.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
searchwidget.o: searchwidget.moc 
collectionlist.lo: collectionlist.moc 
$(srcdir)/tagguesser.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/covericonview.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
webimagefetcherdialog.o: webimagefetcherdialog.moc 
k3bexporter.lo: k3bexporter.moc 
$(srcdir)/playlistsplitter.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
playlistsplitter.o: playlistsplitter.moc 
akodeplayer.o: akodeplayer.moc 
playlistcollection.o: playlistcollection.moc 
slideraction.o: slideraction.moc 
keydialog.lo: keydialog.moc 
historyplaylist.lo: historyplaylist.moc 
$(srcdir)/gstreamerplayer.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/webimagefetcher.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
dynamicplaylist.lo: dynamicplaylist.moc 
$(srcdir)/actioncollection.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
filerenamerconfigdlg.o: filerenamerconfigdlg.moc 
$(srcdir)/upcomingplaylist.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
tagtransactionmanager.o: tagtransactionmanager.moc 
$(srcdir)/searchwidget.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/directorylist.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/folderplaylist.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
advancedsearchdialog.lo: advancedsearchdialog.moc 
exampleoptions.o: exampleoptions.moc 
searchplaylist.o: searchplaylist.moc 
$(srcdir)/tagtransactionmanager.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
webimagefetcher.lo: webimagefetcher.moc 
systemtray.lo: systemtray.moc 
keydialog.o: keydialog.moc 
$(srcdir)/advancedsearchdialog.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
webimagefetcher.o: webimagefetcher.moc 
$(srcdir)/treeviewitemplaylist.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
akodeplayer.lo: akodeplayer.moc 
treeviewitemplaylist.o: treeviewitemplaylist.moc 
advancedsearchdialog.o: advancedsearchdialog.moc 
$(srcdir)/playlistcollection.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
playlistsplitter.lo: playlistsplitter.moc 
gstreamerplayer.o: gstreamerplayer.moc 
$(srcdir)/dynamicplaylist.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/keydialog.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/tageditor.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
slideraction.lo: slideraction.moc 
playlistcollection.lo: playlistcollection.moc 
$(srcdir)/tracksequencemanager.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/historyplaylist.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/categoryreaderinterface.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/ktrm.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/akodeplayer.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
$(srcdir)/tracksequenceiterator.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
playlist.lo: playlist.moc 
treeviewitemplaylist.lo: treeviewitemplaylist.moc 
filerenamer.o: filerenamer.moc 
$(srcdir)/webimagefetcherdialog.cpp: coverdialogbase.h deletedialogbase.h directorylistbase.h exampleoptionsbase.h filerenamerbase.h filerenameroptionsbase.h tagguesserconfigdlgwidget.h trackpickerdialogbase.h 
nmcheck: 
statuslabel.o: statuslabel.moc 
artsplayer.o: artsplayer.moc 
statuslabel.lo: statuslabel.moc 
nowplaying.lo: nowplaying.moc 
tracksequencemanager.lo: tracksequencemanager.moc 

#>+ 120
trackpickerdialogbase.cpp: $(srcdir)/trackpickerdialogbase.ui trackpickerdialogbase.h trackpickerdialogbase.moc
	rm -f trackpickerdialogbase.cpp
	echo '#include <kdialog.h>' > trackpickerdialogbase.cpp
	echo '#include <klocale.h>' >> trackpickerdialogbase.cpp
	$(UIC) -tr ${UIC_TR} -i trackpickerdialogbase.h $(srcdir)/trackpickerdialogbase.ui > trackpickerdialogbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" trackpickerdialogbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_trackpickerdialogbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> trackpickerdialogbase.cpp ;\
	rm -f trackpickerdialogbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "trackpickerdialogbase.moc"' >> trackpickerdialogbase.cpp; else rm -f trackpickerdialogbase.cpp ; exit $$ret ; fi

trackpickerdialogbase.h: $(srcdir)/trackpickerdialogbase.ui
	rm -rf trackpickerdialogbase.h;
	$(UIC) $(srcdir)/trackpickerdialogbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> trackpickerdialogbase.h ;
trackpickerdialogbase.moc: trackpickerdialogbase.h
	$(MOC) trackpickerdialogbase.h -o trackpickerdialogbase.moc

tagguesserconfigdlgwidget.cpp: $(srcdir)/tagguesserconfigdlgwidget.ui tagguesserconfigdlgwidget.h tagguesserconfigdlgwidget.moc
	rm -f tagguesserconfigdlgwidget.cpp
	echo '#include <kdialog.h>' > tagguesserconfigdlgwidget.cpp
	echo '#include <klocale.h>' >> tagguesserconfigdlgwidget.cpp
	$(UIC) -tr ${UIC_TR} -i tagguesserconfigdlgwidget.h $(srcdir)/tagguesserconfigdlgwidget.ui > tagguesserconfigdlgwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" tagguesserconfigdlgwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_tagguesserconfigdlgwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> tagguesserconfigdlgwidget.cpp ;\
	rm -f tagguesserconfigdlgwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "tagguesserconfigdlgwidget.moc"' >> tagguesserconfigdlgwidget.cpp; else rm -f tagguesserconfigdlgwidget.cpp ; exit $$ret ; fi

tagguesserconfigdlgwidget.h: $(srcdir)/tagguesserconfigdlgwidget.ui
	rm -rf tagguesserconfigdlgwidget.h;
	$(UIC) $(srcdir)/tagguesserconfigdlgwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> tagguesserconfigdlgwidget.h ;
tagguesserconfigdlgwidget.moc: tagguesserconfigdlgwidget.h
	$(MOC) tagguesserconfigdlgwidget.h -o tagguesserconfigdlgwidget.moc

filerenamerbase.cpp: $(srcdir)/filerenamerbase.ui filerenamerbase.h filerenamerbase.moc
	rm -f filerenamerbase.cpp
	echo '#include <kdialog.h>' > filerenamerbase.cpp
	echo '#include <klocale.h>' >> filerenamerbase.cpp
	$(UIC) -tr ${UIC_TR} -i filerenamerbase.h $(srcdir)/filerenamerbase.ui > filerenamerbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" filerenamerbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_filerenamerbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> filerenamerbase.cpp ;\
	rm -f filerenamerbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "filerenamerbase.moc"' >> filerenamerbase.cpp; else rm -f filerenamerbase.cpp ; exit $$ret ; fi

filerenamerbase.h: $(srcdir)/filerenamerbase.ui
	rm -rf filerenamerbase.h;
	$(UIC) $(srcdir)/filerenamerbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> filerenamerbase.h ;
filerenamerbase.moc: filerenamerbase.h
	$(MOC) filerenamerbase.h -o filerenamerbase.moc

directorylistbase.cpp: $(srcdir)/directorylistbase.ui directorylistbase.h directorylistbase.moc
	rm -f directorylistbase.cpp
	echo '#include <kdialog.h>' > directorylistbase.cpp
	echo '#include <klocale.h>' >> directorylistbase.cpp
	$(UIC) -tr ${UIC_TR} -i directorylistbase.h $(srcdir)/directorylistbase.ui > directorylistbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" directorylistbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_directorylistbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> directorylistbase.cpp ;\
	rm -f directorylistbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "directorylistbase.moc"' >> directorylistbase.cpp; else rm -f directorylistbase.cpp ; exit $$ret ; fi

directorylistbase.h: $(srcdir)/directorylistbase.ui
	rm -rf directorylistbase.h;
	$(UIC) $(srcdir)/directorylistbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> directorylistbase.h ;
directorylistbase.moc: directorylistbase.h
	$(MOC) directorylistbase.h -o directorylistbase.moc

coverdialogbase.cpp: $(srcdir)/coverdialogbase.ui coverdialogbase.h coverdialogbase.moc
	rm -f coverdialogbase.cpp
	echo '#include <kdialog.h>' > coverdialogbase.cpp
	echo '#include <klocale.h>' >> coverdialogbase.cpp
	$(UIC) -tr ${UIC_TR} -i coverdialogbase.h $(srcdir)/coverdialogbase.ui > coverdialogbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" coverdialogbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_coverdialogbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> coverdialogbase.cpp ;\
	rm -f coverdialogbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "coverdialogbase.moc"' >> coverdialogbase.cpp; else rm -f coverdialogbase.cpp ; exit $$ret ; fi

coverdialogbase.h: $(srcdir)/coverdialogbase.ui
	rm -rf coverdialogbase.h;
	$(UIC) $(srcdir)/coverdialogbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> coverdialogbase.h ;
coverdialogbase.moc: coverdialogbase.h
	$(MOC) coverdialogbase.h -o coverdialogbase.moc

filerenameroptionsbase.cpp: $(srcdir)/filerenameroptionsbase.ui filerenameroptionsbase.h filerenameroptionsbase.moc
	rm -f filerenameroptionsbase.cpp
	echo '#include <kdialog.h>' > filerenameroptionsbase.cpp
	echo '#include <klocale.h>' >> filerenameroptionsbase.cpp
	$(UIC) -tr ${UIC_TR} -i filerenameroptionsbase.h $(srcdir)/filerenameroptionsbase.ui > filerenameroptionsbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" filerenameroptionsbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_filerenameroptionsbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> filerenameroptionsbase.cpp ;\
	rm -f filerenameroptionsbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "filerenameroptionsbase.moc"' >> filerenameroptionsbase.cpp; else rm -f filerenameroptionsbase.cpp ; exit $$ret ; fi

filerenameroptionsbase.h: $(srcdir)/filerenameroptionsbase.ui
	rm -rf filerenameroptionsbase.h;
	$(UIC) $(srcdir)/filerenameroptionsbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> filerenameroptionsbase.h ;
filerenameroptionsbase.moc: filerenameroptionsbase.h
	$(MOC) filerenameroptionsbase.h -o filerenameroptionsbase.moc

exampleoptionsbase.cpp: $(srcdir)/exampleoptionsbase.ui exampleoptionsbase.h exampleoptionsbase.moc
	rm -f exampleoptionsbase.cpp
	echo '#include <kdialog.h>' > exampleoptionsbase.cpp
	echo '#include <klocale.h>' >> exampleoptionsbase.cpp
	$(UIC) -tr ${UIC_TR} -i exampleoptionsbase.h $(srcdir)/exampleoptionsbase.ui > exampleoptionsbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" exampleoptionsbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_exampleoptionsbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> exampleoptionsbase.cpp ;\
	rm -f exampleoptionsbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "exampleoptionsbase.moc"' >> exampleoptionsbase.cpp; else rm -f exampleoptionsbase.cpp ; exit $$ret ; fi

exampleoptionsbase.h: $(srcdir)/exampleoptionsbase.ui
	rm -rf exampleoptionsbase.h;
	$(UIC) $(srcdir)/exampleoptionsbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> exampleoptionsbase.h ;
exampleoptionsbase.moc: exampleoptionsbase.h
	$(MOC) exampleoptionsbase.h -o exampleoptionsbase.moc

deletedialogbase.cpp: $(srcdir)/deletedialogbase.ui deletedialogbase.h deletedialogbase.moc
	rm -f deletedialogbase.cpp
	echo '#include <kdialog.h>' > deletedialogbase.cpp
	echo '#include <klocale.h>' >> deletedialogbase.cpp
	$(UIC) -tr ${UIC_TR} -i deletedialogbase.h $(srcdir)/deletedialogbase.ui > deletedialogbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" deletedialogbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_deletedialogbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> deletedialogbase.cpp ;\
	rm -f deletedialogbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "deletedialogbase.moc"' >> deletedialogbase.cpp; else rm -f deletedialogbase.cpp ; exit $$ret ; fi

deletedialogbase.h: $(srcdir)/deletedialogbase.ui
	rm -rf deletedialogbase.h;
	$(UIC) $(srcdir)/deletedialogbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> deletedialogbase.h ;
deletedialogbase.moc: deletedialogbase.h
	$(MOC) deletedialogbase.h -o deletedialogbase.moc
