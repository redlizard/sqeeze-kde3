REQUIREMENTS
------------

* KDE headers & libraries for kdelibs
* A Python interpreter for the compilation

scons v0.96.1 or newer is recommended, but it's not required since a
minimum scons distribution is included in the package.

BUILDING AND INSTALLING
-----------------------

For configuring, compiling and installing the application and
if you do have Scons 0.96.1 or newer installed, just run:

$ scons
$ scons install (as root user)

In case you don't have Scons installed, you can use
the accompanying minimum scons by running:

$ tar xjvf admin/scons-mini.tar.bz2
$ ./scons
$ ./scons install

ADVANCED BUILD FEATURES & DEINSTALLING
--------------------------------------

In case you want to execute many compilation jobs in parallel (because you
want to make use of a SMP system or a compile cluster, for instance),
you can use ('N' is the number of jobs which should be run in parallel):

$ scons -jN

A debug build of the program can be created by running:

$ scons configure debug=1
$ scons

Finally, the software can be removed from your system by running

$ scons -c install

CONFIGURATION NOTES
-------------------

The installation scripts are relying on the kde-config program.
The programs kde-config, qmake, uic and moc must be accesssible
through your PATH.

Qt and kde may not be installed as expected (in QTDIR and KDEDIR)
So until kde-config is able to give that information, you may
have to give those paths. You may also want to tune the build.

In these cases, you must first run "scons configure" with some options
before running "scons" and "scons install"

Here are some examples :
On Fedora/Redhat
$   scons configure kdeincludes=/usr/include/kde/
On Debian
$   scons configure qtincludes=/usr/include/qt/ kdeinclude=/usr/include/kde/
To install in some particular location with additional include paths
$   scons configure prefix=~/tmp extraincludes=/tmp/include:/usr/local/include
For AMD64 and platforms where folders are like /usr/lib64
$   scons configure libsuffix=64

For more options, run
scons --help

The build system is based on bksys, a build system that replaces
autoconf, automake and make in a row. Feel free to report your opinion
about it to the bksys authors.

PACKAGE CREATION
----------------

RPM packagers can use the DESTDIR environment variable
$ DESTDIR=/tmp/build-rpm/ scons install

To use checkinstall, pass the following option
$ checkinstall --fstrans=no --nodoc scons install

