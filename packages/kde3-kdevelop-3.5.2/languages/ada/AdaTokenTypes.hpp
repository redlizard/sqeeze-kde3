#ifndef INC_AdaTokenTypes_hpp_
#define INC_AdaTokenTypes_hpp_

/* $ANTLR 2.7.7 (20070609): "ada.g" -> "AdaTokenTypes.hpp"$ */

#ifndef CUSTOM_API
# define CUSTOM_API
#endif

#ifdef __cplusplus
struct CUSTOM_API AdaTokenTypes {
#endif
	enum {
		EOF_ = 1,
		PRAGMA = 4,
		IDENTIFIER = 5,
		SEMI = 6,
		LPAREN = 7,
		COMMA = 8,
		RPAREN = 9,
		RIGHT_SHAFT = 10,
		WITH = 11,
		DOT = 12,
		USE = 13,
		TYPE = 14,
		TIC = 15,
		RANGE = 16,
		DIGITS = 17,
		DELTA = 18,
		ACCESS = 19,
		PRIVATE = 20,
		PACKAGE = 21,
		BODY = 22,
		IS = 23,
		PROCEDURE = 24,
		FUNCTION = 25,
		NEW = 26,
		OTHERS = 27,
		PIPE = 28,
		DOT_DOT = 29,
		ALL = 30,
		COLON = 31,
		IN = 32,
		OUT = 33,
		RENAMES = 34,
		CHARACTER_LITERAL = 35,
		CHAR_STRING = 36,
		NuLL = 37,
		RECORD = 38,
		SEPARATE = 39,
		ABSTRACT = 40,
		RETURN = 41,
		TASK = 42,
		PROTECTED = 43,
		BOX = 44,
		ASSIGN = 45,
		ENTRY = 46,
		FOR = 47,
		END = 48,
		AT = 49,
		MOD = 50,
		SUBTYPE = 51,
		EXCEPTION = 52,
		CONSTANT = 53,
		ARRAY = 54,
		OF = 55,
		ALIASED = 56,
		CASE = 57,
		WHEN = 58,
		TAGGED = 59,
		LIMITED = 60,
		GENERIC = 61,
		BEGIN = 62,
		LT_LT = 63,
		GT_GT = 64,
		IF = 65,
		THEN = 66,
		ELSIF = 67,
		ELSE = 68,
		LOOP = 69,
		WHILE = 70,
		REVERSE = 71,
		DECLARE = 72,
		EXIT = 73,
		GOTO = 74,
		ACCEPT = 75,
		DO = 76,
		DELAY = 77,
		UNTIL = 78,
		SELECT = 79,
		ABORT = 80,
		OR = 81,
		TERMINATE = 82,
		RAISE = 83,
		REQUEUE = 84,
		AND = 85,
		XOR = 86,
		NOT = 87,
		EQ = 88,
		NE = 89,
		LT_ = 90,
		LE = 91,
		GT = 92,
		GE = 93,
		PLUS = 94,
		MINUS = 95,
		CONCAT = 96,
		STAR = 97,
		DIV = 98,
		REM = 99,
		ABS = 100,
		EXPON = 101,
		NUMERIC_LIT = 102,
		ABORTABLE_PART = 103,
		ABORT_STATEMENT = 104,
		ACCEPT_ALTERNATIVE = 105,
		ACCEPT_STATEMENT = 106,
		ALLOCATOR = 107,
		ASSIGNMENT_STATEMENT = 108,
		ASYNCHRONOUS_SELECT = 109,
		ATTRIBUTE_DEFINITION_CLAUSE = 110,
		AT_CLAUSE = 111,
		BLOCK_STATEMENT = 112,
		CASE_STATEMENT = 113,
		CASE_STATEMENT_ALTERNATIVE = 114,
		CODE_STATEMENT = 115,
		COMPONENT_DECLARATION = 116,
		CONDITIONAL_ENTRY_CALL = 117,
		CONTEXT_CLAUSE = 118,
		DECLARATIVE_PART = 119,
		DEFINING_IDENTIFIER_LIST = 120,
		DELAY_ALTERNATIVE = 121,
		DELAY_STATEMENT = 122,
		DELTA_CONSTRAINT = 123,
		DIGITS_CONSTRAINT = 124,
		DISCRIMINANT_ASSOCIATION = 125,
		DISCRIMINANT_CONSTRAINT = 126,
		DISCRIMINANT_SPECIFICATION = 127,
		ENTRY_BODY = 128,
		ENTRY_CALL_ALTERNATIVE = 129,
		ENTRY_CALL_STATEMENT = 130,
		ENTRY_DECLARATION = 131,
		ENTRY_INDEX_SPECIFICATION = 132,
		ENUMERATION_REPESENTATION_CLAUSE = 133,
		EXCEPTION_DECLARATION = 134,
		EXCEPTION_HANDLER = 135,
		EXCEPTION_RENAMING_DECLARATION = 136,
		EXIT_STATEMENT = 137,
		FORMAL_PACKAGE_DECLARATION = 138,
		GENERIC_FORMAL_PART = 139,
		GENERIC_PACKAGE_DECLARATION = 140,
		GOTO_STATEMENT = 141,
		HANDLED_SEQUENCE_OF_STATEMENTS = 142,
		HANDLED_STMTS_OPT = 143,
		IF_STATEMENT = 144,
		INCOMPLETE_TYPE_DECLARATION = 145,
		INDEXED_COMPONENT = 146,
		INDEX_CONSTRAINT = 147,
		LIBRARY_ITEM = 148,
		LOOP_STATEMENT = 149,
		NAME = 150,
		NULL_STATEMENT = 151,
		NUMBER_DECLARATION = 152,
		OBJECT_DECLARATION = 153,
		OBJECT_RENAMING_DECLARATION = 154,
		OPERATOR_SYMBOL = 155,
		PACKAGE_BODY = 156,
		PACKAGE_BODY_STUB = 157,
		PACKAGE_RENAMING_DECLARATION = 158,
		PACKAGE_SPECIFICATION = 159,
		PARAMETER_SPECIFICATION = 160,
		PRIVATE_EXTENSION_DECLARATION = 161,
		PRIVATE_TYPE_DECLARATION = 162,
		PROTECTED_BODY = 163,
		PROTECTED_BODY_STUB = 164,
		PROTECTED_TYPE_DECLARATION = 165,
		RAISE_STATEMENT = 166,
		RANGE_ATTRIBUTE_REFERENCE = 167,
		RECORD_REPRESENTATION_CLAUSE = 168,
		REQUEUE_STATEMENT = 169,
		RETURN_STATEMENT = 170,
		SELECTIVE_ACCEPT = 171,
		SEQUENCE_OF_STATEMENTS = 172,
		SINGLE_PROTECTED_DECLARATION = 173,
		SINGLE_TASK_DECLARATION = 174,
		STATEMENT = 175,
		SUBTYPE_DECLARATION = 176,
		SUBTYPE_INDICATION = 177,
		SUBTYPE_MARK = 178,
		SUBUNIT = 179,
		TASK_BODY = 180,
		TASK_BODY_STUB = 181,
		TASK_TYPE_DECLARATION = 182,
		TERMINATE_ALTERNATIVE = 183,
		TIMED_ENTRY_CALL = 184,
		TRIGGERING_ALTERNATIVE = 185,
		USE_CLAUSE = 186,
		USE_TYPE_CLAUSE = 187,
		VARIANT = 188,
		VARIANT_PART = 189,
		WITH_CLAUSE = 190,
		ABSTRACT_FUNCTION_DECLARATION = 191,
		ABSTRACT_PROCEDURE_DECLARATION = 192,
		ACCESS_TO_FUNCTION_DECLARATION = 193,
		ACCESS_TO_OBJECT_DECLARATION = 194,
		ACCESS_TO_PROCEDURE_DECLARATION = 195,
		ARRAY_OBJECT_DECLARATION = 196,
		ARRAY_TYPE_DECLARATION = 197,
		AND_THEN = 198,
		BASIC_DECLARATIVE_ITEMS_OPT = 199,
		BLOCK_BODY = 200,
		BLOCK_BODY_OPT = 201,
		CALL_STATEMENT = 202,
		COMPONENT_CLAUSES_OPT = 203,
		COMPONENT_ITEMS = 204,
		COND_CLAUSE = 205,
		DECIMAL_FIXED_POINT_DECLARATION = 206,
		DECLARE_OPT = 207,
		DERIVED_RECORD_EXTENSION = 208,
		DISCRETE_SUBTYPE_DEF_OPT = 209,
		DISCRIMINANT_SPECIFICATIONS = 210,
		DISCRIM_PART_OPT = 211,
		ELSE_OPT = 212,
		ELSIFS_OPT = 213,
		END_ID_OPT = 214,
		ENTRY_INDEX_OPT = 215,
		ENUMERATION_TYPE_DECLARATION = 216,
		EXCEPT_HANDLER_PART_OPT = 217,
		EXTENSION_OPT = 218,
		FLOATING_POINT_DECLARATION = 219,
		FORMAL_DECIMAL_FIXED_POINT_DECLARATION = 220,
		FORMAL_DISCRETE_TYPE_DECLARATION = 221,
		FORMAL_FLOATING_POINT_DECLARATION = 222,
		FORMAL_FUNCTION_DECLARATION = 223,
		FORMAL_MODULAR_TYPE_DECLARATION = 224,
		FORMAL_ORDINARY_DERIVED_TYPE_DECLARATION = 225,
		FORMAL_ORDINARY_FIXED_POINT_DECLARATION = 226,
		FORMAL_PART_OPT = 227,
		FORMAL_PRIVATE_EXTENSION_DECLARATION = 228,
		FORMAL_PRIVATE_TYPE_DECLARATION = 229,
		FORMAL_PROCEDURE_DECLARATION = 230,
		FORMAL_SIGNED_INTEGER_TYPE_DECLARATION = 231,
		FUNCTION_BODY = 232,
		FUNCTION_BODY_STUB = 233,
		FUNCTION_DECLARATION = 234,
		FUNCTION_RENAMING_DECLARATION = 235,
		GENERIC_FUNCTION_DECLARATION = 236,
		GENERIC_FUNCTION_INSTANTIATION = 237,
		GENERIC_FUNCTION_RENAMING = 238,
		GENERIC_PACKAGE_INSTANTIATION = 239,
		GENERIC_PACKAGE_RENAMING = 240,
		GENERIC_PROCEDURE_DECLARATION = 241,
		GENERIC_PROCEDURE_INSTANTIATION = 242,
		GENERIC_PROCEDURE_RENAMING = 243,
		GUARD_OPT = 244,
		IDENTIFIER_COLON_OPT = 245,
		ID_OPT = 246,
		INIT_OPT = 247,
		ITERATION_SCHEME_OPT = 248,
		LABEL_OPT = 249,
		MARK_WITH_CONSTRAINT = 250,
		MODIFIERS = 251,
		MODULAR_TYPE_DECLARATION = 252,
		MOD_CLAUSE_OPT = 253,
		NOT_IN = 254,
		ORDINARY_DERIVED_TYPE_DECLARATION = 255,
		ORDINARY_FIXED_POINT_DECLARATION = 256,
		OR_ELSE = 257,
		OR_SELECT_OPT = 258,
		PARENTHESIZED_PRIMARY = 259,
		PRIVATE_DECLARATIVE_ITEMS_OPT = 260,
		PRIVATE_TASK_ITEMS_OPT = 261,
		PROCEDURE_BODY = 262,
		PROCEDURE_BODY_STUB = 263,
		PROCEDURE_DECLARATION = 264,
		PROCEDURE_RENAMING_DECLARATION = 265,
		PROT_MEMBER_DECLARATIONS = 266,
		PROT_OP_BODIES_OPT = 267,
		PROT_OP_DECLARATIONS = 268,
		PROT_PRIVATE_OPT = 269,
		RANGED_EXPRS = 270,
		RANGE_CONSTRAINT = 271,
		RECORD_TYPE_DECLARATION = 272,
		SELECTOR_NAMES_OPT = 273,
		SIGNED_INTEGER_TYPE_DECLARATION = 274,
		TASK_ITEMS_OPT = 275,
		UNARY_MINUS = 276,
		UNARY_PLUS = 277,
		VALUE = 278,
		VALUES = 279,
		VARIANTS = 280,
		COMMENT_INTRO = 281,
		OX = 282,
		TIC_OR_CHARACTER_LITERAL = 283,
		DIGIT = 284,
		EXPONENT = 285,
		EXTENDED_DIGIT = 286,
		BASED_INTEGER = 287,
		WS_ = 288,
		COMMENT = 289,
		NULL_TREE_LOOKAHEAD = 3
	};
#ifdef __cplusplus
};
#endif
#endif /*INC_AdaTokenTypes_hpp_*/
