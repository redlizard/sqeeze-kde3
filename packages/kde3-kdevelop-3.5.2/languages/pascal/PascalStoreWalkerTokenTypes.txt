// $ANTLR 2.7.7 (20061129): pascal.tree.g -> PascalStoreWalkerTokenTypes.txt$
PascalStoreWalker    // output token vocab name
BLOCK=4
IDLIST=5
ELIST=6
FUNC_CALL=7
PROC_CALL=8
SCALARTYPE=9
TYPELIST=10
VARIANT_TAG=11
VARIANT_TAG_NO_ID=12
VARIANT_CASE=13
CONSTLIST=14
FIELDLIST=15
ARGDECLS=16
VARDECL=17
ARGDECL=18
ARGLIST=19
TYPEDECL=20
FIELD=21
DOT=22
LIBRARY="library"=23
SEMI=24
END="end"=25
EXPORTS="exports"=26
COMMA=27
LITERAL_index="index"=28
LITERAL_name="name"=29
USES="uses"=30
UNIT="unit"=31
INTERFACE="interface"=32
IMPLEMENTATION="implementation"=33
BEGIN="begin"=34
PROGRAM="program"=35
LPAREN=36
RPAREN=37
INITIALIZATION="initialization"=38
FINALIZATION="finalization"=39
LABEL="label"=40
CONST="const"=41
RESOURCESTRING="resourcestring"=42
EQUAL=43
TYPE="type"=44
VAR="var"=45
COLON=46
PROCEDURE="procedure"=47
FORWARD="forward"=48
FUNCTION="function"=49
ARRAY="array"=50
OF="of"=51
EXTERNAL="external"=52
PUBLIC="public"=53
ALIAS="alias"=54
INTERRUPT=55
EXPORT="export"=56
REGISTER="register"=57
PASCAL="pascal"=58
CDECL="cdecl"=59
STDCALL="stdcall"=60
POPSTACK="popstack"=61
SAVEREGISTERS="saveregisters"=62
INLINE="inline"=63
SAFECALL="safecall"=64
NEAR="near"=65
FAR="far"=66
NUM_INT=67
INTEGER="integer"=68
SHORTINT="shortint"=69
SMALLINT="smallint"=70
LONGINT="longint"=71
INT64="int64"=72
BYTE="byte"=73
WORD="word"=74
CARDINAL="cardinal"=75
QWORD="qword"=76
BOOLEAN="boolean"=77
BYTEBOOL=78
LONGBOOL=79
CHAR="char"=80
DOTDOT=81
ASSIGN=82
REAL="real"=83
SINGLE="single"=84
DOUBLE="double"=85
EXTENDED="extended"=86
COMP="comp"=87
STRING="string"=88
LBRACK=89
RBRACK=90
PACKED="packed"=91
RECORD="record"=92
CASE="case"=93
SET="set"=94
FILE="file"=95
POINTER=96
OBJECT="object"=97
VIRTUAL="virtual"=98
ABSTRACT="abstract"=99
PRIVATE="private"=100
PROTECTED="protected"=101
CONSTRUCTOR="constructor"=102
DESTRUCTOR="destructor"=103
CLASS="class"=104
OVERRIDE="override"=105
MESSAGE=106
PUBLISHED="published"=107
PROPERTY="property"=108
LITERAL_read="read"=109
LITERAL_write="write"=110
DEFAULT="default"=111
LITERAL_nodefault="nodefault"=112
LE=113
GE=114
LTH=115
GT=116
NOT_EQUAL=117
IN="in"=118
IS="is"=119
PLUS=120
MINUS=121
OR="or"=122
XOR="xor"=123
STAR=124
SLASH=125
DIV="div"=126
MOD="mod"=127
AND="and"=128
SHL="shl"=129
SHR="shr"=130
NOT="not"=131
TRUE="true"=132
FALSE="false"=133
AT=134
PLUSEQ=135
MINUSEQ=136
STAREQ=137
SLASHQE=138
GOTO="goto"=139
IF="if"=140
THEN="then"=141
ELSE="else"=142
WHILE="while"=143
DO="do"=144
REPEAT="repeat"=145
UNTIL="until"=146
FOR="for"=147
TO="to"=148
DOWNTO="downto"=149
WITH="with"=150
LBRACK2=151
RBRACK2=152
OPERATOR="operator"=153
RAISE="raise"=154
TRY="try"=155
EXCEPT="except"=156
FINALLY="finally"=157
ON="on"=158
STRING_LITERAL=159
CHR="chr"=160
NIL="nil"=161
NUM_REAL=162
IDENT=163
ABSOLUTE="absolute"=164
AS="as"=165
ASM="asm"=166
ASSEMBLER="assembler"=167
BREAK="break"=168
CONTINUE="continue"=169
DISPOSE="dispose"=170
EXIT="exit"=171
INHERITED="inherited"=172
NEW="new"=173
SELF="self"=174
METHOD=175
ADDSUBOR=176
ASSIGNEQUAL=177
SIGN=178
FUNC=179
NODE_NOT_EMIT=180
MYASTVAR=181
LF=182
LCURLY=183
RCURLY=184
WS=185
COMMENT_1=186
COMMENT_2=187
COMMENT_3=188
EXPONENT=189
