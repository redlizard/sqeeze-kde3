# Makefile.in generated by automake 1.9.6 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Here resides the automake project part.



srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = buildtools/autotools
DIST_COMMON = README $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(kde_moduledir)" "$(DESTDIR)$(rcdir)" \
	"$(DESTDIR)$(servicedir)"
kde_moduleLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(kde_module_LTLIBRARIES)
libkdevautoproject_la_DEPENDENCIES =  \
	$(top_builddir)/buildtools/lib/base/libkdevbuildbase.la \
	$(top_builddir)/buildtools/lib/parsers/autotools/libkdevautotoolsparser.la \
	$(top_builddir)/buildtools/lib/widgets/libkdevbuildtoolswidgets.la \
	$(top_builddir)/lib/interfaces/extras/libkdevextras.la \
	$(top_builddir)/lib/libkdevelop.la
am_libkdevautoproject_la_OBJECTS = autoprojectpart.lo \
	autoprojectwidget.lo configureoptionswidget.lo \
	subprojectoptionsdlg.lo targetoptionsdlg.lo addservicedlg.lo \
	addapplicationdlg.lo addtargetdlg.lo addsubprojectdlg.lo \
	addfiledlg.lo removefiledlg.lo addicondlg.lo \
	addtranslationdlg.lo addprefixdlg.lo kfilednddetailview.lo \
	kfiledndiconview.lo fileselectorwidget.lo misc.lo \
	removetargetdlg.lo choosetargetdialog.lo \
	addexistingfilesdlg.lo addexistingdirectoriesdlg.lo \
	kimporticonview.lo autosubprojectview.lo autodetailsview.lo \
	autolistviewitems.lo managecustomcommand.lo autotoolsaction.lo \
	makefilehandler.lo
#>- libkdevautoproject_la_OBJECTS = $(am_libkdevautoproject_la_OBJECTS)
#>+ 15
libkdevautoproject_la_final_OBJECTS = libkdevautoproject_la.all_cpp.lo 
libkdevautoproject_la_nofinal_OBJECTS = autoprojectpart.lo \
	autoprojectwidget.lo configureoptionswidget.lo \
	subprojectoptionsdlg.lo targetoptionsdlg.lo addservicedlg.lo \
	addapplicationdlg.lo addtargetdlg.lo addsubprojectdlg.lo \
	addfiledlg.lo removefiledlg.lo addicondlg.lo \
	addtranslationdlg.lo addprefixdlg.lo kfilednddetailview.lo \
	kfiledndiconview.lo fileselectorwidget.lo misc.lo \
	removetargetdlg.lo choosetargetdialog.lo \
	addexistingfilesdlg.lo addexistingdirectoriesdlg.lo \
	kimporticonview.lo autosubprojectview.lo autodetailsview.lo \
	autolistviewitems.lo managecustomcommand.lo autotoolsaction.lo \
	makefilehandler.lo configureoptionswidgetbase.lo subprojectoptionsdlgbase.lo targetoptionsdlgbase.lo addservicedlgbase.lo addapplicationdlgbase.lo addtargetdlgbase.lo addfiledlgbase.lo removefiledlgbase.lo addicondlgbase.lo addsubprojectdlgbase.lo removetargetdlgbase.lo choosetargetdlgbase.lo addexistingdlgbase.lo managecustomcommandsbase.lo autoprojectviewbase.lo
@KDE_USE_FINAL_FALSE@libkdevautoproject_la_OBJECTS = $(libkdevautoproject_la_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@libkdevautoproject_la_OBJECTS = $(libkdevautoproject_la_final_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
#>- 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libkdevautoproject_la_SOURCES)
DIST_SOURCES = $(libkdevautoproject_la_SOURCES)
rcDATA_INSTALL = $(INSTALL_DATA)
serviceDATA_INSTALL = $(INSTALL_DATA)
DATA = $(rc_DATA) $(service_DATA)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DB3INCLUDES = @DB3INCLUDES@
DB3LDFLAGS = @DB3LDFLAGS@
DB3LIB = @DB3LIB@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOT_FOUND = @DOT_FOUND@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
GZIP_COMMAND = @GZIP_COMMAND@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
SVN_CPPFLAGS = @SVN_CPPFLAGS@
SVN_INCLUDE = @SVN_INCLUDE@
SVN_LIB = @SVN_LIB@
TAR = @TAR@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
gmake_prog = @gmake_prog@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
include_ARTS_FALSE = @include_ARTS_FALSE@
include_ARTS_TRUE = @include_ARTS_TRUE@
include_ada_FALSE = @include_ada_FALSE@
include_ada_TRUE = @include_ada_TRUE@
include_ant_FALSE = @include_ant_FALSE@
include_ant_TRUE = @include_ant_TRUE@
include_autoproject_FALSE = @include_autoproject_FALSE@
include_autoproject_TRUE = @include_autoproject_TRUE@
include_bash_FALSE = @include_bash_FALSE@
include_bash_TRUE = @include_bash_TRUE@
include_clearcase_FALSE = @include_clearcase_FALSE@
include_clearcase_TRUE = @include_clearcase_TRUE@
include_cpp_FALSE = @include_cpp_FALSE@
include_cpp_TRUE = @include_cpp_TRUE@
include_csharp_FALSE = @include_csharp_FALSE@
include_csharp_TRUE = @include_csharp_TRUE@
include_customproject_FALSE = @include_customproject_FALSE@
include_customproject_TRUE = @include_customproject_TRUE@
include_cvsclient_FALSE = @include_cvsclient_FALSE@
include_cvsclient_TRUE = @include_cvsclient_TRUE@
include_cvsservice_FALSE = @include_cvsservice_FALSE@
include_cvsservice_TRUE = @include_cvsservice_TRUE@
include_fortran_FALSE = @include_fortran_FALSE@
include_fortran_TRUE = @include_fortran_TRUE@
include_java_FALSE = @include_java_FALSE@
include_java_TRUE = @include_java_TRUE@
include_kioslave_svn_FALSE = @include_kioslave_svn_FALSE@
include_kioslave_svn_TRUE = @include_kioslave_svn_TRUE@
include_pascal_FALSE = @include_pascal_FALSE@
include_pascal_TRUE = @include_pascal_TRUE@
include_perforce_FALSE = @include_perforce_FALSE@
include_perforce_TRUE = @include_perforce_TRUE@
include_perl_FALSE = @include_perl_FALSE@
include_perl_TRUE = @include_perl_TRUE@
include_php_FALSE = @include_php_FALSE@
include_php_TRUE = @include_php_TRUE@
include_python_FALSE = @include_python_FALSE@
include_python_TRUE = @include_python_TRUE@
include_ruby_FALSE = @include_ruby_FALSE@
include_ruby_TRUE = @include_ruby_TRUE@
include_scriptproject_FALSE = @include_scriptproject_FALSE@
include_scriptproject_TRUE = @include_scriptproject_TRUE@
include_sql_FALSE = @include_sql_FALSE@
include_sql_TRUE = @include_sql_TRUE@
include_subversion_FALSE = @include_subversion_FALSE@
include_subversion_TRUE = @include_subversion_TRUE@
include_trollproject_FALSE = @include_trollproject_FALSE@
include_trollproject_TRUE = @include_trollproject_TRUE@
include_vba_FALSE = @include_vba_FALSE@
include_vba_TRUE = @include_vba_TRUE@
include_x11_FALSE = @include_x11_FALSE@
include_x11_TRUE = @include_x11_TRUE@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
kdelibs_doxydir = @kdelibs_doxydir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
tar = @tar@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
unsermake_enable_pch_FALSE = @unsermake_enable_pch_FALSE@
unsermake_enable_pch_TRUE = @unsermake_enable_pch_TRUE@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@
INCLUDES = -I$(top_srcdir)/buildtools/lib -I$(top_srcdir)/buildtools/lib/base \
	-I$(top_srcdir)/buildtools/lib/parsers/autotools -I$(top_srcdir)/buildtools/lib/widgets -I$(top_srcdir)/lib/interfaces \
	-I$(top_srcdir)/lib/interfaces/extensions -I$(top_srcdir)/lib/interfaces/external \
	-I$(top_srcdir)/lib/interfaces/extras -I$(top_srcdir)/lib/util $(all_includes) \
	-I$(top_builddir)/buildtools/lib/widgets

kde_module_LTLIBRARIES = libkdevautoproject.la
libkdevautoproject_la_LDFLAGS = $(all_libraries) $(KDE_PLUGIN)
libkdevautoproject_la_LIBADD = \
	$(top_builddir)/buildtools/lib/base/libkdevbuildbase.la \
	$(top_builddir)/buildtools/lib/parsers/autotools/libkdevautotoolsparser.la $(top_builddir)/buildtools/lib/widgets/libkdevbuildtoolswidgets.la \
	$(top_builddir)/lib/interfaces/extras/libkdevextras.la $(top_builddir)/lib/libkdevelop.la

#>- libkdevautoproject_la_SOURCES = autoprojectpart.cpp autoprojectwidget.cpp \
#>- 			configureoptionswidget.cpp configureoptionswidgetbase.ui subprojectoptionsdlg.cpp \
#>- 			subprojectoptionsdlgbase.ui targetoptionsdlg.cpp targetoptionsdlgbase.ui addservicedlg.cpp \
#>- 			addservicedlgbase.ui addapplicationdlg.cpp addapplicationdlgbase.ui addtargetdlg.cpp \
#>- 			addtargetdlgbase.ui addsubprojectdlg.cpp addfiledlgbase.ui addfiledlg.cpp \
#>- 			removefiledlgbase.ui removefiledlg.cpp addicondlgbase.ui addicondlg.cpp \
#>- 			addtranslationdlg.cpp addprefixdlg.cpp kfilednddetailview.cpp kfiledndiconview.cpp \
#>- 			fileselectorwidget.cpp misc.cpp addsubprojectdlgbase.ui removetargetdlg.cpp \
#>- 			removetargetdlgbase.ui choosetargetdialog.cpp choosetargetdlgbase.ui addexistingdlgbase.ui \
#>- 			addexistingfilesdlg.cpp addexistingdirectoriesdlg.cpp kimporticonview.cpp \
#>- 			autosubprojectview.cpp autodetailsview.cpp autolistviewitems.cpp managecustomcommandsbase.ui \
#>- 			managecustomcommand.cpp autoprojectviewbase.ui autotoolsaction.cpp makefilehandler.cpp
#>+ 12
libkdevautoproject_la_SOURCES=autoprojectpart.cpp autoprojectwidget.cpp \
			configureoptionswidget.cpp  subprojectoptionsdlg.cpp \
			 targetoptionsdlg.cpp  addservicedlg.cpp \
			 addapplicationdlg.cpp  addtargetdlg.cpp \
			 addsubprojectdlg.cpp  addfiledlg.cpp \
			 removefiledlg.cpp  addicondlg.cpp \
			addtranslationdlg.cpp addprefixdlg.cpp kfilednddetailview.cpp kfiledndiconview.cpp \
			fileselectorwidget.cpp misc.cpp  removetargetdlg.cpp \
			 choosetargetdialog.cpp   \
			addexistingfilesdlg.cpp addexistingdirectoriesdlg.cpp kimporticonview.cpp \
			autosubprojectview.cpp autodetailsview.cpp autolistviewitems.cpp  \
			managecustomcommand.cpp  autotoolsaction.cpp makefilehandler.cpp configureoptionswidgetbase.cpp subprojectoptionsdlgbase.cpp targetoptionsdlgbase.cpp addservicedlgbase.cpp addapplicationdlgbase.cpp addtargetdlgbase.cpp addfiledlgbase.cpp removefiledlgbase.cpp addicondlgbase.cpp addsubprojectdlgbase.cpp removetargetdlgbase.cpp choosetargetdlgbase.cpp addexistingdlgbase.cpp managecustomcommandsbase.cpp autoprojectviewbase.cpp

#>- METASOURCES = AUTO
servicedir = $(kde_servicesdir)
service_DATA = kdevautoproject.desktop kdevkdeautoproject.desktop
rcdir = $(kde_datadir)/kdevautoproject
rc_DATA = kdevautoproject.rc
noinst_HEADERS = managecustomcommand.h autotoolsaction.h makefilehandler.h
#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  buildtools/autotools/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --foreign  buildtools/autotools/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  buildtools/autotools/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  buildtools/autotools/Makefile
	cd $(top_srcdir) && perl admin/am_edit buildtools/autotools/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-kde_moduleLTLIBRARIES: $(kde_module_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(kde_moduledir)" || $(mkdir_p) "$(DESTDIR)$(kde_moduledir)"
	@list='$(kde_module_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(kde_moduleLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(kde_moduledir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(kde_moduleLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(kde_moduledir)/$$f"; \
	  else :; fi; \
	done

uninstall-kde_moduleLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(kde_module_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(kde_moduledir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(kde_moduledir)/$$p"; \
	done

clean-kde_moduleLTLIBRARIES:
	-test -z "$(kde_module_LTLIBRARIES)" || rm -f $(kde_module_LTLIBRARIES)
	@list='$(kde_module_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
#>- libkdevautoproject.la: $(libkdevautoproject_la_OBJECTS) $(libkdevautoproject_la_DEPENDENCIES) 
#>+ 2
@KDE_USE_CLOSURE_TRUE@libkdevautoproject.la: libkdevautoproject.la.closure $(libkdevautoproject_la_OBJECTS) $(libkdevautoproject_la_DEPENDENCIES) 
@KDE_USE_CLOSURE_FALSE@libkdevautoproject.la: $(libkdevautoproject_la_OBJECTS) $(libkdevautoproject_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(kde_moduledir) $(libkdevautoproject_la_LDFLAGS) $(libkdevautoproject_la_OBJECTS) $(libkdevautoproject_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/addapplicationdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/addexistingdirectoriesdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/addexistingfilesdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/addfiledlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/addicondlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/addprefixdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/addservicedlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/addsubprojectdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/addtargetdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/addtranslationdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/autodetailsview.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/autolistviewitems.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/autoprojectpart.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/autoprojectwidget.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/autosubprojectview.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/autotoolsaction.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/choosetargetdialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/configureoptionswidget.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fileselectorwidget.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kfilednddetailview.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kfiledndiconview.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kimporticonview.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/makefilehandler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/managecustomcommand.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/misc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/removefiledlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/removetargetdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/subprojectoptionsdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/targetoptionsdlg.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-rcDATA: $(rc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(rcdir)" || $(mkdir_p) "$(DESTDIR)$(rcdir)"
	@list='$(rc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(rcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(rcdir)/$$f'"; \
	  $(rcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(rcdir)/$$f"; \
	done

uninstall-rcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(rc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(rcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(rcdir)/$$f"; \
	done
install-serviceDATA: $(service_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(servicedir)" || $(mkdir_p) "$(DESTDIR)$(servicedir)"
	@list='$(service_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(serviceDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(servicedir)/$$f'"; \
	  $(serviceDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(servicedir)/$$f"; \
	done

uninstall-serviceDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(service_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(servicedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(servicedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(kde_moduledir)" "$(DESTDIR)$(rcdir)" "$(DESTDIR)$(servicedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-generic clean-kde_moduleLTLIBRARIES clean-libtool \
#>- 	mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-ui clean-closures clean-bcheck clean-final  clean-generic clean-kde_moduleLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

#>- install-data-am: install-kde_moduleLTLIBRARIES install-rcDATA \
#>- 	install-serviceDATA
#>+ 2
install-data-am:   install-rcDATA \
	install-serviceDATA

#>- install-exec-am:
#>+ 1
install-exec-am:  install-kde_moduleLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-kde_moduleLTLIBRARIES \
	uninstall-rcDATA uninstall-serviceDATA

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-kde_moduleLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am \
	install-kde_moduleLTLIBRARIES install-man install-rcDATA \
	install-serviceDATA install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am uninstall-kde_moduleLTLIBRARIES \
	uninstall-rcDATA uninstall-serviceDATA

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 8
libkdevautoproject.la.closure: $(libkdevautoproject_la_OBJECTS) $(libkdevautoproject_la_DEPENDENCIES)
	@echo "int main() {return 0;}" > libkdevautoproject_la_closure.cpp
	@$(LTCXXCOMPILE) -c libkdevautoproject_la_closure.cpp
	$(CXXLINK) libkdevautoproject_la_closure.lo $(libkdevautoproject_la_LDFLAGS) $(libkdevautoproject_la_OBJECTS) $(libkdevautoproject_la_LIBADD) $(LIBS)
	@rm -f libkdevautoproject_la_closure.* libkdevautoproject.la.closure
	@echo "timestamp" > libkdevautoproject.la.closure


#>+ 3
addservicedlg.moc: $(srcdir)/addservicedlg.h
	$(MOC) $(srcdir)/addservicedlg.h -o addservicedlg.moc

#>+ 2
mocs: addservicedlg.moc

#>+ 3
addexistingdirectoriesdlg.moc: $(srcdir)/addexistingdirectoriesdlg.h
	$(MOC) $(srcdir)/addexistingdirectoriesdlg.h -o addexistingdirectoriesdlg.moc

#>+ 2
mocs: addexistingdirectoriesdlg.moc

#>+ 3
autoprojectpart.moc: $(srcdir)/autoprojectpart.h
	$(MOC) $(srcdir)/autoprojectpart.h -o autoprojectpart.moc

#>+ 2
mocs: autoprojectpart.moc

#>+ 3
autodetailsview.moc: $(srcdir)/autodetailsview.h
	$(MOC) $(srcdir)/autodetailsview.h -o autodetailsview.moc

#>+ 2
mocs: autodetailsview.moc

#>+ 3
kimporticonview.moc: $(srcdir)/kimporticonview.h
	$(MOC) $(srcdir)/kimporticonview.h -o kimporticonview.moc

#>+ 2
mocs: kimporticonview.moc

#>+ 3
autoprojectwidget.moc: $(srcdir)/autoprojectwidget.h
	$(MOC) $(srcdir)/autoprojectwidget.h -o autoprojectwidget.moc

#>+ 2
mocs: autoprojectwidget.moc

#>+ 3
addfiledlg.moc: $(srcdir)/addfiledlg.h
	$(MOC) $(srcdir)/addfiledlg.h -o addfiledlg.moc

#>+ 2
mocs: addfiledlg.moc

#>+ 3
targetoptionsdlg.moc: $(srcdir)/targetoptionsdlg.h
	$(MOC) $(srcdir)/targetoptionsdlg.h -o targetoptionsdlg.moc

#>+ 2
mocs: targetoptionsdlg.moc

#>+ 3
addsubprojectdlg.moc: $(srcdir)/addsubprojectdlg.h
	$(MOC) $(srcdir)/addsubprojectdlg.h -o addsubprojectdlg.moc

#>+ 2
mocs: addsubprojectdlg.moc

#>+ 3
addapplicationdlg.moc: $(srcdir)/addapplicationdlg.h
	$(MOC) $(srcdir)/addapplicationdlg.h -o addapplicationdlg.moc

#>+ 2
mocs: addapplicationdlg.moc

#>+ 3
configureoptionswidget.moc: $(srcdir)/configureoptionswidget.h
	$(MOC) $(srcdir)/configureoptionswidget.h -o configureoptionswidget.moc

#>+ 2
mocs: configureoptionswidget.moc

#>+ 3
addicondlg.moc: $(srcdir)/addicondlg.h
	$(MOC) $(srcdir)/addicondlg.h -o addicondlg.moc

#>+ 2
mocs: addicondlg.moc

#>+ 3
kfiledndiconview.moc: $(srcdir)/kfiledndiconview.h
	$(MOC) $(srcdir)/kfiledndiconview.h -o kfiledndiconview.moc

#>+ 2
mocs: kfiledndiconview.moc

#>+ 3
managecustomcommand.moc: $(srcdir)/managecustomcommand.h
	$(MOC) $(srcdir)/managecustomcommand.h -o managecustomcommand.moc

#>+ 2
mocs: managecustomcommand.moc

#>+ 3
addprefixdlg.moc: $(srcdir)/addprefixdlg.h
	$(MOC) $(srcdir)/addprefixdlg.h -o addprefixdlg.moc

#>+ 2
mocs: addprefixdlg.moc

#>+ 3
subprojectoptionsdlg.moc: $(srcdir)/subprojectoptionsdlg.h
	$(MOC) $(srcdir)/subprojectoptionsdlg.h -o subprojectoptionsdlg.moc

#>+ 2
mocs: subprojectoptionsdlg.moc

#>+ 3
addexistingfilesdlg.moc: $(srcdir)/addexistingfilesdlg.h
	$(MOC) $(srcdir)/addexistingfilesdlg.h -o addexistingfilesdlg.moc

#>+ 2
mocs: addexistingfilesdlg.moc

#>+ 3
kfilednddetailview.moc: $(srcdir)/kfilednddetailview.h
	$(MOC) $(srcdir)/kfilednddetailview.h -o kfilednddetailview.moc

#>+ 2
mocs: kfilednddetailview.moc

#>+ 3
removefiledlg.moc: $(srcdir)/removefiledlg.h
	$(MOC) $(srcdir)/removefiledlg.h -o removefiledlg.moc

#>+ 2
mocs: removefiledlg.moc

#>+ 3
autosubprojectview.moc: $(srcdir)/autosubprojectview.h
	$(MOC) $(srcdir)/autosubprojectview.h -o autosubprojectview.moc

#>+ 2
mocs: autosubprojectview.moc

#>+ 3
addtranslationdlg.moc: $(srcdir)/addtranslationdlg.h
	$(MOC) $(srcdir)/addtranslationdlg.h -o addtranslationdlg.moc

#>+ 2
mocs: addtranslationdlg.moc

#>+ 3
choosetargetdialog.moc: $(srcdir)/choosetargetdialog.h
	$(MOC) $(srcdir)/choosetargetdialog.h -o choosetargetdialog.moc

#>+ 2
mocs: choosetargetdialog.moc

#>+ 3
fileselectorwidget.moc: $(srcdir)/fileselectorwidget.h
	$(MOC) $(srcdir)/fileselectorwidget.h -o fileselectorwidget.moc

#>+ 2
mocs: fileselectorwidget.moc

#>+ 3
addtargetdlg.moc: $(srcdir)/addtargetdlg.h
	$(MOC) $(srcdir)/addtargetdlg.h -o addtargetdlg.moc

#>+ 2
mocs: addtargetdlg.moc

#>+ 3
clean-metasources:
	-rm -f  addservicedlg.moc addexistingdirectoriesdlg.moc autoprojectpart.moc autodetailsview.moc kimporticonview.moc autoprojectwidget.moc addfiledlg.moc targetoptionsdlg.moc addsubprojectdlg.moc addapplicationdlg.moc configureoptionswidget.moc addicondlg.moc kfiledndiconview.moc managecustomcommand.moc addprefixdlg.moc subprojectoptionsdlg.moc addexistingfilesdlg.moc kfilednddetailview.moc removefiledlg.moc autosubprojectview.moc addtranslationdlg.moc choosetargetdialog.moc fileselectorwidget.moc addtargetdlg.moc

#>+ 2
KDE_DIST=kfiledndiconview.h autoprojectwidget.h addapplicationdlg.h configureoptionswidget.h addtargetdlg.h addicondlg.h targetoptionsdlgbase.ui autodetailsview.h autoprojectviewbase.ui autolistviewitems.h managecustomcommandsbase.ui misc.h fileselectorwidget.h kdevkdeautoproject.desktop removefiledlgbase.ui addfiledlgbase.ui addfiledlg.h addapplicationdlgbase.ui removetargetdlg.h addexistingdirectoriesdlg.h autoprojectpart.h addtargetdlgbase.ui addservicedlg.h subprojectoptionsdlg.h subprojectoptionsdlgbase.ui removefiledlg.h kdevautoproject.rc kdevautoproject.desktop addicondlgbase.ui autosubprojectview.h README.dox choosetargetdlgbase.ui addsubprojectdlgbase.ui addsubprojectdlg.h targetoptionsdlg.h Makefile.in addtranslationdlg.h addexistingfilesdlg.h addservicedlgbase.ui choosetargetdialog.h removetargetdlgbase.ui addprefixdlg.h kimporticonview.h configureoptionswidgetbase.ui addexistingdlgbase.ui Makefile.am kfilednddetailview.h 

#>+ 18
clean-ui:
	-rm -f \
	configureoptionswidgetbase.cpp configureoptionswidgetbase.h configureoptionswidgetbase.moc \
	subprojectoptionsdlgbase.cpp subprojectoptionsdlgbase.h subprojectoptionsdlgbase.moc \
	targetoptionsdlgbase.cpp targetoptionsdlgbase.h targetoptionsdlgbase.moc \
	addservicedlgbase.cpp addservicedlgbase.h addservicedlgbase.moc \
	addapplicationdlgbase.cpp addapplicationdlgbase.h addapplicationdlgbase.moc \
	addtargetdlgbase.cpp addtargetdlgbase.h addtargetdlgbase.moc \
	addfiledlgbase.cpp addfiledlgbase.h addfiledlgbase.moc \
	removefiledlgbase.cpp removefiledlgbase.h removefiledlgbase.moc \
	addicondlgbase.cpp addicondlgbase.h addicondlgbase.moc \
	addsubprojectdlgbase.cpp addsubprojectdlgbase.h addsubprojectdlgbase.moc \
	removetargetdlgbase.cpp removetargetdlgbase.h removetargetdlgbase.moc \
	choosetargetdlgbase.cpp choosetargetdlgbase.h choosetargetdlgbase.moc \
	addexistingdlgbase.cpp addexistingdlgbase.h addexistingdlgbase.moc \
	managecustomcommandsbase.cpp managecustomcommandsbase.h managecustomcommandsbase.moc \
	autoprojectviewbase.cpp autoprojectviewbase.h autoprojectviewbase.moc 

#>+ 3
clean-closures:
	-rm -f  libkdevautoproject.la.closure

#>+ 2
docs-am:

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  buildtools/autotools/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  buildtools/autotools/Makefile
	cd $(top_srcdir) && perl admin/am_edit buildtools/autotools/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
libkdevautoproject_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/autoprojectpart.cpp $(srcdir)/autoprojectwidget.cpp $(srcdir)/configureoptionswidget.cpp $(srcdir)/subprojectoptionsdlg.cpp $(srcdir)/targetoptionsdlg.cpp $(srcdir)/addservicedlg.cpp $(srcdir)/addapplicationdlg.cpp $(srcdir)/addtargetdlg.cpp $(srcdir)/addsubprojectdlg.cpp $(srcdir)/addfiledlg.cpp $(srcdir)/removefiledlg.cpp $(srcdir)/addicondlg.cpp $(srcdir)/addtranslationdlg.cpp $(srcdir)/addprefixdlg.cpp $(srcdir)/kfilednddetailview.cpp $(srcdir)/kfiledndiconview.cpp $(srcdir)/fileselectorwidget.cpp $(srcdir)/misc.cpp $(srcdir)/removetargetdlg.cpp $(srcdir)/choosetargetdialog.cpp $(srcdir)/addexistingfilesdlg.cpp $(srcdir)/addexistingdirectoriesdlg.cpp $(srcdir)/kimporticonview.cpp $(srcdir)/autosubprojectview.cpp $(srcdir)/autodetailsview.cpp $(srcdir)/autolistviewitems.cpp $(srcdir)/managecustomcommand.cpp $(srcdir)/autotoolsaction.cpp $(srcdir)/makefilehandler.cpp configureoptionswidgetbase.cpp subprojectoptionsdlgbase.cpp targetoptionsdlgbase.cpp addservicedlgbase.cpp addapplicationdlgbase.cpp addtargetdlgbase.cpp addfiledlgbase.cpp removefiledlgbase.cpp addicondlgbase.cpp addsubprojectdlgbase.cpp removetargetdlgbase.cpp choosetargetdlgbase.cpp addexistingdlgbase.cpp managecustomcommandsbase.cpp autoprojectviewbase.cpp  removefiledlgbase.moc addservicedlgbase.moc autodetailsview.moc autoprojectviewbase.moc addfiledlg.moc addapplicationdlg.moc removetargetdlgbase.moc addfiledlgbase.moc kfiledndiconview.moc addprefixdlg.moc configureoptionswidgetbase.moc addexistingdlgbase.moc subprojectoptionsdlg.moc managecustomcommandsbase.moc kfilednddetailview.moc addexistingfilesdlg.moc autosubprojectview.moc addtranslationdlg.moc subprojectoptionsdlgbase.moc addsubprojectdlgbase.moc fileselectorwidget.moc addtargetdlgbase.moc targetoptionsdlgbase.moc addservicedlg.moc addexistingdirectoriesdlg.moc autoprojectpart.moc addicondlgbase.moc kimporticonview.moc autoprojectwidget.moc targetoptionsdlg.moc addsubprojectdlg.moc configureoptionswidget.moc addicondlg.moc managecustomcommand.moc addapplicationdlgbase.moc choosetargetdlgbase.moc removefiledlg.moc choosetargetdialog.moc addtargetdlg.moc
	@echo 'creating libkdevautoproject_la.all_cpp.cpp ...'; \
	rm -f libkdevautoproject_la.all_cpp.files libkdevautoproject_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libkdevautoproject_la.all_cpp.final; \
	for file in autoprojectpart.cpp autoprojectwidget.cpp configureoptionswidget.cpp subprojectoptionsdlg.cpp targetoptionsdlg.cpp addservicedlg.cpp addapplicationdlg.cpp addtargetdlg.cpp addsubprojectdlg.cpp addfiledlg.cpp removefiledlg.cpp addicondlg.cpp addtranslationdlg.cpp addprefixdlg.cpp kfilednddetailview.cpp kfiledndiconview.cpp fileselectorwidget.cpp misc.cpp removetargetdlg.cpp choosetargetdialog.cpp addexistingfilesdlg.cpp addexistingdirectoriesdlg.cpp kimporticonview.cpp autosubprojectview.cpp autodetailsview.cpp autolistviewitems.cpp managecustomcommand.cpp autotoolsaction.cpp makefilehandler.cpp configureoptionswidgetbase.cpp subprojectoptionsdlgbase.cpp targetoptionsdlgbase.cpp addservicedlgbase.cpp addapplicationdlgbase.cpp addtargetdlgbase.cpp addfiledlgbase.cpp removefiledlgbase.cpp addicondlgbase.cpp addsubprojectdlgbase.cpp removetargetdlgbase.cpp choosetargetdlgbase.cpp addexistingdlgbase.cpp managecustomcommandsbase.cpp autoprojectviewbase.cpp ; do \
	  echo "#include \"$$file\"" >> libkdevautoproject_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libkdevautoproject_la.all_cpp.final; \
	done; \
	cat libkdevautoproject_la.all_cpp.final libkdevautoproject_la.all_cpp.files > libkdevautoproject_la.all_cpp.cpp; \
	rm -f libkdevautoproject_la.all_cpp.final libkdevautoproject_la.all_cpp.files

#>+ 3
clean-final:
	-rm -f libkdevautoproject_la.all_cpp.cpp

#>+ 3
final:
	$(MAKE) libkdevautoproject_la_OBJECTS="$(libkdevautoproject_la_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) libkdevautoproject_la_OBJECTS="$(libkdevautoproject_la_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) libkdevautoproject_la_OBJECTS="$(libkdevautoproject_la_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) libkdevautoproject_la_OBJECTS="$(libkdevautoproject_la_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 80
fileselectorwidget.o: fileselectorwidget.moc 
$(srcdir)/kimporticonview.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
kimporticonview.o: kimporticonview.moc 
kfiledndiconview.lo: kfiledndiconview.moc 
addexistingfilesdlg.o: addexistingfilesdlg.moc 
autoprojectpart.lo: autoprojectpart.moc 
fileselectorwidget.lo: fileselectorwidget.moc 
addexistingdirectoriesdlg.o: addexistingdirectoriesdlg.moc 
nmcheck-am: nmcheck
autodetailsview.o: autodetailsview.moc 
$(srcdir)/removefiledlg.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
addsubprojectdlg.o: addsubprojectdlg.moc 
$(srcdir)/makefilehandler.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
configureoptionswidget.o: configureoptionswidget.moc 
$(srcdir)/managecustomcommand.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
addprefixdlg.o: addprefixdlg.moc 
$(srcdir)/kfilednddetailview.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
$(srcdir)/autotoolsaction.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
addprefixdlg.lo: addprefixdlg.moc 
addsubprojectdlg.lo: addsubprojectdlg.moc 
kimporticonview.lo: kimporticonview.moc 
$(srcdir)/addsubprojectdlg.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
autosubprojectview.o: autosubprojectview.moc 
removefiledlg.o: removefiledlg.moc 
managecustomcommand.o: managecustomcommand.moc 
$(srcdir)/removetargetdlg.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
subprojectoptionsdlg.lo: subprojectoptionsdlg.moc 
$(srcdir)/fileselectorwidget.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
$(srcdir)/autoprojectpart.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
addicondlg.o: addicondlg.moc 
$(srcdir)/addprefixdlg.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
addtranslationdlg.lo: addtranslationdlg.moc 
$(srcdir)/subprojectoptionsdlg.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
targetoptionsdlg.o: targetoptionsdlg.moc 
kfiledndiconview.o: kfiledndiconview.moc 
autoprojectwidget.lo: autoprojectwidget.moc 
addtranslationdlg.o: addtranslationdlg.moc 
addapplicationdlg.lo: addapplicationdlg.moc 
$(srcdir)/autolistviewitems.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
$(srcdir)/addapplicationdlg.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
addfiledlg.lo: addfiledlg.moc 
addtargetdlg.lo: addtargetdlg.moc 
addapplicationdlg.o: addapplicationdlg.moc 
$(srcdir)/targetoptionsdlg.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
removefiledlg.lo: removefiledlg.moc 
$(srcdir)/addtranslationdlg.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
$(srcdir)/addicondlg.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
addservicedlg.o: addservicedlg.moc 
$(srcdir)/addexistingdirectoriesdlg.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
$(srcdir)/autodetailsview.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
addfiledlg.o: addfiledlg.moc 
configureoptionswidget.lo: configureoptionswidget.moc 
autosubprojectview.lo: autosubprojectview.moc 
choosetargetdialog.lo: choosetargetdialog.moc 
targetoptionsdlg.lo: targetoptionsdlg.moc 
$(srcdir)/addfiledlg.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
$(srcdir)/kfiledndiconview.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
$(srcdir)/addservicedlg.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
autoprojectwidget.o: autoprojectwidget.moc 
$(srcdir)/misc.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
addexistingdirectoriesdlg.lo: addexistingdirectoriesdlg.moc 
subprojectoptionsdlg.o: subprojectoptionsdlg.moc 
$(srcdir)/autosubprojectview.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
addicondlg.lo: addicondlg.moc 
addservicedlg.lo: addservicedlg.moc 
addexistingfilesdlg.lo: addexistingfilesdlg.moc 
nmcheck: 
addtargetdlg.o: addtargetdlg.moc 
kfilednddetailview.lo: kfilednddetailview.moc 
$(srcdir)/addexistingfilesdlg.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
managecustomcommand.lo: managecustomcommand.moc 
autodetailsview.lo: autodetailsview.moc 
choosetargetdialog.o: choosetargetdialog.moc 
kfilednddetailview.o: kfilednddetailview.moc 
$(srcdir)/autoprojectwidget.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
$(srcdir)/configureoptionswidget.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
autoprojectpart.o: autoprojectpart.moc 
$(srcdir)/addtargetdlg.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 
$(srcdir)/choosetargetdialog.cpp: configureoptionswidgetbase.h subprojectoptionsdlgbase.h targetoptionsdlgbase.h addservicedlgbase.h addapplicationdlgbase.h addtargetdlgbase.h addfiledlgbase.h removefiledlgbase.h addicondlgbase.h addsubprojectdlgbase.h removetargetdlgbase.h choosetargetdlgbase.h addexistingdlgbase.h managecustomcommandsbase.h autoprojectviewbase.h 

#>+ 225
addexistingdlgbase.cpp: $(srcdir)/addexistingdlgbase.ui addexistingdlgbase.h addexistingdlgbase.moc
	rm -f addexistingdlgbase.cpp
	echo '#include <kdialog.h>' > addexistingdlgbase.cpp
	echo '#include <klocale.h>' >> addexistingdlgbase.cpp
	$(UIC) -tr ${UIC_TR} -i addexistingdlgbase.h $(srcdir)/addexistingdlgbase.ui > addexistingdlgbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" addexistingdlgbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_addexistingdlgbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> addexistingdlgbase.cpp ;\
	rm -f addexistingdlgbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "addexistingdlgbase.moc"' >> addexistingdlgbase.cpp; else rm -f addexistingdlgbase.cpp ; exit $$ret ; fi

addexistingdlgbase.h: $(srcdir)/addexistingdlgbase.ui
	rm -rf addexistingdlgbase.h;
	$(UIC) $(srcdir)/addexistingdlgbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> addexistingdlgbase.h ;
addexistingdlgbase.moc: addexistingdlgbase.h
	$(MOC) addexistingdlgbase.h -o addexistingdlgbase.moc

addservicedlgbase.cpp: $(srcdir)/addservicedlgbase.ui addservicedlgbase.h addservicedlgbase.moc
	rm -f addservicedlgbase.cpp
	echo '#include <kdialog.h>' > addservicedlgbase.cpp
	echo '#include <klocale.h>' >> addservicedlgbase.cpp
	$(UIC) -tr ${UIC_TR} -i addservicedlgbase.h $(srcdir)/addservicedlgbase.ui > addservicedlgbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" addservicedlgbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_addservicedlgbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> addservicedlgbase.cpp ;\
	rm -f addservicedlgbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "addservicedlgbase.moc"' >> addservicedlgbase.cpp; else rm -f addservicedlgbase.cpp ; exit $$ret ; fi

addservicedlgbase.h: $(srcdir)/addservicedlgbase.ui
	rm -rf addservicedlgbase.h;
	$(UIC) $(srcdir)/addservicedlgbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> addservicedlgbase.h ;
addservicedlgbase.moc: addservicedlgbase.h
	$(MOC) addservicedlgbase.h -o addservicedlgbase.moc

choosetargetdlgbase.cpp: $(srcdir)/choosetargetdlgbase.ui choosetargetdlgbase.h choosetargetdlgbase.moc
	rm -f choosetargetdlgbase.cpp
	echo '#include <kdialog.h>' > choosetargetdlgbase.cpp
	echo '#include <klocale.h>' >> choosetargetdlgbase.cpp
	$(UIC) -tr ${UIC_TR} -i choosetargetdlgbase.h $(srcdir)/choosetargetdlgbase.ui > choosetargetdlgbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" choosetargetdlgbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_choosetargetdlgbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> choosetargetdlgbase.cpp ;\
	rm -f choosetargetdlgbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "choosetargetdlgbase.moc"' >> choosetargetdlgbase.cpp; else rm -f choosetargetdlgbase.cpp ; exit $$ret ; fi

choosetargetdlgbase.h: $(srcdir)/choosetargetdlgbase.ui
	rm -rf choosetargetdlgbase.h;
	$(UIC) $(srcdir)/choosetargetdlgbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> choosetargetdlgbase.h ;
choosetargetdlgbase.moc: choosetargetdlgbase.h
	$(MOC) choosetargetdlgbase.h -o choosetargetdlgbase.moc

autoprojectviewbase.cpp: $(srcdir)/autoprojectviewbase.ui autoprojectviewbase.h autoprojectviewbase.moc
	rm -f autoprojectviewbase.cpp
	echo '#include <kdialog.h>' > autoprojectviewbase.cpp
	echo '#include <klocale.h>' >> autoprojectviewbase.cpp
	$(UIC) -tr ${UIC_TR} -i autoprojectviewbase.h $(srcdir)/autoprojectviewbase.ui > autoprojectviewbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" autoprojectviewbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_autoprojectviewbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> autoprojectviewbase.cpp ;\
	rm -f autoprojectviewbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "autoprojectviewbase.moc"' >> autoprojectviewbase.cpp; else rm -f autoprojectviewbase.cpp ; exit $$ret ; fi

autoprojectviewbase.h: $(srcdir)/autoprojectviewbase.ui
	rm -rf autoprojectviewbase.h;
	$(UIC) $(srcdir)/autoprojectviewbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> autoprojectviewbase.h ;
autoprojectviewbase.moc: autoprojectviewbase.h
	$(MOC) autoprojectviewbase.h -o autoprojectviewbase.moc

removetargetdlgbase.cpp: $(srcdir)/removetargetdlgbase.ui removetargetdlgbase.h removetargetdlgbase.moc
	rm -f removetargetdlgbase.cpp
	echo '#include <kdialog.h>' > removetargetdlgbase.cpp
	echo '#include <klocale.h>' >> removetargetdlgbase.cpp
	$(UIC) -tr ${UIC_TR} -i removetargetdlgbase.h $(srcdir)/removetargetdlgbase.ui > removetargetdlgbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" removetargetdlgbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_removetargetdlgbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> removetargetdlgbase.cpp ;\
	rm -f removetargetdlgbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "removetargetdlgbase.moc"' >> removetargetdlgbase.cpp; else rm -f removetargetdlgbase.cpp ; exit $$ret ; fi

removetargetdlgbase.h: $(srcdir)/removetargetdlgbase.ui
	rm -rf removetargetdlgbase.h;
	$(UIC) $(srcdir)/removetargetdlgbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> removetargetdlgbase.h ;
removetargetdlgbase.moc: removetargetdlgbase.h
	$(MOC) removetargetdlgbase.h -o removetargetdlgbase.moc

addfiledlgbase.cpp: $(srcdir)/addfiledlgbase.ui addfiledlgbase.h addfiledlgbase.moc
	rm -f addfiledlgbase.cpp
	echo '#include <kdialog.h>' > addfiledlgbase.cpp
	echo '#include <klocale.h>' >> addfiledlgbase.cpp
	$(UIC) -tr ${UIC_TR} -i addfiledlgbase.h $(srcdir)/addfiledlgbase.ui > addfiledlgbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" addfiledlgbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_addfiledlgbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> addfiledlgbase.cpp ;\
	rm -f addfiledlgbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "addfiledlgbase.moc"' >> addfiledlgbase.cpp; else rm -f addfiledlgbase.cpp ; exit $$ret ; fi

addfiledlgbase.h: $(srcdir)/addfiledlgbase.ui
	rm -rf addfiledlgbase.h;
	$(UIC) $(srcdir)/addfiledlgbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> addfiledlgbase.h ;
addfiledlgbase.moc: addfiledlgbase.h
	$(MOC) addfiledlgbase.h -o addfiledlgbase.moc

addsubprojectdlgbase.cpp: $(srcdir)/addsubprojectdlgbase.ui addsubprojectdlgbase.h addsubprojectdlgbase.moc
	rm -f addsubprojectdlgbase.cpp
	echo '#include <kdialog.h>' > addsubprojectdlgbase.cpp
	echo '#include <klocale.h>' >> addsubprojectdlgbase.cpp
	$(UIC) -tr ${UIC_TR} -i addsubprojectdlgbase.h $(srcdir)/addsubprojectdlgbase.ui > addsubprojectdlgbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" addsubprojectdlgbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_addsubprojectdlgbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> addsubprojectdlgbase.cpp ;\
	rm -f addsubprojectdlgbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "addsubprojectdlgbase.moc"' >> addsubprojectdlgbase.cpp; else rm -f addsubprojectdlgbase.cpp ; exit $$ret ; fi

addsubprojectdlgbase.h: $(srcdir)/addsubprojectdlgbase.ui
	rm -rf addsubprojectdlgbase.h;
	$(UIC) $(srcdir)/addsubprojectdlgbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> addsubprojectdlgbase.h ;
addsubprojectdlgbase.moc: addsubprojectdlgbase.h
	$(MOC) addsubprojectdlgbase.h -o addsubprojectdlgbase.moc

addtargetdlgbase.cpp: $(srcdir)/addtargetdlgbase.ui addtargetdlgbase.h addtargetdlgbase.moc
	rm -f addtargetdlgbase.cpp
	echo '#include <kdialog.h>' > addtargetdlgbase.cpp
	echo '#include <klocale.h>' >> addtargetdlgbase.cpp
	$(UIC) -tr ${UIC_TR} -i addtargetdlgbase.h $(srcdir)/addtargetdlgbase.ui > addtargetdlgbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" addtargetdlgbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_addtargetdlgbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> addtargetdlgbase.cpp ;\
	rm -f addtargetdlgbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "addtargetdlgbase.moc"' >> addtargetdlgbase.cpp; else rm -f addtargetdlgbase.cpp ; exit $$ret ; fi

addtargetdlgbase.h: $(srcdir)/addtargetdlgbase.ui
	rm -rf addtargetdlgbase.h;
	$(UIC) $(srcdir)/addtargetdlgbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> addtargetdlgbase.h ;
addtargetdlgbase.moc: addtargetdlgbase.h
	$(MOC) addtargetdlgbase.h -o addtargetdlgbase.moc

configureoptionswidgetbase.cpp: $(srcdir)/configureoptionswidgetbase.ui configureoptionswidgetbase.h configureoptionswidgetbase.moc
	rm -f configureoptionswidgetbase.cpp
	echo '#include <kdialog.h>' > configureoptionswidgetbase.cpp
	echo '#include <klocale.h>' >> configureoptionswidgetbase.cpp
	$(UIC) -tr ${UIC_TR} -i configureoptionswidgetbase.h $(srcdir)/configureoptionswidgetbase.ui > configureoptionswidgetbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" configureoptionswidgetbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_configureoptionswidgetbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> configureoptionswidgetbase.cpp ;\
	rm -f configureoptionswidgetbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "configureoptionswidgetbase.moc"' >> configureoptionswidgetbase.cpp; else rm -f configureoptionswidgetbase.cpp ; exit $$ret ; fi

configureoptionswidgetbase.h: $(srcdir)/configureoptionswidgetbase.ui
	rm -rf configureoptionswidgetbase.h;
	$(UIC) $(srcdir)/configureoptionswidgetbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> configureoptionswidgetbase.h ;
configureoptionswidgetbase.moc: configureoptionswidgetbase.h
	$(MOC) configureoptionswidgetbase.h -o configureoptionswidgetbase.moc

addicondlgbase.cpp: $(srcdir)/addicondlgbase.ui addicondlgbase.h addicondlgbase.moc
	rm -f addicondlgbase.cpp
	echo '#include <kdialog.h>' > addicondlgbase.cpp
	echo '#include <klocale.h>' >> addicondlgbase.cpp
	$(UIC) -tr ${UIC_TR} -i addicondlgbase.h $(srcdir)/addicondlgbase.ui > addicondlgbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" addicondlgbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_addicondlgbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> addicondlgbase.cpp ;\
	rm -f addicondlgbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "addicondlgbase.moc"' >> addicondlgbase.cpp; else rm -f addicondlgbase.cpp ; exit $$ret ; fi

addicondlgbase.h: $(srcdir)/addicondlgbase.ui
	rm -rf addicondlgbase.h;
	$(UIC) $(srcdir)/addicondlgbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> addicondlgbase.h ;
addicondlgbase.moc: addicondlgbase.h
	$(MOC) addicondlgbase.h -o addicondlgbase.moc

addapplicationdlgbase.cpp: $(srcdir)/addapplicationdlgbase.ui addapplicationdlgbase.h addapplicationdlgbase.moc
	rm -f addapplicationdlgbase.cpp
	echo '#include <kdialog.h>' > addapplicationdlgbase.cpp
	echo '#include <klocale.h>' >> addapplicationdlgbase.cpp
	$(UIC) -tr ${UIC_TR} -i addapplicationdlgbase.h $(srcdir)/addapplicationdlgbase.ui > addapplicationdlgbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" addapplicationdlgbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_addapplicationdlgbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> addapplicationdlgbase.cpp ;\
	rm -f addapplicationdlgbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "addapplicationdlgbase.moc"' >> addapplicationdlgbase.cpp; else rm -f addapplicationdlgbase.cpp ; exit $$ret ; fi

addapplicationdlgbase.h: $(srcdir)/addapplicationdlgbase.ui
	rm -rf addapplicationdlgbase.h;
	$(UIC) $(srcdir)/addapplicationdlgbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> addapplicationdlgbase.h ;
addapplicationdlgbase.moc: addapplicationdlgbase.h
	$(MOC) addapplicationdlgbase.h -o addapplicationdlgbase.moc

removefiledlgbase.cpp: $(srcdir)/removefiledlgbase.ui removefiledlgbase.h removefiledlgbase.moc
	rm -f removefiledlgbase.cpp
	echo '#include <kdialog.h>' > removefiledlgbase.cpp
	echo '#include <klocale.h>' >> removefiledlgbase.cpp
	$(UIC) -tr ${UIC_TR} -i removefiledlgbase.h $(srcdir)/removefiledlgbase.ui > removefiledlgbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" removefiledlgbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_removefiledlgbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> removefiledlgbase.cpp ;\
	rm -f removefiledlgbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "removefiledlgbase.moc"' >> removefiledlgbase.cpp; else rm -f removefiledlgbase.cpp ; exit $$ret ; fi

removefiledlgbase.h: $(srcdir)/removefiledlgbase.ui
	rm -rf removefiledlgbase.h;
	$(UIC) $(srcdir)/removefiledlgbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> removefiledlgbase.h ;
removefiledlgbase.moc: removefiledlgbase.h
	$(MOC) removefiledlgbase.h -o removefiledlgbase.moc

subprojectoptionsdlgbase.cpp: $(srcdir)/subprojectoptionsdlgbase.ui subprojectoptionsdlgbase.h subprojectoptionsdlgbase.moc
	rm -f subprojectoptionsdlgbase.cpp
	echo '#include <kdialog.h>' > subprojectoptionsdlgbase.cpp
	echo '#include <klocale.h>' >> subprojectoptionsdlgbase.cpp
	$(UIC) -tr ${UIC_TR} -i subprojectoptionsdlgbase.h $(srcdir)/subprojectoptionsdlgbase.ui > subprojectoptionsdlgbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" subprojectoptionsdlgbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_subprojectoptionsdlgbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> subprojectoptionsdlgbase.cpp ;\
	rm -f subprojectoptionsdlgbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "subprojectoptionsdlgbase.moc"' >> subprojectoptionsdlgbase.cpp; else rm -f subprojectoptionsdlgbase.cpp ; exit $$ret ; fi

subprojectoptionsdlgbase.h: $(srcdir)/subprojectoptionsdlgbase.ui
	rm -rf subprojectoptionsdlgbase.h;
	$(UIC) $(srcdir)/subprojectoptionsdlgbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> subprojectoptionsdlgbase.h ;
subprojectoptionsdlgbase.moc: subprojectoptionsdlgbase.h
	$(MOC) subprojectoptionsdlgbase.h -o subprojectoptionsdlgbase.moc

managecustomcommandsbase.cpp: $(srcdir)/managecustomcommandsbase.ui managecustomcommandsbase.h managecustomcommandsbase.moc
	rm -f managecustomcommandsbase.cpp
	echo '#include <kdialog.h>' > managecustomcommandsbase.cpp
	echo '#include <klocale.h>' >> managecustomcommandsbase.cpp
	$(UIC) -tr ${UIC_TR} -i managecustomcommandsbase.h $(srcdir)/managecustomcommandsbase.ui > managecustomcommandsbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" managecustomcommandsbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_managecustomcommandsbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> managecustomcommandsbase.cpp ;\
	rm -f managecustomcommandsbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "managecustomcommandsbase.moc"' >> managecustomcommandsbase.cpp; else rm -f managecustomcommandsbase.cpp ; exit $$ret ; fi

managecustomcommandsbase.h: $(srcdir)/managecustomcommandsbase.ui
	rm -rf managecustomcommandsbase.h;
	$(UIC) $(srcdir)/managecustomcommandsbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> managecustomcommandsbase.h ;
managecustomcommandsbase.moc: managecustomcommandsbase.h
	$(MOC) managecustomcommandsbase.h -o managecustomcommandsbase.moc

targetoptionsdlgbase.cpp: $(srcdir)/targetoptionsdlgbase.ui targetoptionsdlgbase.h targetoptionsdlgbase.moc
	rm -f targetoptionsdlgbase.cpp
	echo '#include <kdialog.h>' > targetoptionsdlgbase.cpp
	echo '#include <klocale.h>' >> targetoptionsdlgbase.cpp
	$(UIC) -tr ${UIC_TR} -i targetoptionsdlgbase.h $(srcdir)/targetoptionsdlgbase.ui > targetoptionsdlgbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" targetoptionsdlgbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_targetoptionsdlgbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> targetoptionsdlgbase.cpp ;\
	rm -f targetoptionsdlgbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "targetoptionsdlgbase.moc"' >> targetoptionsdlgbase.cpp; else rm -f targetoptionsdlgbase.cpp ; exit $$ret ; fi

targetoptionsdlgbase.h: $(srcdir)/targetoptionsdlgbase.ui
	rm -rf targetoptionsdlgbase.h;
	$(UIC) $(srcdir)/targetoptionsdlgbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> targetoptionsdlgbase.h ;
targetoptionsdlgbase.moc: targetoptionsdlgbase.h
	$(MOC) targetoptionsdlgbase.h -o targetoptionsdlgbase.moc
