# Makefile.in generated by automake 1.10.1 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = umbrello/umbrello/codegenerators
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libcodegenerator_la_LIBADD =
am_libcodegenerator_la_OBJECTS = codegenfactory.lo classifierinfo.lo \
	javacodegenerator.lo javaantcodedocument.lo \
	javacodeclassfield.lo javaclassifiercodedocument.lo \
	javacodecomment.lo javacodedocumentation.lo \
	javacodeoperation.lo javacodeaccessormethod.lo \
	javaclassdeclarationblock.lo \
	javacodeclassfielddeclarationblock.lo \
	javacodegenerationpolicy.lo javacodegenerationpolicypage.lo \
	cppcodegenerator.lo cppcodedocumentation.lo \
	cppcodeclassfield.lo cppcodecomment.lo cppmakecodedocument.lo \
	cppsourcecodedocument.lo cppsourcecodeoperation.lo \
	cppsourcecodeaccessormethod.lo \
	cppsourcecodeclassfielddeclarationblock.lo \
	cppheadercodedocument.lo cppheaderclassdeclarationblock.lo \
	cppheadercodeoperation.lo cppheadercodeaccessormethod.lo \
	cppheadercodeclassfielddeclarationblock.lo \
	cppcodegenerationpolicy.lo cppcodegenerationpolicypage.lo \
	cppcodegenerationform.lo rubycodegenerator.lo \
	rubycodeclassfield.lo rubyclassifiercodedocument.lo \
	rubycodecomment.lo rubycodedocumentation.lo \
	rubycodeoperation.lo rubycodeaccessormethod.lo \
	rubyclassdeclarationblock.lo \
	rubycodeclassfielddeclarationblock.lo \
	rubycodegenerationpolicy.lo rubycodegenerationpolicypage.lo \
	simplecodegenerator.lo adawriter.lo aswriter.lo cppwriter.lo \
	csharpwriter.lo dwriter.lo javawriter.lo jswriter.lo \
	idlwriter.lo pascalwriter.lo perlwriter.lo php5writer.lo \
	phpwriter.lo pythonwriter.lo rubywriter.lo sqlwriter.lo \
	tclwriter.lo xmlschemawriter.lo xmlelementcodeblock.lo \
	xmlcodecomment.lo codegen_utils.lo
#>- libcodegenerator_la_OBJECTS = $(am_libcodegenerator_la_OBJECTS)
#>+ 30
libcodegenerator_la_OBJECTS = codegenfactory.lo classifierinfo.lo \
	javacodegenerator.lo javaantcodedocument.lo \
	javacodeclassfield.lo javaclassifiercodedocument.lo \
	javacodecomment.lo javacodedocumentation.lo \
	javacodeoperation.lo javacodeaccessormethod.lo \
	javaclassdeclarationblock.lo \
	javacodeclassfielddeclarationblock.lo \
	javacodegenerationpolicy.lo javacodegenerationpolicypage.lo \
	cppcodegenerator.lo cppcodedocumentation.lo \
	cppcodeclassfield.lo cppcodecomment.lo cppmakecodedocument.lo \
	cppsourcecodedocument.lo cppsourcecodeoperation.lo \
	cppsourcecodeaccessormethod.lo \
	cppsourcecodeclassfielddeclarationblock.lo \
	cppheadercodedocument.lo cppheaderclassdeclarationblock.lo \
	cppheadercodeoperation.lo cppheadercodeaccessormethod.lo \
	cppheadercodeclassfielddeclarationblock.lo \
	cppcodegenerationpolicy.lo cppcodegenerationpolicypage.lo \
	cppcodegenerationform.lo rubycodegenerator.lo \
	rubycodeclassfield.lo rubyclassifiercodedocument.lo \
	rubycodecomment.lo rubycodedocumentation.lo \
	rubycodeoperation.lo rubycodeaccessormethod.lo \
	rubyclassdeclarationblock.lo \
	rubycodeclassfielddeclarationblock.lo \
	rubycodegenerationpolicy.lo rubycodegenerationpolicypage.lo \
	simplecodegenerator.lo adawriter.lo aswriter.lo cppwriter.lo \
	csharpwriter.lo dwriter.lo javawriter.lo jswriter.lo \
	idlwriter.lo pascalwriter.lo perlwriter.lo php5writer.lo \
	phpwriter.lo pythonwriter.lo rubywriter.lo sqlwriter.lo \
	tclwriter.lo xmlschemawriter.lo xmlelementcodeblock.lo \
	xmlcodecomment.lo codegen_utils.lo javacodegenerationformbase.lo cppcodegenerationformbase.lo rubycodegenerationformbase.lo
#>- libcodegenerator_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(libcodegenerator_la_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
libcodegenerator_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(libcodegenerator_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libcodegenerator_la_SOURCES)
DIST_SOURCES = $(libcodegenerator_la_SOURCES)
ETAGS = etags
CTAGS = ctags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DBIV_INCLUDES = @DBIV_INCLUDES@
DBIV_LDFLAGS = @DBIV_LDFLAGS@
DBIV_NAME = @DBIV_NAME@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCACHEGRIND_VERSION = @KCACHEGRIND_VERSION@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
KMTRACE_LIBS = @KMTRACE_LIBS@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBXML_CFLAGS = @LIBXML_CFLAGS@
LIBXML_LIBS = @LIBXML_LIBS@
LIBXML_RPATH = @LIBXML_RPATH@
LIBXSLT_CFLAGS = @LIBXSLT_CFLAGS@
LIBXSLT_LIBS = @LIBXSLT_LIBS@
LIBXSLT_RPATH = @LIBXSLT_RPATH@
LIBZ = @LIBZ@
LIB_DBIV = @LIB_DBIV@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
SVNCONFIG = @SVNCONFIG@
SVNLD = @SVNLD@
SVN_CPPFLAGS = @SVN_CPPFLAGS@
SVN_INCLUDE = @SVN_INCLUDE@
SVN_LIB = @SVN_LIB@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@
noinst_LTLIBRARIES = libcodegenerator.la
INCLUDES = -I../dialogs -I$(top_srcdir)/umbrello/umbrello/dialogs $(all_includes)
libcodegenerator_la_LDFLAGS = $(all_libraries)
#>- libcodegenerator_la_METASOURCES = AUTO
#>- libcodegenerator_la_SOURCES = codegenfactory.cpp classifierinfo.cpp \
#>- 	javacodegenerator.cpp javaantcodedocument.cpp javacodeclassfield.cpp \
#>- 	javaclassifiercodedocument.cpp javacodecomment.cpp javacodedocumentation.cpp \
#>- 	javacodeoperation.cpp javacodeaccessormethod.cpp \
#>- 	javaclassdeclarationblock.cpp javacodeclassfielddeclarationblock.cpp \
#>- 	javacodegenerationpolicy.cpp javacodegenerationpolicypage.cpp \
#>- 	javacodegenerationformbase.ui \
#>- 	cppcodegenerator.cpp cppcodedocumentation.cpp cppcodeclassfield.cpp \
#>- 	cppcodecomment.cpp cppmakecodedocument.cpp \
#>- 	cppsourcecodedocument.cpp cppsourcecodeoperation.cpp cppsourcecodeaccessormethod.cpp \
#>- 	cppsourcecodeclassfielddeclarationblock.cpp \
#>- 	cppheadercodedocument.cpp cppheaderclassdeclarationblock.cpp \
#>- 	cppheadercodeoperation.cpp cppheadercodeaccessormethod.cpp \
#>- 	cppheadercodeclassfielddeclarationblock.cpp \
#>- 	cppcodegenerationpolicy.cpp cppcodegenerationpolicypage.cpp \
#>- 	cppcodegenerationformbase.ui cppcodegenerationform.cpp \
#>- 	rubycodegenerator.cpp rubycodeclassfield.cpp \
#>- 	rubyclassifiercodedocument.cpp rubycodecomment.cpp rubycodedocumentation.cpp \
#>- 	rubycodeoperation.cpp rubycodeaccessormethod.cpp \
#>- 	rubyclassdeclarationblock.cpp rubycodeclassfielddeclarationblock.cpp \
#>- 	rubycodegenerationpolicy.cpp rubycodegenerationpolicypage.cpp \
#>- 	rubycodegenerationformbase.ui \
#>- 	simplecodegenerator.cpp \
#>- 	adawriter.cpp aswriter.cpp cppwriter.cpp csharpwriter.cpp dwriter.cpp javawriter.cpp jswriter.cpp \
#>- 	idlwriter.cpp pascalwriter.cpp perlwriter.cpp php5writer.cpp phpwriter.cpp \
#>- 	pythonwriter.cpp rubywriter.cpp sqlwriter.cpp tclwriter.cpp xmlschemawriter.cpp \
#>- 	xmlelementcodeblock.cpp xmlcodecomment.cpp \
#>- 	codegen_utils.cpp
#>+ 28
libcodegenerator_la_SOURCES=codegenfactory.cpp classifierinfo.cpp \
	javacodegenerator.cpp javaantcodedocument.cpp javacodeclassfield.cpp \
	javaclassifiercodedocument.cpp javacodecomment.cpp javacodedocumentation.cpp \
	javacodeoperation.cpp javacodeaccessormethod.cpp \
	javaclassdeclarationblock.cpp javacodeclassfielddeclarationblock.cpp \
	javacodegenerationpolicy.cpp javacodegenerationpolicypage.cpp \
	 \
	cppcodegenerator.cpp cppcodedocumentation.cpp cppcodeclassfield.cpp \
	cppcodecomment.cpp cppmakecodedocument.cpp \
	cppsourcecodedocument.cpp cppsourcecodeoperation.cpp cppsourcecodeaccessormethod.cpp \
	cppsourcecodeclassfielddeclarationblock.cpp \
	cppheadercodedocument.cpp cppheaderclassdeclarationblock.cpp \
	cppheadercodeoperation.cpp cppheadercodeaccessormethod.cpp \
	cppheadercodeclassfielddeclarationblock.cpp \
	cppcodegenerationpolicy.cpp cppcodegenerationpolicypage.cpp \
	 cppcodegenerationform.cpp \
	rubycodegenerator.cpp rubycodeclassfield.cpp \
	rubyclassifiercodedocument.cpp rubycodecomment.cpp rubycodedocumentation.cpp \
	rubycodeoperation.cpp rubycodeaccessormethod.cpp \
	rubyclassdeclarationblock.cpp rubycodeclassfielddeclarationblock.cpp \
	rubycodegenerationpolicy.cpp rubycodegenerationpolicypage.cpp \
	 \
	simplecodegenerator.cpp \
	adawriter.cpp aswriter.cpp cppwriter.cpp csharpwriter.cpp dwriter.cpp javawriter.cpp jswriter.cpp \
	idlwriter.cpp pascalwriter.cpp perlwriter.cpp php5writer.cpp phpwriter.cpp \
	pythonwriter.cpp rubywriter.cpp sqlwriter.cpp tclwriter.cpp xmlschemawriter.cpp \
	xmlelementcodeblock.cpp xmlcodecomment.cpp \
	codegen_utils.cpp javacodegenerationformbase.cpp cppcodegenerationformbase.cpp rubycodegenerationformbase.cpp

libcodegenerator_la_COMPILE_FIRST = ../dialogs/codegenerationpolicybase.h
KDE_OPTIONS = nofinal
#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  umbrello/umbrello/codegenerators/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --foreign  umbrello/umbrello/codegenerators/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  umbrello/umbrello/codegenerators/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  umbrello/umbrello/codegenerators/Makefile
	cd $(top_srcdir) && perl admin/am_edit umbrello/umbrello/codegenerators/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libcodegenerator.la: $(libcodegenerator_la_OBJECTS) $(libcodegenerator_la_DEPENDENCIES) 
	$(libcodegenerator_la_LINK)  $(libcodegenerator_la_OBJECTS) $(libcodegenerator_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/adawriter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aswriter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/classifierinfo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codegen_utils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codegenfactory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cppcodeclassfield.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cppcodecomment.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cppcodedocumentation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cppcodegenerationform.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cppcodegenerationpolicy.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cppcodegenerationpolicypage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cppcodegenerator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cppheaderclassdeclarationblock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cppheadercodeaccessormethod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cppheadercodeclassfielddeclarationblock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cppheadercodedocument.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cppheadercodeoperation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cppmakecodedocument.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cppsourcecodeaccessormethod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cppsourcecodeclassfielddeclarationblock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cppsourcecodedocument.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cppsourcecodeoperation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cppwriter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/csharpwriter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwriter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/idlwriter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/javaantcodedocument.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/javaclassdeclarationblock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/javaclassifiercodedocument.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/javacodeaccessormethod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/javacodeclassfield.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/javacodeclassfielddeclarationblock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/javacodecomment.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/javacodedocumentation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/javacodegenerationpolicy.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/javacodegenerationpolicypage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/javacodegenerator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/javacodeoperation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/javawriter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jswriter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pascalwriter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/perlwriter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/php5writer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/phpwriter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pythonwriter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rubyclassdeclarationblock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rubyclassifiercodedocument.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rubycodeaccessormethod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rubycodeclassfield.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rubycodeclassfielddeclarationblock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rubycodecomment.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rubycodedocumentation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rubycodegenerationpolicy.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rubycodegenerationpolicypage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rubycodegenerator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rubycodeoperation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rubywriter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simplecodegenerator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sqlwriter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tclwriter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xmlcodecomment.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xmlelementcodeblock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xmlschemawriter.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
#>- 	mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-ui clean-bcheck  clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
cppheaderclassdeclarationblock.moc: $(srcdir)/cppheaderclassdeclarationblock.h
	$(MOC) $(srcdir)/cppheaderclassdeclarationblock.h -o cppheaderclassdeclarationblock.moc

#>+ 2
mocs: cppheaderclassdeclarationblock.moc

#>+ 3
javacodeclassfielddeclarationblock.moc: $(srcdir)/javacodeclassfielddeclarationblock.h
	$(MOC) $(srcdir)/javacodeclassfielddeclarationblock.h -o javacodeclassfielddeclarationblock.moc

#>+ 2
mocs: javacodeclassfielddeclarationblock.moc

#>+ 3
csharpwriter.moc: $(srcdir)/csharpwriter.h
	$(MOC) $(srcdir)/csharpwriter.h -o csharpwriter.moc

#>+ 2
mocs: csharpwriter.moc

#>+ 3
rubycodedocumentation.moc: $(srcdir)/rubycodedocumentation.h
	$(MOC) $(srcdir)/rubycodedocumentation.h -o rubycodedocumentation.moc

#>+ 2
mocs: rubycodedocumentation.moc

#>+ 3
javaantcodedocument.moc: $(srcdir)/javaantcodedocument.h
	$(MOC) $(srcdir)/javaantcodedocument.h -o javaantcodedocument.moc

#>+ 2
mocs: javaantcodedocument.moc

#>+ 3
rubycodegenerator.moc: $(srcdir)/rubycodegenerator.h
	$(MOC) $(srcdir)/rubycodegenerator.h -o rubycodegenerator.moc

#>+ 2
mocs: rubycodegenerator.moc

#>+ 3
javacodeaccessormethod.moc: $(srcdir)/javacodeaccessormethod.h
	$(MOC) $(srcdir)/javacodeaccessormethod.h -o javacodeaccessormethod.moc

#>+ 2
mocs: javacodeaccessormethod.moc

#>+ 3
php5writer.moc: $(srcdir)/php5writer.h
	$(MOC) $(srcdir)/php5writer.h -o php5writer.moc

#>+ 2
mocs: php5writer.moc

#>+ 3
javacodeclassfield.moc: $(srcdir)/javacodeclassfield.h
	$(MOC) $(srcdir)/javacodeclassfield.h -o javacodeclassfield.moc

#>+ 2
mocs: javacodeclassfield.moc

#>+ 3
rubycodegenerationpolicypage.moc: $(srcdir)/rubycodegenerationpolicypage.h
	$(MOC) $(srcdir)/rubycodegenerationpolicypage.h -o rubycodegenerationpolicypage.moc

#>+ 2
mocs: rubycodegenerationpolicypage.moc

#>+ 3
xmlschemawriter.moc: $(srcdir)/xmlschemawriter.h
	$(MOC) $(srcdir)/xmlschemawriter.h -o xmlschemawriter.moc

#>+ 2
mocs: xmlschemawriter.moc

#>+ 3
cppcodegenerationpolicypage.moc: $(srcdir)/cppcodegenerationpolicypage.h
	$(MOC) $(srcdir)/cppcodegenerationpolicypage.h -o cppcodegenerationpolicypage.moc

#>+ 2
mocs: cppcodegenerationpolicypage.moc

#>+ 3
rubycodegenerationpolicy.moc: $(srcdir)/rubycodegenerationpolicy.h
	$(MOC) $(srcdir)/rubycodegenerationpolicy.h -o rubycodegenerationpolicy.moc

#>+ 2
mocs: rubycodegenerationpolicy.moc

#>+ 3
javacodecomment.moc: $(srcdir)/javacodecomment.h
	$(MOC) $(srcdir)/javacodecomment.h -o javacodecomment.moc

#>+ 2
mocs: javacodecomment.moc

#>+ 3
javaclassdeclarationblock.moc: $(srcdir)/javaclassdeclarationblock.h
	$(MOC) $(srcdir)/javaclassdeclarationblock.h -o javaclassdeclarationblock.moc

#>+ 2
mocs: javaclassdeclarationblock.moc

#>+ 3
cppcodegenerator.moc: $(srcdir)/cppcodegenerator.h
	$(MOC) $(srcdir)/cppcodegenerator.h -o cppcodegenerator.moc

#>+ 2
mocs: cppcodegenerator.moc

#>+ 3
aswriter.moc: $(srcdir)/aswriter.h
	$(MOC) $(srcdir)/aswriter.h -o aswriter.moc

#>+ 2
mocs: aswriter.moc

#>+ 3
rubyclassifiercodedocument.moc: $(srcdir)/rubyclassifiercodedocument.h
	$(MOC) $(srcdir)/rubyclassifiercodedocument.h -o rubyclassifiercodedocument.moc

#>+ 2
mocs: rubyclassifiercodedocument.moc

#>+ 3
cppsourcecodedocument.moc: $(srcdir)/cppsourcecodedocument.h
	$(MOC) $(srcdir)/cppsourcecodedocument.h -o cppsourcecodedocument.moc

#>+ 2
mocs: cppsourcecodedocument.moc

#>+ 3
xmlcodecomment.moc: $(srcdir)/xmlcodecomment.h
	$(MOC) $(srcdir)/xmlcodecomment.h -o xmlcodecomment.moc

#>+ 2
mocs: xmlcodecomment.moc

#>+ 3
javacodegenerationpolicy.moc: $(srcdir)/javacodegenerationpolicy.h
	$(MOC) $(srcdir)/javacodegenerationpolicy.h -o javacodegenerationpolicy.moc

#>+ 2
mocs: javacodegenerationpolicy.moc

#>+ 3
rubycodeclassfield.moc: $(srcdir)/rubycodeclassfield.h
	$(MOC) $(srcdir)/rubycodeclassfield.h -o rubycodeclassfield.moc

#>+ 2
mocs: rubycodeclassfield.moc

#>+ 3
cppcodegenerationpolicy.moc: $(srcdir)/cppcodegenerationpolicy.h
	$(MOC) $(srcdir)/cppcodegenerationpolicy.h -o cppcodegenerationpolicy.moc

#>+ 2
mocs: cppcodegenerationpolicy.moc

#>+ 3
simplecodegenerator.moc: $(srcdir)/simplecodegenerator.h
	$(MOC) $(srcdir)/simplecodegenerator.h -o simplecodegenerator.moc

#>+ 2
mocs: simplecodegenerator.moc

#>+ 3
sqlwriter.moc: $(srcdir)/sqlwriter.h
	$(MOC) $(srcdir)/sqlwriter.h -o sqlwriter.moc

#>+ 2
mocs: sqlwriter.moc

#>+ 3
cppheadercodeaccessormethod.moc: $(srcdir)/cppheadercodeaccessormethod.h
	$(MOC) $(srcdir)/cppheadercodeaccessormethod.h -o cppheadercodeaccessormethod.moc

#>+ 2
mocs: cppheadercodeaccessormethod.moc

#>+ 3
xmlelementcodeblock.moc: $(srcdir)/xmlelementcodeblock.h
	$(MOC) $(srcdir)/xmlelementcodeblock.h -o xmlelementcodeblock.moc

#>+ 2
mocs: xmlelementcodeblock.moc

#>+ 3
jswriter.moc: $(srcdir)/jswriter.h
	$(MOC) $(srcdir)/jswriter.h -o jswriter.moc

#>+ 2
mocs: jswriter.moc

#>+ 3
rubycodecomment.moc: $(srcdir)/rubycodecomment.h
	$(MOC) $(srcdir)/rubycodecomment.h -o rubycodecomment.moc

#>+ 2
mocs: rubycodecomment.moc

#>+ 3
javacodegenerator.moc: $(srcdir)/javacodegenerator.h
	$(MOC) $(srcdir)/javacodegenerator.h -o javacodegenerator.moc

#>+ 2
mocs: javacodegenerator.moc

#>+ 3
javacodegenerationpolicypage.moc: $(srcdir)/javacodegenerationpolicypage.h
	$(MOC) $(srcdir)/javacodegenerationpolicypage.h -o javacodegenerationpolicypage.moc

#>+ 2
mocs: javacodegenerationpolicypage.moc

#>+ 3
rubywriter.moc: $(srcdir)/rubywriter.h
	$(MOC) $(srcdir)/rubywriter.h -o rubywriter.moc

#>+ 2
mocs: rubywriter.moc

#>+ 3
cppcodecomment.moc: $(srcdir)/cppcodecomment.h
	$(MOC) $(srcdir)/cppcodecomment.h -o cppcodecomment.moc

#>+ 2
mocs: cppcodecomment.moc

#>+ 3
cppmakecodedocument.moc: $(srcdir)/cppmakecodedocument.h
	$(MOC) $(srcdir)/cppmakecodedocument.h -o cppmakecodedocument.moc

#>+ 2
mocs: cppmakecodedocument.moc

#>+ 3
javacodedocumentation.moc: $(srcdir)/javacodedocumentation.h
	$(MOC) $(srcdir)/javacodedocumentation.h -o javacodedocumentation.moc

#>+ 2
mocs: javacodedocumentation.moc

#>+ 3
javacodeoperation.moc: $(srcdir)/javacodeoperation.h
	$(MOC) $(srcdir)/javacodeoperation.h -o javacodeoperation.moc

#>+ 2
mocs: javacodeoperation.moc

#>+ 3
pythonwriter.moc: $(srcdir)/pythonwriter.h
	$(MOC) $(srcdir)/pythonwriter.h -o pythonwriter.moc

#>+ 2
mocs: pythonwriter.moc

#>+ 3
cppcodeclassfield.moc: $(srcdir)/cppcodeclassfield.h
	$(MOC) $(srcdir)/cppcodeclassfield.h -o cppcodeclassfield.moc

#>+ 2
mocs: cppcodeclassfield.moc

#>+ 3
rubycodeoperation.moc: $(srcdir)/rubycodeoperation.h
	$(MOC) $(srcdir)/rubycodeoperation.h -o rubycodeoperation.moc

#>+ 2
mocs: rubycodeoperation.moc

#>+ 3
rubycodeaccessormethod.moc: $(srcdir)/rubycodeaccessormethod.h
	$(MOC) $(srcdir)/rubycodeaccessormethod.h -o rubycodeaccessormethod.moc

#>+ 2
mocs: rubycodeaccessormethod.moc

#>+ 3
cppsourcecodeaccessormethod.moc: $(srcdir)/cppsourcecodeaccessormethod.h
	$(MOC) $(srcdir)/cppsourcecodeaccessormethod.h -o cppsourcecodeaccessormethod.moc

#>+ 2
mocs: cppsourcecodeaccessormethod.moc

#>+ 3
pascalwriter.moc: $(srcdir)/pascalwriter.h
	$(MOC) $(srcdir)/pascalwriter.h -o pascalwriter.moc

#>+ 2
mocs: pascalwriter.moc

#>+ 3
rubycodeclassfielddeclarationblock.moc: $(srcdir)/rubycodeclassfielddeclarationblock.h
	$(MOC) $(srcdir)/rubycodeclassfielddeclarationblock.h -o rubycodeclassfielddeclarationblock.moc

#>+ 2
mocs: rubycodeclassfielddeclarationblock.moc

#>+ 3
cppheadercodeclassfielddeclarationblock.moc: $(srcdir)/cppheadercodeclassfielddeclarationblock.h
	$(MOC) $(srcdir)/cppheadercodeclassfielddeclarationblock.h -o cppheadercodeclassfielddeclarationblock.moc

#>+ 2
mocs: cppheadercodeclassfielddeclarationblock.moc

#>+ 3
cppsourcecodeclassfielddeclarationblock.moc: $(srcdir)/cppsourcecodeclassfielddeclarationblock.h
	$(MOC) $(srcdir)/cppsourcecodeclassfielddeclarationblock.h -o cppsourcecodeclassfielddeclarationblock.moc

#>+ 2
mocs: cppsourcecodeclassfielddeclarationblock.moc

#>+ 3
cppheadercodeoperation.moc: $(srcdir)/cppheadercodeoperation.h
	$(MOC) $(srcdir)/cppheadercodeoperation.h -o cppheadercodeoperation.moc

#>+ 2
mocs: cppheadercodeoperation.moc

#>+ 3
adawriter.moc: $(srcdir)/adawriter.h
	$(MOC) $(srcdir)/adawriter.h -o adawriter.moc

#>+ 2
mocs: adawriter.moc

#>+ 3
cppsourcecodeoperation.moc: $(srcdir)/cppsourcecodeoperation.h
	$(MOC) $(srcdir)/cppsourcecodeoperation.h -o cppsourcecodeoperation.moc

#>+ 2
mocs: cppsourcecodeoperation.moc

#>+ 3
cppcodegenerationform.moc: $(srcdir)/cppcodegenerationform.h
	$(MOC) $(srcdir)/cppcodegenerationform.h -o cppcodegenerationform.moc

#>+ 2
mocs: cppcodegenerationform.moc

#>+ 3
javaclassifiercodedocument.moc: $(srcdir)/javaclassifiercodedocument.h
	$(MOC) $(srcdir)/javaclassifiercodedocument.h -o javaclassifiercodedocument.moc

#>+ 2
mocs: javaclassifiercodedocument.moc

#>+ 3
rubyclassdeclarationblock.moc: $(srcdir)/rubyclassdeclarationblock.h
	$(MOC) $(srcdir)/rubyclassdeclarationblock.h -o rubyclassdeclarationblock.moc

#>+ 2
mocs: rubyclassdeclarationblock.moc

#>+ 3
perlwriter.moc: $(srcdir)/perlwriter.h
	$(MOC) $(srcdir)/perlwriter.h -o perlwriter.moc

#>+ 2
mocs: perlwriter.moc

#>+ 3
cppheadercodedocument.moc: $(srcdir)/cppheadercodedocument.h
	$(MOC) $(srcdir)/cppheadercodedocument.h -o cppheadercodedocument.moc

#>+ 2
mocs: cppheadercodedocument.moc

#>+ 3
phpwriter.moc: $(srcdir)/phpwriter.h
	$(MOC) $(srcdir)/phpwriter.h -o phpwriter.moc

#>+ 2
mocs: phpwriter.moc

#>+ 3
clean-metasources:
	-rm -f  cppheaderclassdeclarationblock.moc javacodeclassfielddeclarationblock.moc csharpwriter.moc rubycodedocumentation.moc javaantcodedocument.moc rubycodegenerator.moc javacodeaccessormethod.moc php5writer.moc javacodeclassfield.moc rubycodegenerationpolicypage.moc xmlschemawriter.moc cppcodegenerationpolicypage.moc rubycodegenerationpolicy.moc javacodecomment.moc javaclassdeclarationblock.moc cppcodegenerator.moc aswriter.moc rubyclassifiercodedocument.moc cppsourcecodedocument.moc xmlcodecomment.moc javacodegenerationpolicy.moc rubycodeclassfield.moc cppcodegenerationpolicy.moc simplecodegenerator.moc sqlwriter.moc cppheadercodeaccessormethod.moc xmlelementcodeblock.moc jswriter.moc rubycodecomment.moc javacodegenerator.moc javacodegenerationpolicypage.moc rubywriter.moc cppcodecomment.moc cppmakecodedocument.moc javacodedocumentation.moc javacodeoperation.moc pythonwriter.moc cppcodeclassfield.moc rubycodeoperation.moc rubycodeaccessormethod.moc cppsourcecodeaccessormethod.moc pascalwriter.moc rubycodeclassfielddeclarationblock.moc cppheadercodeclassfielddeclarationblock.moc cppsourcecodeclassfielddeclarationblock.moc cppheadercodeoperation.moc adawriter.moc cppsourcecodeoperation.moc cppcodegenerationform.moc javaclassifiercodedocument.moc rubyclassdeclarationblock.moc perlwriter.moc cppheadercodedocument.moc phpwriter.moc

#>+ 2
KDE_DIST=rubycodeclassfielddeclarationblock.h adawriter.h javacodegenerationformbase.ui tclwriter.h xmlcodecomment.h aswriter.h javaclassifiercodedocument.h cppcodegenerationformbase.ui cppsourcecodeaccessormethod.h dwriter.h Makefile.in rubycodegenerationformbase.ui codegenpolicyext.h rubycodegenerationpolicy.h pascalwriter.h javacodeclassfield.h javacodeaccessormethod.h javawriter.h rubycodedocumentation.h codegen_utils.h xmlelementcodeblock.h rubywriter.h classifierinfo.h rubycodeclassfield.h cppheadercodedocument.h javacodedocumentation.h jswriter.h javacodeclassfielddeclarationblock.h cppcodeclassfield.h cppsourcecodeclassfielddeclarationblock.h javaclassdeclarationblock.h codegenfactory.h rubycodecomment.h rubycodeaccessormethod.h perlwriter.h cppcodegenerationform.h cppcodegenerator.h simplecodegenerator.h cppwriter.h cppmakecodedocument.h rubyclassifiercodedocument.h cppsourcecodeoperation.h cppheadercodeoperation.h xmlschemawriter.h cppheaderclassdeclarationblock.h cppheadercodeclassfielddeclarationblock.h javacodegenerationpolicypage.h cppcodegenerationpolicypage.h javaantcodedocument.h phpwriter.h javacodegenerator.h javacodecomment.h cppcodecomment.h sqlwriter.h cppsourcecodedocument.h cppheadercodeaccessormethod.h javacodegenerationpolicy.h idlwriter.h cppcodegenerationpolicy.h pythonwriter.h cppcodedocumentation.h rubyclassdeclarationblock.h rubycodegenerator.h csharpwriter.h rubycodegenerationpolicypage.h php5writer.h rubycodeoperation.h Makefile.am javacodeoperation.h 

#>+ 6
clean-ui:
	-rm -f \
	javacodegenerationformbase.cpp javacodegenerationformbase.h javacodegenerationformbase.moc \
	cppcodegenerationformbase.cpp cppcodegenerationformbase.h cppcodegenerationformbase.moc \
	rubycodegenerationformbase.cpp rubycodegenerationformbase.h rubycodegenerationformbase.moc 

#>+ 2
docs-am:

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  umbrello/umbrello/codegenerators/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  umbrello/umbrello/codegenerators/Makefile
	cd $(top_srcdir) && perl admin/am_edit umbrello/umbrello/codegenerators/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 3
final:
	$(MAKE) all-am

#>+ 3
final-install:
	$(MAKE) install-am

#>+ 3
no-final:
	$(MAKE) all-am

#>+ 3
no-final-install:
	$(MAKE) install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 177
$(srcdir)/phpwriter.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
$(srcdir)/cppsourcecodeaccessormethod.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
csharpwriter.lo: csharpwriter.moc 
$(srcdir)/javacodeoperation.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
adawriter.o: adawriter.moc 
$(srcdir)/javaclassifiercodedocument.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
$(srcdir)/codegen_utils.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
javacodedocumentation.lo: javacodedocumentation.moc 
rubywriter.lo: rubywriter.moc 
cppheadercodeoperation.lo: cppheadercodeoperation.moc 
pascalwriter.lo: pascalwriter.moc 
cppcodegenerationpolicy.o: cppcodegenerationpolicy.moc 
$(srcdir)/cppcodeclassfield.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
$(srcdir)/simplecodegenerator.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
cppcodeclassfield.o: cppcodeclassfield.moc 
cppheadercodeaccessormethod.o: cppheadercodeaccessormethod.moc 
sqlwriter.o: sqlwriter.moc 
javacodegenerationpolicy.lo: javacodegenerationpolicy.moc 
javacodeclassfielddeclarationblock.o: javacodeclassfielddeclarationblock.moc 
nmcheck-am: nmcheck
rubycodegenerationpolicypage.lo: rubycodegenerationpolicypage.moc 
cppheadercodeoperation.o: cppheadercodeoperation.moc 
javacodedocumentation.o: javacodedocumentation.moc 
$(srcdir)/rubyclassifiercodedocument.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
perlwriter.o: perlwriter.moc 
rubycodedocumentation.o: rubycodedocumentation.moc 
javacodeclassfield.lo: javacodeclassfield.moc 
rubycodecomment.o: rubycodecomment.moc 
$(srcdir)/rubywriter.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
$(srcdir)/javacodedocumentation.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
cppcodegenerationpolicy.lo: cppcodegenerationpolicy.moc 
rubyclassdeclarationblock.o: rubyclassdeclarationblock.moc 
cppheadercodeclassfielddeclarationblock.lo: cppheadercodeclassfielddeclarationblock.moc 
$(srcdir)/cppsourcecodedocument.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
$(srcdir)/rubycodeclassfielddeclarationblock.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
cppcodegenerator.lo: cppcodegenerator.moc 
javaclassdeclarationblock.o: javaclassdeclarationblock.moc 
$(srcdir)/rubyclassdeclarationblock.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
pythonwriter.o: pythonwriter.moc 
$(srcdir)/tclwriter.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
$(srcdir)/javacodecomment.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
cppheadercodedocument.lo: cppheadercodedocument.moc 
rubycodeclassfielddeclarationblock.lo: rubycodeclassfielddeclarationblock.moc 
cppsourcecodeaccessormethod.o: cppsourcecodeaccessormethod.moc 
$(srcdir)/cppheaderclassdeclarationblock.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
javacodegenerationpolicypage.o: javacodegenerationpolicypage.moc 
$(srcdir)/rubycodedocumentation.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
$(srcdir)/php5writer.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
rubycodeoperation.lo: rubycodeoperation.moc 
aswriter.lo: aswriter.moc 
cppsourcecodeaccessormethod.lo: cppsourcecodeaccessormethod.moc 
simplecodegenerator.o: simplecodegenerator.moc 
$(srcdir)/cppcodegenerator.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
javacodegenerator.o: javacodegenerator.moc 
cppcodegenerationformbase.cpp: ../dialogs/codegenerationpolicybase.h 
javaclassifiercodedocument.o: javaclassifiercodedocument.moc 
javacodeoperation.o: javacodeoperation.moc 
adawriter.lo: adawriter.moc 
xmlcodecomment.lo: xmlcodecomment.moc 
xmlelementcodeblock.lo: xmlelementcodeblock.moc 
javacodecomment.lo: javacodecomment.moc 
xmlelementcodeblock.o: xmlelementcodeblock.moc 
cppcodecomment.lo: cppcodecomment.moc 
$(srcdir)/rubycodeclassfield.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
cppsourcecodeoperation.o: cppsourcecodeoperation.moc 
$(srcdir)/javacodeclassfielddeclarationblock.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
rubyclassdeclarationblock.lo: rubyclassdeclarationblock.moc 
$(srcdir)/cppmakecodedocument.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
$(srcdir)/rubycodegenerator.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
phpwriter.lo: phpwriter.moc 
$(srcdir)/javacodeaccessormethod.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
rubycodegenerationpolicy.lo: rubycodegenerationpolicy.moc 
cppheaderclassdeclarationblock.o: cppheaderclassdeclarationblock.moc 
javaclassdeclarationblock.lo: javaclassdeclarationblock.moc 
javaclassifiercodedocument.lo: javaclassifiercodedocument.moc 
php5writer.o: php5writer.moc 
$(srcdir)/classifierinfo.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
$(srcdir)/javawriter.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
rubyclassifiercodedocument.o: rubyclassifiercodedocument.moc 
xmlcodecomment.o: xmlcodecomment.moc 
$(srcdir)/xmlschemawriter.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
$(srcdir)/cppheadercodeclassfielddeclarationblock.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
php5writer.lo: php5writer.moc 
$(srcdir)/aswriter.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
$(srcdir)/rubycodeoperation.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
cppmakecodedocument.lo: cppmakecodedocument.moc 
rubycodegenerationformbase.cpp: ../dialogs/codegenerationpolicybase.h 
pascalwriter.o: pascalwriter.moc 
cppheadercodeaccessormethod.lo: cppheadercodeaccessormethod.moc 
rubycodeaccessormethod.lo: rubycodeaccessormethod.moc 
cppheaderclassdeclarationblock.lo: cppheaderclassdeclarationblock.moc 
$(srcdir)/rubycodeaccessormethod.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
$(srcdir)/cppheadercodeoperation.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
rubycodecomment.lo: rubycodecomment.moc 
cppheadercodeclassfielddeclarationblock.o: cppheadercodeclassfielddeclarationblock.moc 
$(srcdir)/cppcodegenerationpolicy.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
rubycodeclassfield.lo: rubycodeclassfield.moc 
cppsourcecodeclassfielddeclarationblock.lo: cppsourcecodeclassfielddeclarationblock.moc 
pythonwriter.lo: pythonwriter.moc 
sqlwriter.lo: sqlwriter.moc 
javaantcodedocument.lo: javaantcodedocument.moc 
cppmakecodedocument.o: cppmakecodedocument.moc 
$(srcdir)/javaantcodedocument.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
rubycodeaccessormethod.o: rubycodeaccessormethod.moc 
$(srcdir)/rubycodegenerationpolicy.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
rubycodegenerationpolicy.o: rubycodegenerationpolicy.moc 
cppcodegenerationform.lo: cppcodegenerationform.moc 
cppcodegenerator.o: cppcodegenerator.moc 
javacodegenerationpolicypage.lo: javacodegenerationpolicypage.moc 
rubycodegenerationpolicypage.o: rubycodegenerationpolicypage.moc 
rubycodedocumentation.lo: rubycodedocumentation.moc 
cppsourcecodeoperation.lo: cppsourcecodeoperation.moc 
$(srcdir)/idlwriter.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
javacodeaccessormethod.lo: javacodeaccessormethod.moc 
cppcodegenerationform.o: cppcodegenerationform.moc 
csharpwriter.o: csharpwriter.moc 
jswriter.lo: jswriter.moc 
javacodeoperation.lo: javacodeoperation.moc 
javacodegenerationpolicy.o: javacodegenerationpolicy.moc 
perlwriter.lo: perlwriter.moc 
$(srcdir)/cppcodegenerationform.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
cppheadercodedocument.o: cppheadercodedocument.moc 
$(srcdir)/cppsourcecodeoperation.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
$(srcdir)/javaclassdeclarationblock.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
rubycodeoperation.o: rubycodeoperation.moc 
$(srcdir)/dwriter.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
$(srcdir)/xmlcodecomment.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
aswriter.o: aswriter.moc 
$(srcdir)/pascalwriter.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
simplecodegenerator.lo: simplecodegenerator.moc 
$(srcdir)/jswriter.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
$(srcdir)/javacodegenerationpolicypage.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
rubywriter.o: rubywriter.moc 
$(srcdir)/rubycodegenerationpolicypage.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
javacodeclassfield.o: javacodeclassfield.moc 
cppcodeclassfield.lo: cppcodeclassfield.moc 
$(srcdir)/adawriter.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
$(srcdir)/cppheadercodeaccessormethod.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
javaantcodedocument.o: javaantcodedocument.moc 
jswriter.o: jswriter.moc 
$(srcdir)/xmlelementcodeblock.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
javacodegenerator.lo: javacodegenerator.moc 
$(srcdir)/pythonwriter.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
javacodecomment.o: javacodecomment.moc 
xmlschemawriter.o: xmlschemawriter.moc 
$(srcdir)/cppwriter.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
rubyclassifiercodedocument.lo: rubyclassifiercodedocument.moc 
cppcodegenerationpolicypage.o: cppcodegenerationpolicypage.moc 
$(srcdir)/cppcodecomment.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
cppsourcecodedocument.o: cppsourcecodedocument.moc 
$(srcdir)/cppheadercodedocument.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
cppsourcecodedocument.lo: cppsourcecodedocument.moc 
$(srcdir)/cppsourcecodeclassfielddeclarationblock.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
javacodeclassfielddeclarationblock.lo: javacodeclassfielddeclarationblock.moc 
rubycodeclassfielddeclarationblock.o: rubycodeclassfielddeclarationblock.moc 
phpwriter.o: phpwriter.moc 
$(srcdir)/codegenfactory.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
rubycodegenerator.lo: rubycodegenerator.moc 
xmlschemawriter.lo: xmlschemawriter.moc 
$(srcdir)/csharpwriter.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
rubycodeclassfield.o: rubycodeclassfield.moc 
javacodeaccessormethod.o: javacodeaccessormethod.moc 
cppcodegenerationpolicypage.lo: cppcodegenerationpolicypage.moc 
$(srcdir)/cppcodedocumentation.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
rubycodegenerator.o: rubycodegenerator.moc 
$(srcdir)/rubycodecomment.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
$(srcdir)/javacodegenerator.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
nmcheck: 
$(srcdir)/cppcodegenerationpolicypage.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
$(srcdir)/sqlwriter.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
$(srcdir)/javacodegenerationpolicy.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
cppcodecomment.o: cppcodecomment.moc 
cppsourcecodeclassfielddeclarationblock.o: cppsourcecodeclassfielddeclarationblock.moc 
$(srcdir)/perlwriter.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
$(srcdir)/javacodeclassfield.cpp: javacodegenerationformbase.h cppcodegenerationformbase.h rubycodegenerationformbase.h ../dialogs/codegenerationpolicybase.h 
javacodegenerationformbase.cpp: ../dialogs/codegenerationpolicybase.h 

#>+ 45
rubycodegenerationformbase.cpp: $(srcdir)/rubycodegenerationformbase.ui rubycodegenerationformbase.h rubycodegenerationformbase.moc
	rm -f rubycodegenerationformbase.cpp
	echo '#include <kdialog.h>' > rubycodegenerationformbase.cpp
	echo '#include <klocale.h>' >> rubycodegenerationformbase.cpp
	$(UIC) -tr ${UIC_TR} -i rubycodegenerationformbase.h $(srcdir)/rubycodegenerationformbase.ui > rubycodegenerationformbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" rubycodegenerationformbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_rubycodegenerationformbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> rubycodegenerationformbase.cpp ;\
	rm -f rubycodegenerationformbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "rubycodegenerationformbase.moc"' >> rubycodegenerationformbase.cpp; else rm -f rubycodegenerationformbase.cpp ; exit $$ret ; fi

rubycodegenerationformbase.h: $(srcdir)/rubycodegenerationformbase.ui
	rm -rf rubycodegenerationformbase.h;
	$(UIC) $(srcdir)/rubycodegenerationformbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> rubycodegenerationformbase.h ;
rubycodegenerationformbase.moc: rubycodegenerationformbase.h
	$(MOC) rubycodegenerationformbase.h -o rubycodegenerationformbase.moc

cppcodegenerationformbase.cpp: $(srcdir)/cppcodegenerationformbase.ui cppcodegenerationformbase.h cppcodegenerationformbase.moc
	rm -f cppcodegenerationformbase.cpp
	echo '#include <kdialog.h>' > cppcodegenerationformbase.cpp
	echo '#include <klocale.h>' >> cppcodegenerationformbase.cpp
	$(UIC) -tr ${UIC_TR} -i cppcodegenerationformbase.h $(srcdir)/cppcodegenerationformbase.ui > cppcodegenerationformbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" cppcodegenerationformbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_cppcodegenerationformbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> cppcodegenerationformbase.cpp ;\
	rm -f cppcodegenerationformbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "cppcodegenerationformbase.moc"' >> cppcodegenerationformbase.cpp; else rm -f cppcodegenerationformbase.cpp ; exit $$ret ; fi

cppcodegenerationformbase.h: $(srcdir)/cppcodegenerationformbase.ui
	rm -rf cppcodegenerationformbase.h;
	$(UIC) $(srcdir)/cppcodegenerationformbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> cppcodegenerationformbase.h ;
cppcodegenerationformbase.moc: cppcodegenerationformbase.h
	$(MOC) cppcodegenerationformbase.h -o cppcodegenerationformbase.moc

javacodegenerationformbase.cpp: $(srcdir)/javacodegenerationformbase.ui javacodegenerationformbase.h javacodegenerationformbase.moc
	rm -f javacodegenerationformbase.cpp
	echo '#include <kdialog.h>' > javacodegenerationformbase.cpp
	echo '#include <klocale.h>' >> javacodegenerationformbase.cpp
	$(UIC) -tr ${UIC_TR} -i javacodegenerationformbase.h $(srcdir)/javacodegenerationformbase.ui > javacodegenerationformbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" javacodegenerationformbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_javacodegenerationformbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> javacodegenerationformbase.cpp ;\
	rm -f javacodegenerationformbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "javacodegenerationformbase.moc"' >> javacodegenerationformbase.cpp; else rm -f javacodegenerationformbase.cpp ; exit $$ret ; fi

javacodegenerationformbase.h: $(srcdir)/javacodegenerationformbase.ui
	rm -rf javacodegenerationformbase.h;
	$(UIC) $(srcdir)/javacodegenerationformbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> javacodegenerationformbase.h ;
javacodegenerationformbase.moc: javacodegenerationformbase.h
	$(MOC) javacodegenerationformbase.h -o javacodegenerationformbase.moc
