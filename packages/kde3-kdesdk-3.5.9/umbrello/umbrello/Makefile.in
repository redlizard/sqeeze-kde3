# Makefile.in generated by automake 1.10.1 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = umbrello$(EXEEXT)
subdir = umbrello/umbrello
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(appdir)" \
	"$(DESTDIR)$(mimedir)" "$(DESTDIR)$(xdg_appsdir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_umbrello_OBJECTS = activitywidget.$(OBJEXT) actor.$(OBJEXT) \
	actorwidget.$(OBJEXT) aligntoolbar.$(OBJEXT) \
	artifact.$(OBJEXT) artifactwidget.$(OBJEXT) \
	association.$(OBJEXT) associationwidget.$(OBJEXT) \
	assocrules.$(OBJEXT) attribute.$(OBJEXT) boxwidget.$(OBJEXT) \
	classifier.$(OBJEXT) classifiercodedocument.$(OBJEXT) \
	classifierlistitem.$(OBJEXT) classifierwidget.$(OBJEXT) \
	cmdlineexportallviewsevent.$(OBJEXT) \
	codeaccessormethod.$(OBJEXT) codeblock.$(OBJEXT) \
	codeblockwithcomments.$(OBJEXT) codeclassfield.$(OBJEXT) \
	codeclassfielddeclarationblock.$(OBJEXT) codecomment.$(OBJEXT) \
	codedocument.$(OBJEXT) codegenerationpolicy.$(OBJEXT) \
	codegenerator.$(OBJEXT) codegenobjectwithtextblocks.$(OBJEXT) \
	codemethodblock.$(OBJEXT) codeoperation.$(OBJEXT) \
	codeparameter.$(OBJEXT) component.$(OBJEXT) \
	componentwidget.$(OBJEXT) configurable.$(OBJEXT) \
	datatypewidget.$(OBJEXT) dialog_utils.$(OBJEXT) \
	docwindow.$(OBJEXT) entity.$(OBJEXT) entityattribute.$(OBJEXT) \
	entitywidget.$(OBJEXT) enum.$(OBJEXT) enumliteral.$(OBJEXT) \
	enumwidget.$(OBJEXT) floatingtextwidget.$(OBJEXT) \
	floatingtextwidgetcontroller.$(OBJEXT) folder.$(OBJEXT) \
	forkjoinwidget.$(OBJEXT) kplayerslideraction.$(OBJEXT) \
	hierarchicalcodeblock.$(OBJEXT) import_rose.$(OBJEXT) \
	kstartuplogo.$(OBJEXT) linepath.$(OBJEXT) linkwidget.$(OBJEXT) \
	listpopupmenu.$(OBJEXT) main.$(OBJEXT) messagewidget.$(OBJEXT) \
	messagewidgetcontroller.$(OBJEXT) model_utils.$(OBJEXT) \
	node.$(OBJEXT) nodewidget.$(OBJEXT) notewidget.$(OBJEXT) \
	notewidgetcontroller.$(OBJEXT) objectwidget.$(OBJEXT) \
	objectwidgetcontroller.$(OBJEXT) object_factory.$(OBJEXT) \
	operation.$(OBJEXT) optionstate.$(OBJEXT) \
	ownedcodeblock.$(OBJEXT) ownedhierarchicalcodeblock.$(OBJEXT) \
	package.$(OBJEXT) packagewidget.$(OBJEXT) petalnode.$(OBJEXT) \
	petaltree2uml.$(OBJEXT) plugin.$(OBJEXT) \
	pluginloader.$(OBJEXT) seqlinewidget.$(OBJEXT) \
	statewidget.$(OBJEXT) stereotype.$(OBJEXT) template.$(OBJEXT) \
	textblock.$(OBJEXT) toolbarstate.$(OBJEXT) \
	toolbarstatearrow.$(OBJEXT) toolbarstateassociation.$(OBJEXT) \
	toolbarstatefactory.$(OBJEXT) toolbarstatemessages.$(OBJEXT) \
	toolbarstateother.$(OBJEXT) toolbarstatepool.$(OBJEXT) \
	uml.$(OBJEXT) umlattributelist.$(OBJEXT) \
	umlentityattributelist.$(OBJEXT) umlcanvasobject.$(OBJEXT) \
	umlclassifierlistitemlist.$(OBJEXT) umldoc.$(OBJEXT) \
	umllistview.$(OBJEXT) umllistviewitem.$(OBJEXT) \
	umlnamespace.$(OBJEXT) umlobject.$(OBJEXT) \
	umlobjectlist.$(OBJEXT) umlrole.$(OBJEXT) umlview.$(OBJEXT) \
	umlviewcanvas.$(OBJEXT) umlviewimageexporter.$(OBJEXT) \
	umlviewimageexporterall.$(OBJEXT) \
	umlviewimageexportermodel.$(OBJEXT) umlwidget.$(OBJEXT) \
	umlwidgetcontroller.$(OBJEXT) uniqueid.$(OBJEXT) \
	usecase.$(OBJEXT) usecasewidget.$(OBJEXT) widgetbase.$(OBJEXT) \
	widget_factory.$(OBJEXT) widget_utils.$(OBJEXT) \
	worktoolbar.$(OBJEXT)
#>- umbrello_OBJECTS = $(am_umbrello_OBJECTS)
#>+ 55
umbrello_final_OBJECTS = umbrello.all_cpp.o 
umbrello_nofinal_OBJECTS = activitywidget.$(OBJEXT) actor.$(OBJEXT) \
	actorwidget.$(OBJEXT) aligntoolbar.$(OBJEXT) \
	artifact.$(OBJEXT) artifactwidget.$(OBJEXT) \
	association.$(OBJEXT) associationwidget.$(OBJEXT) \
	assocrules.$(OBJEXT) attribute.$(OBJEXT) boxwidget.$(OBJEXT) \
	classifier.$(OBJEXT) classifiercodedocument.$(OBJEXT) \
	classifierlistitem.$(OBJEXT) classifierwidget.$(OBJEXT) \
	cmdlineexportallviewsevent.$(OBJEXT) \
	codeaccessormethod.$(OBJEXT) codeblock.$(OBJEXT) \
	codeblockwithcomments.$(OBJEXT) codeclassfield.$(OBJEXT) \
	codeclassfielddeclarationblock.$(OBJEXT) codecomment.$(OBJEXT) \
	codedocument.$(OBJEXT) codegenerationpolicy.$(OBJEXT) \
	codegenerator.$(OBJEXT) codegenobjectwithtextblocks.$(OBJEXT) \
	codemethodblock.$(OBJEXT) codeoperation.$(OBJEXT) \
	codeparameter.$(OBJEXT) component.$(OBJEXT) \
	componentwidget.$(OBJEXT) configurable.$(OBJEXT) \
	datatypewidget.$(OBJEXT) dialog_utils.$(OBJEXT) \
	docwindow.$(OBJEXT) entity.$(OBJEXT) entityattribute.$(OBJEXT) \
	entitywidget.$(OBJEXT) enum.$(OBJEXT) enumliteral.$(OBJEXT) \
	enumwidget.$(OBJEXT) floatingtextwidget.$(OBJEXT) \
	floatingtextwidgetcontroller.$(OBJEXT) folder.$(OBJEXT) \
	forkjoinwidget.$(OBJEXT) kplayerslideraction.$(OBJEXT) \
	hierarchicalcodeblock.$(OBJEXT) import_rose.$(OBJEXT) \
	kstartuplogo.$(OBJEXT) linepath.$(OBJEXT) linkwidget.$(OBJEXT) \
	listpopupmenu.$(OBJEXT) main.$(OBJEXT) messagewidget.$(OBJEXT) \
	messagewidgetcontroller.$(OBJEXT) model_utils.$(OBJEXT) \
	node.$(OBJEXT) nodewidget.$(OBJEXT) notewidget.$(OBJEXT) \
	notewidgetcontroller.$(OBJEXT) objectwidget.$(OBJEXT) \
	objectwidgetcontroller.$(OBJEXT) object_factory.$(OBJEXT) \
	operation.$(OBJEXT) optionstate.$(OBJEXT) \
	ownedcodeblock.$(OBJEXT) ownedhierarchicalcodeblock.$(OBJEXT) \
	package.$(OBJEXT) packagewidget.$(OBJEXT) petalnode.$(OBJEXT) \
	petaltree2uml.$(OBJEXT) plugin.$(OBJEXT) \
	pluginloader.$(OBJEXT) seqlinewidget.$(OBJEXT) \
	statewidget.$(OBJEXT) stereotype.$(OBJEXT) template.$(OBJEXT) \
	textblock.$(OBJEXT) toolbarstate.$(OBJEXT) \
	toolbarstatearrow.$(OBJEXT) toolbarstateassociation.$(OBJEXT) \
	toolbarstatefactory.$(OBJEXT) toolbarstatemessages.$(OBJEXT) \
	toolbarstateother.$(OBJEXT) toolbarstatepool.$(OBJEXT) \
	uml.$(OBJEXT) umlattributelist.$(OBJEXT) \
	umlentityattributelist.$(OBJEXT) umlcanvasobject.$(OBJEXT) \
	umlclassifierlistitemlist.$(OBJEXT) umldoc.$(OBJEXT) \
	umllistview.$(OBJEXT) umllistviewitem.$(OBJEXT) \
	umlnamespace.$(OBJEXT) umlobject.$(OBJEXT) \
	umlobjectlist.$(OBJEXT) umlrole.$(OBJEXT) umlview.$(OBJEXT) \
	umlviewcanvas.$(OBJEXT) umlviewimageexporter.$(OBJEXT) \
	umlviewimageexporterall.$(OBJEXT) \
	umlviewimageexportermodel.$(OBJEXT) umlwidget.$(OBJEXT) \
	umlwidgetcontroller.$(OBJEXT) uniqueid.$(OBJEXT) \
	usecase.$(OBJEXT) usecasewidget.$(OBJEXT) widgetbase.$(OBJEXT) \
	widget_factory.$(OBJEXT) widget_utils.$(OBJEXT) \
	worktoolbar.$(OBJEXT)
@KDE_USE_FINAL_FALSE@umbrello_OBJECTS = $(umbrello_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@umbrello_OBJECTS = $(umbrello_final_OBJECTS)
am__DEPENDENCIES_1 =
umbrello_DEPENDENCIES = ./refactoring/librefactoring.la \
	./codeimport/libcodeimport.la \
	./codeimport/kdevcppparser/libkdevcppparser.la \
	./clipboard/libclipboard.la ./dialogs/libdialogs.la \
	./codegenerators/libcodegenerator.la \
	./docgenerators/libdocgenerators.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
#>- umbrello_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(umbrello_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
umbrello_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(umbrello_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(umbrello_SOURCES)
DIST_SOURCES = $(umbrello_SOURCES)
#>- RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
#>- 	html-recursive info-recursive install-data-recursive \
#>- 	install-dvi-recursive install-exec-recursive \
#>- 	install-html-recursive install-info-recursive \
#>- 	install-pdf-recursive install-ps-recursive install-recursive \
#>- 	installcheck-recursive installdirs-recursive pdf-recursive \
#>- 	ps-recursive uninstall-recursive
#>+ 7
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive nmcheck-recursive bcheck-recursive
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
appDATA_INSTALL = $(INSTALL_DATA)
mimeDATA_INSTALL = $(INSTALL_DATA)
xdg_appsDATA_INSTALL = $(INSTALL_DATA)
DATA = $(app_DATA) $(mime_DATA) $(xdg_apps_DATA)
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DBIV_INCLUDES = @DBIV_INCLUDES@
DBIV_LDFLAGS = @DBIV_LDFLAGS@
DBIV_NAME = @DBIV_NAME@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCACHEGRIND_VERSION = @KCACHEGRIND_VERSION@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
KMTRACE_LIBS = @KMTRACE_LIBS@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBXML_CFLAGS = @LIBXML_CFLAGS@
LIBXML_LIBS = @LIBXML_LIBS@
LIBXML_RPATH = @LIBXML_RPATH@
LIBXSLT_CFLAGS = @LIBXSLT_CFLAGS@
LIBXSLT_LIBS = @LIBXSLT_LIBS@
LIBXSLT_RPATH = @LIBXSLT_RPATH@
LIBZ = @LIBZ@
LIB_DBIV = @LIB_DBIV@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
SVNCONFIG = @SVNCONFIG@
SVNLD = @SVNLD@
SVN_CPPFLAGS = @SVN_CPPFLAGS@
SVN_INCLUDE = @SVN_INCLUDE@
SVN_LIB = @SVN_LIB@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@
umbrello_COMPILE_FIRST = version.h
umbrello_SOURCES = activitywidget.cpp \
actor.cpp \
actorwidget.cpp \
aligntoolbar.cpp \
artifact.cpp \
artifactwidget.cpp \
association.cpp \
associationwidget.cpp \
assocrules.cpp \
attribute.cpp \
boxwidget.cpp \
classifier.cpp \
classifiercodedocument.cpp \
classifierlistitem.cpp \
classifierwidget.cpp \
cmdlineexportallviewsevent.cpp \
codeaccessormethod.cpp \
codeblock.cpp \
codeblockwithcomments.cpp \
codeclassfield.cpp \
codeclassfielddeclarationblock.cpp \
codecomment.cpp \
codedocument.cpp \
codegenerationpolicy.cpp \
codegenerator.cpp \
codegenobjectwithtextblocks.cpp \
codemethodblock.cpp \
codeoperation.cpp \
codeparameter.cpp \
component.cpp \
componentwidget.cpp \
configurable.cpp \
datatypewidget.cpp \
dialog_utils.cpp \
docwindow.cpp \
entity.cpp \
entityattribute.cpp \
entitywidget.cpp \
enum.cpp \
enumliteral.cpp \
enumwidget.cpp \
floatingtextwidget.cpp \
floatingtextwidgetcontroller.cpp \
folder.cpp \
forkjoinwidget.cpp \
kplayerslideraction.cpp \
hierarchicalcodeblock.cpp \
import_rose.cpp \
kstartuplogo.cpp \
linepath.cpp \
linkwidget.cpp \
listpopupmenu.cpp \
main.cpp \
messagewidget.cpp \
messagewidgetcontroller.cpp \
model_utils.cpp \
node.cpp \
nodewidget.cpp \
notewidget.cpp \
notewidgetcontroller.cpp \
objectwidget.cpp \
objectwidgetcontroller.cpp \
object_factory.cpp \
operation.cpp \
optionstate.cpp \
ownedcodeblock.cpp \
ownedhierarchicalcodeblock.cpp \
package.cpp \
packagewidget.cpp \
petalnode.cpp \
petaltree2uml.cpp \
plugin.cpp \
pluginloader.cpp \
seqlinewidget.cpp \
statewidget.cpp \
stereotype.cpp \
template.cpp \
textblock.cpp \
toolbarstate.cpp \
toolbarstatearrow.cpp \
toolbarstateassociation.cpp \
toolbarstatefactory.cpp \
toolbarstatemessages.cpp \
toolbarstateother.cpp \
toolbarstatepool.cpp \
uml.cpp \
umlattributelist.cpp \
umlentityattributelist.cpp \
umlcanvasobject.cpp \
umlclassifierlistitemlist.cpp \
umldoc.cpp \
umllistview.cpp \
umllistviewitem.cpp \
umlnamespace.cpp \
umlobject.cpp \
umlobjectlist.cpp \
umlrole.cpp \
umlview.cpp \
umlviewcanvas.cpp \
umlviewimageexporter.cpp \
umlviewimageexporterall.cpp \
umlviewimageexportermodel.cpp \
umlwidget.cpp \
umlwidgetcontroller.cpp \
uniqueid.cpp \
usecase.cpp \
usecasewidget.cpp \
widgetbase.cpp \
widget_factory.cpp \
widget_utils.cpp \
worktoolbar.cpp


#umbrello_LDADD   = ./refactoring/librefactoring.la ./codeimport/libcodeimport.la ./codeimport/kdevcppparser/libkdevcppparser.la ./clipboard/libclipboard.la ./dialogs/libdialogs.la ./codegenerators/libcodegenerator.la $(AUTOLAYOUT_LIBS) $(LIB_KDEPRINT) $(LIB_KIO)
umbrello_LDADD = ./refactoring/librefactoring.la ./codeimport/libcodeimport.la ./codeimport/kdevcppparser/libkdevcppparser.la ./clipboard/libclipboard.la ./dialogs/libdialogs.la ./codegenerators/libcodegenerator.la ./docgenerators/libdocgenerators.la $(LIB_KDEPRINT) $(LIB_KIO)

# SUBDIRS = $(AUTOLAYOUT_DIR) codeimport dialogs clipboard pics codegenerators headings refactoring
SUBDIRS = codeimport dialogs docgenerators clipboard pics codegenerators headings refactoring
KDE_ICON = AUTO
appdir = $(kde_datadir)/umbrello
app_DATA = tips umbrelloui.rc
xdg_apps_DATA = umbrello.desktop
mimedir = $(kde_mimedir)/application
mime_DATA = x-umbrello.desktop

#INCLUDES= -Idialogs -Irefactoring $(all_includes) -I/usr/include/graphviz/
INCLUDES = -Idialogs -Irefactoring $(all_includes)
#>- METASOURCES = AUTO
umbrello_LDFLAGS = $(all_libraries) $(KDE_RPATH) -export-dynamic
CLEANFILES = version.h
noinst_HEADERS = version.h
#>- all: all-recursive
#>+ 1
all: docs-am  all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  umbrello/umbrello/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --foreign  umbrello/umbrello/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  umbrello/umbrello/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  umbrello/umbrello/Makefile
	cd $(top_srcdir) && perl admin/am_edit umbrello/umbrello/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
umbrello$(EXEEXT): $(umbrello_OBJECTS) $(umbrello_DEPENDENCIES) 
	@rm -f umbrello$(EXEEXT)
	$(umbrello_LINK) $(umbrello_OBJECTS) $(umbrello_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/activitywidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/actor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/actorwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aligntoolbar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/artifact.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/artifactwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/association.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/associationwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/assocrules.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/attribute.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/boxwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/classifier.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/classifiercodedocument.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/classifierlistitem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/classifierwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cmdlineexportallviewsevent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codeaccessormethod.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codeblock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codeblockwithcomments.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codeclassfield.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codeclassfielddeclarationblock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codecomment.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codedocument.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codegenerationpolicy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codegenerator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codegenobjectwithtextblocks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codemethodblock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codeoperation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codeparameter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/component.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/componentwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/configurable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/datatypewidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dialog_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/docwindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entity.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entityattribute.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entitywidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/enum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/enumliteral.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/enumwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/floatingtextwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/floatingtextwidgetcontroller.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/folder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/forkjoinwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hierarchicalcodeblock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/import_rose.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kplayerslideraction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kstartuplogo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/linepath.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/linkwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/listpopupmenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/messagewidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/messagewidgetcontroller.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/model_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/node.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nodewidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/notewidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/notewidgetcontroller.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/object_factory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/objectwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/objectwidgetcontroller.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/optionstate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ownedcodeblock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ownedhierarchicalcodeblock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/package.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/packagewidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/petalnode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/petaltree2uml.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pluginloader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/seqlinewidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/statewidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stereotype.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/template.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/textblock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/toolbarstate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/toolbarstatearrow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/toolbarstateassociation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/toolbarstatefactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/toolbarstatemessages.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/toolbarstateother.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/toolbarstatepool.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/uml.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umlattributelist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umlcanvasobject.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umlclassifierlistitemlist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umldoc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umlentityattributelist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umllistview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umllistviewitem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umlnamespace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umlobject.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umlobjectlist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umlrole.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umlview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umlviewcanvas.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umlviewimageexporter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umlviewimageexporterall.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umlviewimageexportermodel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umlwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umlwidgetcontroller.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/uniqueid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/usecase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/usecasewidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/widget_factory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/widget_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/widgetbase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/worktoolbar.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-appDATA: $(app_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(appdir)" || $(MKDIR_P) "$(DESTDIR)$(appdir)"
	@list='$(app_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(appDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(appdir)/$$f'"; \
	  $(appDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(appdir)/$$f"; \
	done

uninstall-appDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(app_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(appdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(appdir)/$$f"; \
	done
install-mimeDATA: $(mime_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(mimedir)" || $(MKDIR_P) "$(DESTDIR)$(mimedir)"
	@list='$(mime_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(mimeDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(mimedir)/$$f'"; \
	  $(mimeDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(mimedir)/$$f"; \
	done

uninstall-mimeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(mime_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(mimedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(mimedir)/$$f"; \
	done
install-xdg_appsDATA: $(xdg_apps_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xdg_appsdir)" || $(MKDIR_P) "$(DESTDIR)$(xdg_appsdir)"
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(xdg_appsDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  $(xdg_appsDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

uninstall-xdg_appsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(appdir)" "$(DESTDIR)$(mimedir)" "$(DESTDIR)$(xdg_appsdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

#>- install-data-am: install-appDATA install-mimeDATA install-xdg_appsDATA
#>+ 1
install-data-am: install-kde-icons  install-appDATA install-mimeDATA install-xdg_appsDATA

install-dvi: install-dvi-recursive

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

#>- uninstall-am: uninstall-appDATA uninstall-binPROGRAMS \
#>- 	uninstall-mimeDATA uninstall-xdg_appsDATA
#>+ 2
uninstall-am: uninstall-kde-icons  uninstall-appDATA uninstall-binPROGRAMS \
	uninstall-mimeDATA uninstall-xdg_appsDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-appDATA install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-mimeDATA \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip install-xdg_appsDATA installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am uninstall-appDATA \
	uninstall-binPROGRAMS uninstall-mimeDATA \
	uninstall-xdg_appsDATA


messages: rc.cpp
	$(PREPARETIPS) > tips.cpp
	$(EXTRACTRC) *.rc codegenerators/*.ui dialogs/*.ui > ./rc.cpp
	LIST=`find . -name \*.h -o -name \*.hh -o -name \*.H -o -name \*.hxx -o -name \*.hpp -o -name \*.cpp -o -name \*.cc -o -name \*.cxx -o -name \*.ecpp -o -name \*.C`; \
	if test -n "$$LIST"; then \
	 $(XGETTEXT) $$LIST -o $(podir)/umbrello.pot; \
	fi
	rm -f tips.cpp

version.h: $(top_srcdir)/umbrello/VERSION
	printf "#undef UMBRELLO_VERSION\n#define UMBRELLO_VERSION \"`cat $(top_srcdir)/umbrello/VERSION`\"\n" > version.h
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
hierarchicalcodeblock.moc: $(srcdir)/hierarchicalcodeblock.h
	$(MOC) $(srcdir)/hierarchicalcodeblock.h -o hierarchicalcodeblock.moc

#>+ 2
mocs: hierarchicalcodeblock.moc

#>+ 3
codeclassfield.moc: $(srcdir)/codeclassfield.h
	$(MOC) $(srcdir)/codeclassfield.h -o codeclassfield.moc

#>+ 2
mocs: codeclassfield.moc

#>+ 3
textblock.moc: $(srcdir)/textblock.h
	$(MOC) $(srcdir)/textblock.h -o textblock.moc

#>+ 2
mocs: textblock.moc

#>+ 3
kplayerslideraction.moc: $(srcdir)/kplayerslideraction.h
	$(MOC) $(srcdir)/kplayerslideraction.h -o kplayerslideraction.moc

#>+ 2
mocs: kplayerslideraction.moc

#>+ 3
aligntoolbar.moc: $(srcdir)/aligntoolbar.h
	$(MOC) $(srcdir)/aligntoolbar.h -o aligntoolbar.moc

#>+ 2
mocs: aligntoolbar.moc

#>+ 3
toolbarstatemessages.moc: $(srcdir)/toolbarstatemessages.h
	$(MOC) $(srcdir)/toolbarstatemessages.h -o toolbarstatemessages.moc

#>+ 2
mocs: toolbarstatemessages.moc

#>+ 3
codeaccessormethod.moc: $(srcdir)/codeaccessormethod.h
	$(MOC) $(srcdir)/codeaccessormethod.h -o codeaccessormethod.moc

#>+ 2
mocs: codeaccessormethod.moc

#>+ 3
attribute.moc: $(srcdir)/attribute.h
	$(MOC) $(srcdir)/attribute.h -o attribute.moc

#>+ 2
mocs: attribute.moc

#>+ 3
objectwidget.moc: $(srcdir)/objectwidget.h
	$(MOC) $(srcdir)/objectwidget.h -o objectwidget.moc

#>+ 2
mocs: objectwidget.moc

#>+ 3
pluginloader.moc: $(srcdir)/pluginloader.h
	$(MOC) $(srcdir)/pluginloader.h -o pluginloader.moc

#>+ 2
mocs: pluginloader.moc

#>+ 3
codeblock.moc: $(srcdir)/codeblock.h
	$(MOC) $(srcdir)/codeblock.h -o codeblock.moc

#>+ 2
mocs: codeblock.moc

#>+ 3
statewidget.moc: $(srcdir)/statewidget.h
	$(MOC) $(srcdir)/statewidget.h -o statewidget.moc

#>+ 2
mocs: statewidget.moc

#>+ 3
codeblockwithcomments.moc: $(srcdir)/codeblockwithcomments.h
	$(MOC) $(srcdir)/codeblockwithcomments.h -o codeblockwithcomments.moc

#>+ 2
mocs: codeblockwithcomments.moc

#>+ 3
linepath.moc: $(srcdir)/linepath.h
	$(MOC) $(srcdir)/linepath.h -o linepath.moc

#>+ 2
mocs: linepath.moc

#>+ 3
umlcanvasobject.moc: $(srcdir)/umlcanvasobject.h
	$(MOC) $(srcdir)/umlcanvasobject.h -o umlcanvasobject.moc

#>+ 2
mocs: umlcanvasobject.moc

#>+ 3
widgetbase.moc: $(srcdir)/widgetbase.h
	$(MOC) $(srcdir)/widgetbase.h -o widgetbase.moc

#>+ 2
mocs: widgetbase.moc

#>+ 3
toolbarstateother.moc: $(srcdir)/toolbarstateother.h
	$(MOC) $(srcdir)/toolbarstateother.h -o toolbarstateother.moc

#>+ 2
mocs: toolbarstateother.moc

#>+ 3
codeclassfielddeclarationblock.moc: $(srcdir)/codeclassfielddeclarationblock.h
	$(MOC) $(srcdir)/codeclassfielddeclarationblock.h -o codeclassfielddeclarationblock.moc

#>+ 2
mocs: codeclassfielddeclarationblock.moc

#>+ 3
codeoperation.moc: $(srcdir)/codeoperation.h
	$(MOC) $(srcdir)/codeoperation.h -o codeoperation.moc

#>+ 2
mocs: codeoperation.moc

#>+ 3
toolbarstate.moc: $(srcdir)/toolbarstate.h
	$(MOC) $(srcdir)/toolbarstate.h -o toolbarstate.moc

#>+ 2
mocs: toolbarstate.moc

#>+ 3
toolbarstateassociation.moc: $(srcdir)/toolbarstateassociation.h
	$(MOC) $(srcdir)/toolbarstateassociation.h -o toolbarstateassociation.moc

#>+ 2
mocs: toolbarstateassociation.moc

#>+ 3
messagewidget.moc: $(srcdir)/messagewidget.h
	$(MOC) $(srcdir)/messagewidget.h -o messagewidget.moc

#>+ 2
mocs: messagewidget.moc

#>+ 3
associationwidget.moc: $(srcdir)/associationwidget.h
	$(MOC) $(srcdir)/associationwidget.h -o associationwidget.moc

#>+ 2
mocs: associationwidget.moc

#>+ 3
umllistview.moc: $(srcdir)/umllistview.h
	$(MOC) $(srcdir)/umllistview.h -o umllistview.moc

#>+ 2
mocs: umllistview.moc

#>+ 3
entityattribute.moc: $(srcdir)/entityattribute.h
	$(MOC) $(srcdir)/entityattribute.h -o entityattribute.moc

#>+ 2
mocs: entityattribute.moc

#>+ 3
classifier.moc: $(srcdir)/classifier.h
	$(MOC) $(srcdir)/classifier.h -o classifier.moc

#>+ 2
mocs: classifier.moc

#>+ 3
toolbarstatearrow.moc: $(srcdir)/toolbarstatearrow.h
	$(MOC) $(srcdir)/toolbarstatearrow.h -o toolbarstatearrow.moc

#>+ 2
mocs: toolbarstatearrow.moc

#>+ 3
uml.moc: $(srcdir)/uml.h
	$(MOC) $(srcdir)/uml.h -o uml.moc

#>+ 2
mocs: uml.moc

#>+ 3
umlwidget.moc: $(srcdir)/umlwidget.h
	$(MOC) $(srcdir)/umlwidget.h -o umlwidget.moc

#>+ 2
mocs: umlwidget.moc

#>+ 3
artifact.moc: $(srcdir)/artifact.h
	$(MOC) $(srcdir)/artifact.h -o artifact.moc

#>+ 2
mocs: artifact.moc

#>+ 3
node.moc: $(srcdir)/node.h
	$(MOC) $(srcdir)/node.h -o node.moc

#>+ 2
mocs: node.moc

#>+ 3
folder.moc: $(srcdir)/folder.h
	$(MOC) $(srcdir)/folder.h -o folder.moc

#>+ 2
mocs: folder.moc

#>+ 3
codeparameter.moc: $(srcdir)/codeparameter.h
	$(MOC) $(srcdir)/codeparameter.h -o codeparameter.moc

#>+ 2
mocs: codeparameter.moc

#>+ 3
codegenerationpolicy.moc: $(srcdir)/codegenerationpolicy.h
	$(MOC) $(srcdir)/codegenerationpolicy.h -o codegenerationpolicy.moc

#>+ 2
mocs: codegenerationpolicy.moc

#>+ 3
entity.moc: $(srcdir)/entity.h
	$(MOC) $(srcdir)/entity.h -o entity.moc

#>+ 2
mocs: entity.moc

#>+ 3
codecomment.moc: $(srcdir)/codecomment.h
	$(MOC) $(srcdir)/codecomment.h -o codecomment.moc

#>+ 2
mocs: codecomment.moc

#>+ 3
ownedhierarchicalcodeblock.moc: $(srcdir)/ownedhierarchicalcodeblock.h
	$(MOC) $(srcdir)/ownedhierarchicalcodeblock.h -o ownedhierarchicalcodeblock.moc

#>+ 2
mocs: ownedhierarchicalcodeblock.moc

#>+ 3
codemethodblock.moc: $(srcdir)/codemethodblock.h
	$(MOC) $(srcdir)/codemethodblock.h -o codemethodblock.moc

#>+ 2
mocs: codemethodblock.moc

#>+ 3
enum.moc: $(srcdir)/enum.h
	$(MOC) $(srcdir)/enum.h -o enum.moc

#>+ 2
mocs: enum.moc

#>+ 3
operation.moc: $(srcdir)/operation.h
	$(MOC) $(srcdir)/operation.h -o operation.moc

#>+ 2
mocs: operation.moc

#>+ 3
association.moc: $(srcdir)/association.h
	$(MOC) $(srcdir)/association.h -o association.moc

#>+ 2
mocs: association.moc

#>+ 3
docwindow.moc: $(srcdir)/docwindow.h
	$(MOC) $(srcdir)/docwindow.h -o docwindow.moc

#>+ 2
mocs: docwindow.moc

#>+ 3
activitywidget.moc: $(srcdir)/activitywidget.h
	$(MOC) $(srcdir)/activitywidget.h -o activitywidget.moc

#>+ 2
mocs: activitywidget.moc

#>+ 3
umlrole.moc: $(srcdir)/umlrole.h
	$(MOC) $(srcdir)/umlrole.h -o umlrole.moc

#>+ 2
mocs: umlrole.moc

#>+ 3
plugin.moc: $(srcdir)/plugin.h
	$(MOC) $(srcdir)/plugin.h -o plugin.moc

#>+ 2
mocs: plugin.moc

#>+ 3
kstartuplogo.moc: $(srcdir)/kstartuplogo.h
	$(MOC) $(srcdir)/kstartuplogo.h -o kstartuplogo.moc

#>+ 2
mocs: kstartuplogo.moc

#>+ 3
worktoolbar.moc: $(srcdir)/worktoolbar.h
	$(MOC) $(srcdir)/worktoolbar.h -o worktoolbar.moc

#>+ 2
mocs: worktoolbar.moc

#>+ 3
actor.moc: $(srcdir)/actor.h
	$(MOC) $(srcdir)/actor.h -o actor.moc

#>+ 2
mocs: actor.moc

#>+ 3
package.moc: $(srcdir)/package.h
	$(MOC) $(srcdir)/package.h -o package.moc

#>+ 2
mocs: package.moc

#>+ 3
notewidget.moc: $(srcdir)/notewidget.h
	$(MOC) $(srcdir)/notewidget.h -o notewidget.moc

#>+ 2
mocs: notewidget.moc

#>+ 3
component.moc: $(srcdir)/component.h
	$(MOC) $(srcdir)/component.h -o component.moc

#>+ 2
mocs: component.moc

#>+ 3
toolbarstatepool.moc: $(srcdir)/toolbarstatepool.h
	$(MOC) $(srcdir)/toolbarstatepool.h -o toolbarstatepool.moc

#>+ 2
mocs: toolbarstatepool.moc

#>+ 3
classifiercodedocument.moc: $(srcdir)/classifiercodedocument.h
	$(MOC) $(srcdir)/classifiercodedocument.h -o classifiercodedocument.moc

#>+ 2
mocs: classifiercodedocument.moc

#>+ 3
codegenerator.moc: $(srcdir)/codegenerator.h
	$(MOC) $(srcdir)/codegenerator.h -o codegenerator.moc

#>+ 2
mocs: codegenerator.moc

#>+ 3
floatingtextwidget.moc: $(srcdir)/floatingtextwidget.h
	$(MOC) $(srcdir)/floatingtextwidget.h -o floatingtextwidget.moc

#>+ 2
mocs: floatingtextwidget.moc

#>+ 3
umlobject.moc: $(srcdir)/umlobject.h
	$(MOC) $(srcdir)/umlobject.h -o umlobject.moc

#>+ 2
mocs: umlobject.moc

#>+ 3
classifierlistitem.moc: $(srcdir)/classifierlistitem.h
	$(MOC) $(srcdir)/classifierlistitem.h -o classifierlistitem.moc

#>+ 2
mocs: classifierlistitem.moc

#>+ 3
codedocument.moc: $(srcdir)/codedocument.h
	$(MOC) $(srcdir)/codedocument.h -o codedocument.moc

#>+ 2
mocs: codedocument.moc

#>+ 3
umldoc.moc: $(srcdir)/umldoc.h
	$(MOC) $(srcdir)/umldoc.h -o umldoc.moc

#>+ 2
mocs: umldoc.moc

#>+ 3
umlview.moc: $(srcdir)/umlview.h
	$(MOC) $(srcdir)/umlview.h -o umlview.moc

#>+ 2
mocs: umlview.moc

#>+ 3
ownedcodeblock.moc: $(srcdir)/ownedcodeblock.h
	$(MOC) $(srcdir)/ownedcodeblock.h -o ownedcodeblock.moc

#>+ 2
mocs: ownedcodeblock.moc

#>+ 3
clean-metasources:
	-rm -f  hierarchicalcodeblock.moc codeclassfield.moc textblock.moc kplayerslideraction.moc aligntoolbar.moc toolbarstatemessages.moc codeaccessormethod.moc attribute.moc objectwidget.moc pluginloader.moc codeblock.moc statewidget.moc codeblockwithcomments.moc linepath.moc umlcanvasobject.moc widgetbase.moc toolbarstateother.moc codeclassfielddeclarationblock.moc codeoperation.moc toolbarstate.moc toolbarstateassociation.moc messagewidget.moc associationwidget.moc umllistview.moc entityattribute.moc classifier.moc toolbarstatearrow.moc uml.moc umlwidget.moc artifact.moc node.moc folder.moc codeparameter.moc codegenerationpolicy.moc entity.moc codecomment.moc ownedhierarchicalcodeblock.moc codemethodblock.moc enum.moc operation.moc association.moc docwindow.moc activitywidget.moc umlrole.moc plugin.moc kstartuplogo.moc worktoolbar.moc actor.moc package.moc notewidget.moc component.moc toolbarstatepool.moc classifiercodedocument.moc codegenerator.moc floatingtextwidget.moc umlobject.moc classifierlistitem.moc codedocument.moc umldoc.moc umlview.moc ownedcodeblock.moc

#>+ 2
KDE_DIST=actorwidget.h umllistviewitemlist.h umlviewlist.h messagewidgetcontroller.h messagewidgetlist.h ownedcodeblock.h cr48-mime-umbrellofile.png attribute.h x-umbrello.desktop component.h artifactwidget.h petalnode.h umlwidgetlist.h classifiercodedocument.h classifierwidget.h operation.h hierarchicalcodeblock.h objectwidgetcontroller.h artifact.h widget_utils.h enumwidget.h cr64-mime-umbrellofile.png umlnamespace.h codeaccessormethodlist.h optionstate.h umlassociationlist.h aligntoolbar.h template.h Makefile.in toolbarstatemessages.h package.h codeaccessormethod.h worktoolbar.h umlstereotypelist.h codecomment.h codegenobjectwithtextblocks.h textblock.h cr16-mime-umbrellofile.png listpopupmenu.h hi32-app-umbrello.png umlviewcanvas.h kstartuplogo.h umlwidget.h assocrules.h umlrole.h messagewidget.h hi32-mime-umbrellofile.png codemethodblock.h umlviewimageexporterall.h association.h hi22-app-umbrello.png cr22-mime-umbrellofile.png actor.h hi16-mime-umbrellofile.png hi48-app-umbrello.png stereotype.h linepath.h umlwidgetcontroller.h codeviewerstate.h associationwidgetlist.h seqlinewidget.h codeparameter.h usecasewidget.h codeclassfield.h cmdlineexportallviewsevent.h usecase.h dialog_utils.h umlattributelist.h configurable.h notewidgetcontroller.h codeblock.h umlviewimageexportermodel.h classifierlistitem.h packagewidget.h associationwidget.h hi64-app-umbrello.png plugin.h classifier.h entityattribute.h folder.h enumliteral.h umlentityattributelist.h umlenumliterallist.h umllistview.h umbrello.desktop umlclassifierlistitemlist.h codeoperation.h umloperationlist.h tips codegenerator.h activitywidget.h toolbarstatepool.h objectwidget.h boxwidget.h umllistviewitem.h pluginloader.h umlviewimageexporter.h toolbarstatearrow.h umlobjectlist.h model_utils.h hisc-app-umbrello.svgz umbrelloui.rc cr128-mime-umbrellofile.png umlcanvasobject.h widgetbase.h codedocument.h textblocklist.h petaltree2uml.h hi16-app-umbrello.png forkjoinwidget.h toolbarstateother.h ownedhierarchicalcodeblock.h node.h kplayerslideraction.h widget_factory.h notewidget.h codeclassfielddeclarationblock.h codegenerationpolicy.h docwindow.h codeclassfieldlist.h import_rose.h datatypewidget.h cr32-mime-umbrellofile.png enum.h toolbarstatefactory.h toolbarstateassociation.h umlview.h entitywidget.h object_factory.h umldoc.h entity.h uniqueid.h umlclassifierlist.h floatingtextwidgetcontroller.h hi128-app-umbrello.png crsc-mime-umbrellofile.svgz toolbarstate.h uml.h statewidget.h codeblockwithcomments.h umlpackagelist.h codedocumentlist.h nodewidget.h umltemplatelist.h linkwidget.h floatingtextwidget.h componentwidget.h umlobject.h Makefile.am 

#>+ 2
docs-am:

#>+ 52
install-kde-icons:
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/crystalsvg/64x64/mimetypes
	$(INSTALL_DATA) $(srcdir)/cr64-mime-umbrellofile.png $(DESTDIR)$(kde_icondir)/crystalsvg/64x64/mimetypes/umbrellofile.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/crystalsvg/128x128/mimetypes
	$(INSTALL_DATA) $(srcdir)/cr128-mime-umbrellofile.png $(DESTDIR)$(kde_icondir)/crystalsvg/128x128/mimetypes/umbrellofile.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps
	$(INSTALL_DATA) $(srcdir)/hi48-app-umbrello.png $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/umbrello.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/crystalsvg/16x16/mimetypes
	$(INSTALL_DATA) $(srcdir)/cr16-mime-umbrellofile.png $(DESTDIR)$(kde_icondir)/crystalsvg/16x16/mimetypes/umbrellofile.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/crystalsvg/32x32/mimetypes
	$(INSTALL_DATA) $(srcdir)/cr32-mime-umbrellofile.png $(DESTDIR)$(kde_icondir)/crystalsvg/32x32/mimetypes/umbrellofile.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps
	$(INSTALL_DATA) $(srcdir)/hi32-app-umbrello.png $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/umbrello.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps
	$(INSTALL_DATA) $(srcdir)/hi22-app-umbrello.png $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps/umbrello.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/crystalsvg/22x22/mimetypes
	$(INSTALL_DATA) $(srcdir)/cr22-mime-umbrellofile.png $(DESTDIR)$(kde_icondir)/crystalsvg/22x22/mimetypes/umbrellofile.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/crystalsvg/scalable/mimetypes
	$(INSTALL_DATA) $(srcdir)/crsc-mime-umbrellofile.svgz $(DESTDIR)$(kde_icondir)/crystalsvg/scalable/mimetypes/umbrellofile.svgz
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/crystalsvg/48x48/mimetypes
	$(INSTALL_DATA) $(srcdir)/cr48-mime-umbrellofile.png $(DESTDIR)$(kde_icondir)/crystalsvg/48x48/mimetypes/umbrellofile.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/128x128/apps
	$(INSTALL_DATA) $(srcdir)/hi128-app-umbrello.png $(DESTDIR)$(kde_icondir)/hicolor/128x128/apps/umbrello.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/16x16/mimetypes
	$(INSTALL_DATA) $(srcdir)/hi16-mime-umbrellofile.png $(DESTDIR)$(kde_icondir)/hicolor/16x16/mimetypes/umbrellofile.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps
	$(INSTALL_DATA) $(srcdir)/hi16-app-umbrello.png $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/umbrello.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps
	$(INSTALL_DATA) $(srcdir)/hi64-app-umbrello.png $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps/umbrello.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/32x32/mimetypes
	$(INSTALL_DATA) $(srcdir)/hi32-mime-umbrellofile.png $(DESTDIR)$(kde_icondir)/hicolor/32x32/mimetypes/umbrellofile.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/scalable/apps
	$(INSTALL_DATA) $(srcdir)/hisc-app-umbrello.svgz $(DESTDIR)$(kde_icondir)/hicolor/scalable/apps/umbrello.svgz

uninstall-kde-icons:
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/64x64/mimetypes/umbrellofile.png
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/128x128/mimetypes/umbrellofile.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/umbrello.png
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/16x16/mimetypes/umbrellofile.png
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/32x32/mimetypes/umbrellofile.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/umbrello.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps/umbrello.png
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/22x22/mimetypes/umbrellofile.png
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/scalable/mimetypes/umbrellofile.svgz
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/48x48/mimetypes/umbrellofile.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/128x128/apps/umbrello.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/16x16/mimetypes/umbrellofile.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/umbrello.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps/umbrello.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/32x32/mimetypes/umbrellofile.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/scalable/apps/umbrello.svgz

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  umbrello/umbrello/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  umbrello/umbrello/Makefile
	cd $(top_srcdir) && perl admin/am_edit umbrello/umbrello/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-recursive

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
umbrello.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/activitywidget.cpp $(srcdir)/actor.cpp $(srcdir)/actorwidget.cpp $(srcdir)/aligntoolbar.cpp $(srcdir)/artifact.cpp $(srcdir)/artifactwidget.cpp $(srcdir)/association.cpp $(srcdir)/associationwidget.cpp $(srcdir)/assocrules.cpp $(srcdir)/attribute.cpp $(srcdir)/boxwidget.cpp $(srcdir)/classifier.cpp $(srcdir)/classifiercodedocument.cpp $(srcdir)/classifierlistitem.cpp $(srcdir)/classifierwidget.cpp $(srcdir)/cmdlineexportallviewsevent.cpp $(srcdir)/codeaccessormethod.cpp $(srcdir)/codeblock.cpp $(srcdir)/codeblockwithcomments.cpp $(srcdir)/codeclassfield.cpp $(srcdir)/codeclassfielddeclarationblock.cpp $(srcdir)/codecomment.cpp $(srcdir)/codedocument.cpp $(srcdir)/codegenerationpolicy.cpp $(srcdir)/codegenerator.cpp $(srcdir)/codegenobjectwithtextblocks.cpp $(srcdir)/codemethodblock.cpp $(srcdir)/codeoperation.cpp $(srcdir)/codeparameter.cpp $(srcdir)/component.cpp $(srcdir)/componentwidget.cpp $(srcdir)/configurable.cpp $(srcdir)/datatypewidget.cpp $(srcdir)/dialog_utils.cpp $(srcdir)/docwindow.cpp $(srcdir)/entity.cpp $(srcdir)/entityattribute.cpp $(srcdir)/entitywidget.cpp $(srcdir)/enum.cpp $(srcdir)/enumliteral.cpp $(srcdir)/enumwidget.cpp $(srcdir)/floatingtextwidget.cpp $(srcdir)/floatingtextwidgetcontroller.cpp $(srcdir)/folder.cpp $(srcdir)/forkjoinwidget.cpp $(srcdir)/kplayerslideraction.cpp $(srcdir)/hierarchicalcodeblock.cpp $(srcdir)/import_rose.cpp $(srcdir)/kstartuplogo.cpp $(srcdir)/linepath.cpp $(srcdir)/linkwidget.cpp $(srcdir)/listpopupmenu.cpp $(srcdir)/main.cpp $(srcdir)/messagewidget.cpp $(srcdir)/messagewidgetcontroller.cpp $(srcdir)/model_utils.cpp $(srcdir)/node.cpp $(srcdir)/nodewidget.cpp $(srcdir)/notewidget.cpp $(srcdir)/notewidgetcontroller.cpp $(srcdir)/objectwidget.cpp $(srcdir)/objectwidgetcontroller.cpp $(srcdir)/object_factory.cpp $(srcdir)/operation.cpp $(srcdir)/optionstate.cpp $(srcdir)/ownedcodeblock.cpp $(srcdir)/ownedhierarchicalcodeblock.cpp $(srcdir)/package.cpp $(srcdir)/packagewidget.cpp $(srcdir)/petalnode.cpp $(srcdir)/petaltree2uml.cpp $(srcdir)/plugin.cpp $(srcdir)/pluginloader.cpp $(srcdir)/seqlinewidget.cpp $(srcdir)/statewidget.cpp $(srcdir)/stereotype.cpp $(srcdir)/template.cpp $(srcdir)/textblock.cpp $(srcdir)/toolbarstate.cpp $(srcdir)/toolbarstatearrow.cpp $(srcdir)/toolbarstateassociation.cpp $(srcdir)/toolbarstatefactory.cpp $(srcdir)/toolbarstatemessages.cpp $(srcdir)/toolbarstateother.cpp $(srcdir)/toolbarstatepool.cpp $(srcdir)/uml.cpp $(srcdir)/umlattributelist.cpp $(srcdir)/umlentityattributelist.cpp $(srcdir)/umlcanvasobject.cpp $(srcdir)/umlclassifierlistitemlist.cpp $(srcdir)/umldoc.cpp $(srcdir)/umllistview.cpp $(srcdir)/umllistviewitem.cpp $(srcdir)/umlnamespace.cpp $(srcdir)/umlobject.cpp $(srcdir)/umlobjectlist.cpp $(srcdir)/umlrole.cpp $(srcdir)/umlview.cpp $(srcdir)/umlviewcanvas.cpp $(srcdir)/umlviewimageexporter.cpp $(srcdir)/umlviewimageexporterall.cpp $(srcdir)/umlviewimageexportermodel.cpp $(srcdir)/umlwidget.cpp $(srcdir)/umlwidgetcontroller.cpp $(srcdir)/uniqueid.cpp $(srcdir)/usecase.cpp $(srcdir)/usecasewidget.cpp $(srcdir)/widgetbase.cpp $(srcdir)/widget_factory.cpp $(srcdir)/widget_utils.cpp $(srcdir)/worktoolbar.cpp  codeclassfield.moc hierarchicalcodeblock.moc textblock.moc kplayerslideraction.moc aligntoolbar.moc codeaccessormethod.moc toolbarstatemessages.moc attribute.moc pluginloader.moc objectwidget.moc statewidget.moc codeblock.moc codeblockwithcomments.moc linepath.moc umlcanvasobject.moc codeclassfielddeclarationblock.moc widgetbase.moc toolbarstateother.moc toolbarstate.moc codeoperation.moc messagewidget.moc toolbarstateassociation.moc associationwidget.moc umllistview.moc entityattribute.moc classifier.moc uml.moc toolbarstatearrow.moc umlwidget.moc artifact.moc node.moc codeparameter.moc folder.moc codegenerationpolicy.moc entity.moc codecomment.moc ownedhierarchicalcodeblock.moc enum.moc codemethodblock.moc association.moc operation.moc activitywidget.moc docwindow.moc umlrole.moc plugin.moc kstartuplogo.moc worktoolbar.moc package.moc actor.moc toolbarstatepool.moc component.moc notewidget.moc codegenerator.moc classifiercodedocument.moc floatingtextwidget.moc umldoc.moc codedocument.moc classifierlistitem.moc umlobject.moc ownedcodeblock.moc umlview.moc
	@echo 'creating umbrello.all_cpp.cpp ...'; \
	rm -f umbrello.all_cpp.files umbrello.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> umbrello.all_cpp.final; \
	for file in activitywidget.cpp actor.cpp actorwidget.cpp aligntoolbar.cpp artifact.cpp artifactwidget.cpp association.cpp associationwidget.cpp assocrules.cpp attribute.cpp boxwidget.cpp classifier.cpp classifiercodedocument.cpp classifierlistitem.cpp classifierwidget.cpp cmdlineexportallviewsevent.cpp codeaccessormethod.cpp codeblock.cpp codeblockwithcomments.cpp codeclassfield.cpp codeclassfielddeclarationblock.cpp codecomment.cpp codedocument.cpp codegenerationpolicy.cpp codegenerator.cpp codegenobjectwithtextblocks.cpp codemethodblock.cpp codeoperation.cpp codeparameter.cpp component.cpp componentwidget.cpp configurable.cpp datatypewidget.cpp dialog_utils.cpp docwindow.cpp entity.cpp entityattribute.cpp entitywidget.cpp enum.cpp enumliteral.cpp enumwidget.cpp floatingtextwidget.cpp floatingtextwidgetcontroller.cpp folder.cpp forkjoinwidget.cpp kplayerslideraction.cpp hierarchicalcodeblock.cpp import_rose.cpp kstartuplogo.cpp linepath.cpp linkwidget.cpp listpopupmenu.cpp main.cpp messagewidget.cpp messagewidgetcontroller.cpp model_utils.cpp node.cpp nodewidget.cpp notewidget.cpp notewidgetcontroller.cpp objectwidget.cpp objectwidgetcontroller.cpp object_factory.cpp operation.cpp optionstate.cpp ownedcodeblock.cpp ownedhierarchicalcodeblock.cpp package.cpp packagewidget.cpp petalnode.cpp petaltree2uml.cpp plugin.cpp pluginloader.cpp seqlinewidget.cpp statewidget.cpp stereotype.cpp template.cpp textblock.cpp toolbarstate.cpp toolbarstatearrow.cpp toolbarstateassociation.cpp toolbarstatefactory.cpp toolbarstatemessages.cpp toolbarstateother.cpp toolbarstatepool.cpp uml.cpp umlattributelist.cpp umlentityattributelist.cpp umlcanvasobject.cpp umlclassifierlistitemlist.cpp umldoc.cpp umllistview.cpp umllistviewitem.cpp umlnamespace.cpp umlobject.cpp umlobjectlist.cpp umlrole.cpp umlview.cpp umlviewcanvas.cpp umlviewimageexporter.cpp umlviewimageexporterall.cpp umlviewimageexportermodel.cpp umlwidget.cpp umlwidgetcontroller.cpp uniqueid.cpp usecase.cpp usecasewidget.cpp widgetbase.cpp widget_factory.cpp widget_utils.cpp worktoolbar.cpp ; do \
	  echo "#include \"$$file\"" >> umbrello.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> umbrello.all_cpp.final; \
	done; \
	cat umbrello.all_cpp.final umbrello.all_cpp.files > umbrello.all_cpp.cpp; \
	rm -f umbrello.all_cpp.final umbrello.all_cpp.files

#>+ 3
clean-final:
	-rm -f umbrello.all_cpp.cpp

#>+ 3
final:
	$(MAKE) umbrello_OBJECTS="$(umbrello_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) umbrello_OBJECTS="$(umbrello_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) umbrello_OBJECTS="$(umbrello_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) umbrello_OBJECTS="$(umbrello_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 236
$(srcdir)/classifierwidget.cpp: version.h 
codegenerator.o: codegenerator.moc 
$(srcdir)/kplayerslideraction.cpp: version.h 
$(srcdir)/entity.cpp: version.h 
codeparameter.lo: codeparameter.moc 
$(srcdir)/toolbarstatefactory.cpp: version.h 
worktoolbar.o: worktoolbar.moc 
$(srcdir)/assocrules.cpp: version.h 
$(srcdir)/umlviewimageexportermodel.cpp: version.h 
$(srcdir)/toolbarstateother.cpp: version.h 
umlwidget.lo: umlwidget.moc 
codeparameter.o: codeparameter.moc 
codeaccessormethod.o: codeaccessormethod.moc 
notewidget.lo: notewidget.moc 
$(srcdir)/dialog_utils.cpp: version.h 
codeaccessormethod.lo: codeaccessormethod.moc 
$(srcdir)/classifierlistitem.cpp: version.h 
$(srcdir)/object_factory.cpp: version.h 
nmcheck-am: nmcheck
entity.o: entity.moc 
statewidget.o: statewidget.moc 
folder.lo: folder.moc 
$(srcdir)/usecasewidget.cpp: version.h 
$(srcdir)/codemethodblock.cpp: version.h 
component.o: component.moc 
codeclassfield.lo: codeclassfield.moc 
$(srcdir)/umlclassifierlistitemlist.cpp: version.h 
$(srcdir)/packagewidget.cpp: version.h 
toolbarstateother.o: toolbarstateother.moc 
$(srcdir)/pluginloader.cpp: version.h 
codeclassfield.o: codeclassfield.moc 
$(srcdir)/classifier.cpp: version.h 
umlobject.o: umlobject.moc 
$(srcdir)/umlobjectlist.cpp: version.h 
classifierlistitem.lo: classifierlistitem.moc 
$(srcdir)/enum.cpp: version.h 
$(srcdir)/codeparameter.cpp: version.h 
artifact.o: artifact.moc 
operation.o: operation.moc 
$(srcdir)/widgetbase.cpp: version.h 
classifiercodedocument.lo: classifiercodedocument.moc 
widgetbase.lo: widgetbase.moc 
umllistview.lo: umllistview.moc 
kstartuplogo.lo: kstartuplogo.moc 
$(srcdir)/toolbarstate.cpp: version.h 
$(srcdir)/nodewidget.cpp: version.h 
associationwidget.lo: associationwidget.moc 
$(srcdir)/objectwidget.cpp: version.h 
activitywidget.lo: activitywidget.moc 
$(srcdir)/optionstate.cpp: version.h 
ownedhierarchicalcodeblock.o: ownedhierarchicalcodeblock.moc 
$(srcdir)/umldoc.cpp: version.h 
docwindow.lo: docwindow.moc 
$(srcdir)/umlattributelist.cpp: version.h 
$(srcdir)/artifact.cpp: version.h 
$(srcdir)/toolbarstatemessages.cpp: version.h 
$(srcdir)/activitywidget.cpp: version.h 
codeoperation.o: codeoperation.moc 
uml.o: uml.moc 
$(srcdir)/plugin.cpp: version.h 
statewidget.lo: statewidget.moc 
$(srcdir)/umlentityattributelist.cpp: version.h 
umlobject.lo: umlobject.moc 
association.o: association.moc 
$(srcdir)/operation.cpp: version.h 
floatingtextwidget.lo: floatingtextwidget.moc 
classifier.o: classifier.moc 
toolbarstateassociation.o: toolbarstateassociation.moc 
$(srcdir)/associationwidget.cpp: version.h 
package.lo: package.moc 
$(srcdir)/umlwidget.cpp: version.h 
umldoc.lo: umldoc.moc 
toolbarstatepool.o: toolbarstatepool.moc 
$(srcdir)/umlcanvasobject.cpp: version.h 
$(srcdir)/package.cpp: version.h 
$(srcdir)/messagewidget.cpp: version.h 
$(srcdir)/configurable.cpp: version.h 
codegenerationpolicy.lo: codegenerationpolicy.moc 
node.lo: node.moc 
toolbarstate.o: toolbarstate.moc 
$(srcdir)/toolbarstateassociation.cpp: version.h 
umlcanvasobject.o: umlcanvasobject.moc 
node.o: node.moc 
$(srcdir)/umlnamespace.cpp: version.h 
$(srcdir)/codedocument.cpp: version.h 
toolbarstatepool.lo: toolbarstatepool.moc 
kplayerslideraction.lo: kplayerslideraction.moc 
artifact.lo: artifact.moc 
$(srcdir)/stereotype.cpp: version.h 
operation.lo: operation.moc 
$(srcdir)/umlrole.cpp: version.h 
$(srcdir)/codeoperation.cpp: version.h 
umlview.o: umlview.moc 
plugin.lo: plugin.moc 
$(srcdir)/widget_factory.cpp: version.h 
$(srcdir)/umlviewimageexporter.cpp: version.h 
$(srcdir)/entitywidget.cpp: version.h 
$(srcdir)/folder.cpp: version.h 
$(srcdir)/classifiercodedocument.cpp: version.h 
$(srcdir)/seqlinewidget.cpp: version.h 
$(srcdir)/artifactwidget.cpp: version.h 
$(srcdir)/umllistview.cpp: version.h 
$(srcdir)/ownedhierarchicalcodeblock.cpp: version.h 
codecomment.o: codecomment.moc 
kplayerslideraction.o: kplayerslideraction.moc 
$(srcdir)/codegenerationpolicy.cpp: version.h 
$(srcdir)/main.cpp: version.h 
$(srcdir)/actorwidget.cpp: version.h 
$(srcdir)/floatingtextwidget.cpp: version.h 
package.o: package.moc 
$(srcdir)/aligntoolbar.cpp: version.h 
umlwidget.o: umlwidget.moc 
$(srcdir)/umlviewimageexporterall.cpp: version.h 
$(srcdir)/component.cpp: version.h 
hierarchicalcodeblock.lo: hierarchicalcodeblock.moc 
toolbarstatemessages.o: toolbarstatemessages.moc 
pluginloader.lo: pluginloader.moc 
linepath.lo: linepath.moc 
association.lo: association.moc 
kstartuplogo.o: kstartuplogo.moc 
codedocument.o: codedocument.moc 
$(srcdir)/enumliteral.cpp: version.h 
codedocument.lo: codedocument.moc 
aligntoolbar.lo: aligntoolbar.moc 
entityattribute.lo: entityattribute.moc 
toolbarstate.lo: toolbarstate.moc 
$(srcdir)/objectwidgetcontroller.cpp: version.h 
$(srcdir)/linepath.cpp: version.h 
$(srcdir)/floatingtextwidgetcontroller.cpp: version.h 
enum.o: enum.moc 
umllistview.o: umllistview.moc 
widgetbase.o: widgetbase.moc 
component.lo: component.moc 
$(srcdir)/attribute.cpp: version.h 
entityattribute.o: entityattribute.moc 
$(srcdir)/entityattribute.cpp: version.h 
docwindow.o: docwindow.moc 
toolbarstatemessages.lo: toolbarstatemessages.moc 
toolbarstateassociation.lo: toolbarstateassociation.moc 
$(srcdir)/usecase.cpp: version.h 
$(srcdir)/association.cpp: version.h 
$(srcdir)/ownedcodeblock.cpp: version.h 
$(srcdir)/cmdlineexportallviewsevent.cpp: version.h 
entity.lo: entity.moc 
$(srcdir)/boxwidget.cpp: version.h 
codeoperation.lo: codeoperation.moc 
$(srcdir)/petalnode.cpp: version.h 
enum.lo: enum.moc 
$(srcdir)/petaltree2uml.cpp: version.h 
messagewidget.lo: messagewidget.moc 
$(srcdir)/import_rose.cpp: version.h 
pluginloader.o: pluginloader.moc 
objectwidget.lo: objectwidget.moc 
$(srcdir)/codeclassfield.cpp: version.h 
worktoolbar.lo: worktoolbar.moc 
$(srcdir)/enumwidget.cpp: version.h 
plugin.o: plugin.moc 
$(srcdir)/notewidgetcontroller.cpp: version.h 
ownedhierarchicalcodeblock.lo: ownedhierarchicalcodeblock.moc 
toolbarstateother.lo: toolbarstateother.moc 
classifiercodedocument.o: classifiercodedocument.moc 
$(srcdir)/actor.cpp: version.h 
floatingtextwidget.o: floatingtextwidget.moc 
$(srcdir)/toolbarstatearrow.cpp: version.h 
codegenerator.lo: codegenerator.moc 
$(srcdir)/notewidget.cpp: version.h 
$(srcdir)/codeblockwithcomments.cpp: version.h 
notewidget.o: notewidget.moc 
$(srcdir)/worktoolbar.cpp: version.h 
$(srcdir)/uniqueid.cpp: version.h 
$(srcdir)/statewidget.cpp: version.h 
$(srcdir)/listpopupmenu.cpp: version.h 
codeblockwithcomments.lo: codeblockwithcomments.moc 
umlview.lo: umlview.moc 
$(srcdir)/componentwidget.cpp: version.h 
folder.o: folder.moc 
codecomment.lo: codecomment.moc 
$(srcdir)/codegenobjectwithtextblocks.cpp: version.h 
aligntoolbar.o: aligntoolbar.moc 
$(srcdir)/umllistviewitem.cpp: version.h 
classifierlistitem.o: classifierlistitem.moc 
messagewidget.o: messagewidget.moc 
codemethodblock.o: codemethodblock.moc 
$(srcdir)/codecomment.cpp: version.h 
attribute.o: attribute.moc 
$(srcdir)/node.cpp: version.h 
ownedcodeblock.o: ownedcodeblock.moc 
$(srcdir)/widget_utils.cpp: version.h 
$(srcdir)/datatypewidget.cpp: version.h 
toolbarstatearrow.lo: toolbarstatearrow.moc 
$(srcdir)/umlview.cpp: version.h 
uml.lo: uml.moc 
hierarchicalcodeblock.o: hierarchicalcodeblock.moc 
$(srcdir)/codeaccessormethod.cpp: version.h 
umlrole.o: umlrole.moc 
activitywidget.o: activitywidget.moc 
$(srcdir)/textblock.cpp: version.h 
umlcanvasobject.lo: umlcanvasobject.moc 
codemethodblock.lo: codemethodblock.moc 
classifier.lo: classifier.moc 
$(srcdir)/messagewidgetcontroller.cpp: version.h 
$(srcdir)/umlviewcanvas.cpp: version.h 
$(srcdir)/umlobject.cpp: version.h 
ownedcodeblock.lo: ownedcodeblock.moc 
$(srcdir)/toolbarstatepool.cpp: version.h 
$(srcdir)/codeblock.cpp: version.h 
textblock.lo: textblock.moc 
codeblockwithcomments.o: codeblockwithcomments.moc 
codegenerationpolicy.o: codegenerationpolicy.moc 
umldoc.o: umldoc.moc 
$(srcdir)/hierarchicalcodeblock.cpp: version.h 
$(srcdir)/linkwidget.cpp: version.h 
$(srcdir)/codeclassfielddeclarationblock.cpp: version.h 
attribute.lo: attribute.moc 
nmcheck: 
toolbarstatearrow.o: toolbarstatearrow.moc 
$(srcdir)/template.cpp: version.h 
$(srcdir)/codegenerator.cpp: version.h 
codeclassfielddeclarationblock.o: codeclassfielddeclarationblock.moc 
$(srcdir)/model_utils.cpp: version.h 
$(srcdir)/forkjoinwidget.cpp: version.h 
codeblock.lo: codeblock.moc 
codeblock.o: codeblock.moc 
actor.lo: actor.moc 
textblock.o: textblock.moc 
$(srcdir)/uml.cpp: version.h 
codeclassfielddeclarationblock.lo: codeclassfielddeclarationblock.moc 
umlrole.lo: umlrole.moc 
actor.o: actor.moc 
$(srcdir)/kstartuplogo.cpp: version.h 
associationwidget.o: associationwidget.moc 
objectwidget.o: objectwidget.moc 
linepath.o: linepath.moc 
$(srcdir)/umlwidgetcontroller.cpp: version.h 
$(srcdir)/docwindow.cpp: version.h 
