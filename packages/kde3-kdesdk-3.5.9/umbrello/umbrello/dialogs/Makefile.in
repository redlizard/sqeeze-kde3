# Makefile.in generated by automake 1.10.1 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = umbrello/umbrello/dialogs
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libdialogs_la_LIBADD =
am_libdialogs_la_OBJECTS = activitydialog.lo activitypage.lo \
	assocgenpage.lo assocpage.lo assocpropdlg.lo assocrolepage.lo \
	classgenpage.lo classifierlistpage.lo classoptionspage.lo \
	classpropdlg.lo classwizard.lo codeeditor.lo \
	codegenerationoptionspage.lo codegenerationpolicypage.lo \
	codegenerationwizard.lo codeviewerdialog.lo \
	codevieweroptionspage.lo defaultcodegenpolicypage.lo \
	diagramprintpage.lo exportallviewsdialog.lo notedialog.lo \
	overwritedialogue.lo pkgcontentspage.lo parmpropdlg.lo \
	selectopdlg.lo settingsdlg.lo statedialog.lo \
	umlattributedialog.lo umlentityattributedialog.lo \
	umloperationdialog.lo umltemplatedialog.lo umlroledialog.lo \
	umlroleproperties.lo umlviewdialog.lo umlwidgetcolorpage.lo
#>- libdialogs_la_OBJECTS = $(am_libdialogs_la_OBJECTS)
#>+ 16
libdialogs_la_final_OBJECTS = libdialogs_la.all_cpp.lo 
libdialogs_la_nofinal_OBJECTS = activitydialog.lo activitypage.lo \
	assocgenpage.lo assocpage.lo assocpropdlg.lo assocrolepage.lo \
	classgenpage.lo classifierlistpage.lo classoptionspage.lo \
	classpropdlg.lo classwizard.lo codeeditor.lo \
	codegenerationoptionspage.lo codegenerationpolicypage.lo \
	codegenerationwizard.lo codeviewerdialog.lo \
	codevieweroptionspage.lo defaultcodegenpolicypage.lo \
	diagramprintpage.lo exportallviewsdialog.lo notedialog.lo \
	overwritedialogue.lo pkgcontentspage.lo parmpropdlg.lo \
	selectopdlg.lo settingsdlg.lo statedialog.lo \
	umlattributedialog.lo umlentityattributedialog.lo \
	umloperationdialog.lo umltemplatedialog.lo umlroledialog.lo \
	umlroleproperties.lo umlviewdialog.lo umlwidgetcolorpage.lo codegenerationoptionsbase.lo codegenerationpolicybase.lo codegenerationwizardbase.lo codeviewerdialogbase.lo codevieweroptionsbase.lo diagrampropertiespage.lo exportallviewsdialogbase.lo umlrolepropertiesbase.lo
@KDE_USE_FINAL_FALSE@libdialogs_la_OBJECTS = $(libdialogs_la_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@libdialogs_la_OBJECTS = $(libdialogs_la_final_OBJECTS)
#>- libdialogs_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(libdialogs_la_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
libdialogs_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(libdialogs_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libdialogs_la_SOURCES)
DIST_SOURCES = $(libdialogs_la_SOURCES)
ETAGS = etags
CTAGS = ctags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DBIV_INCLUDES = @DBIV_INCLUDES@
DBIV_LDFLAGS = @DBIV_LDFLAGS@
DBIV_NAME = @DBIV_NAME@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCACHEGRIND_VERSION = @KCACHEGRIND_VERSION@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
KMTRACE_LIBS = @KMTRACE_LIBS@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBXML_CFLAGS = @LIBXML_CFLAGS@
LIBXML_LIBS = @LIBXML_LIBS@
LIBXML_RPATH = @LIBXML_RPATH@
LIBXSLT_CFLAGS = @LIBXSLT_CFLAGS@
LIBXSLT_LIBS = @LIBXSLT_LIBS@
LIBXSLT_RPATH = @LIBXSLT_RPATH@
LIBZ = @LIBZ@
LIB_DBIV = @LIB_DBIV@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
SVNCONFIG = @SVNCONFIG@
SVNLD = @SVNLD@
SVN_CPPFLAGS = @SVN_CPPFLAGS@
SVN_INCLUDE = @SVN_INCLUDE@
SVN_LIB = @SVN_LIB@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@
noinst_LTLIBRARIES = libdialogs.la
INCLUDES = -I$(top_srcdir) $(all_includes)
#>- libdialogs_la_METASOURCES = AUTO
#>- libdialogs_la_SOURCES = \
#>- 			codegenerationoptionsbase.ui \
#>- 			codegenerationpolicybase.ui \
#>- 			codegenerationwizardbase.ui \
#>- 			codeviewerdialogbase.ui \
#>- 			codevieweroptionsbase.ui \
#>- 			diagrampropertiespage.ui \
#>- 			exportallviewsdialogbase.ui \
#>- 			umlrolepropertiesbase.ui \
#>- activitydialog.cpp \
#>- activitypage.cpp \
#>- assocgenpage.cpp \
#>- assocpage.cpp \
#>- assocpropdlg.cpp \
#>- assocrolepage.cpp \
#>- classgenpage.cpp \
#>- classifierlistpage.cpp\
#>- classoptionspage.cpp \
#>- classpropdlg.cpp \
#>- classwizard.cpp \
#>- codeeditor.cpp \
#>- codegenerationoptionspage.cpp \
#>- codegenerationpolicypage.cpp \
#>- codegenerationwizard.cpp \
#>- codeviewerdialog.cpp \
#>- codevieweroptionspage.cpp \
#>- defaultcodegenpolicypage.cpp \
#>- diagramprintpage.cpp \
#>- exportallviewsdialog.cpp \
#>- notedialog.cpp \
#>- overwritedialogue.cpp \
#>- pkgcontentspage.cpp \
#>- parmpropdlg.cpp \
#>- selectopdlg.cpp \
#>- settingsdlg.cpp \
#>- statedialog.cpp \
#>- umlattributedialog.cpp \
#>- umlentityattributedialog.cpp \
#>- umloperationdialog.cpp \
#>- umltemplatedialog.cpp \
#>- umlroledialog.cpp \
#>- umlroleproperties.cpp \
#>- umlviewdialog.cpp \
#>- umlwidgetcolorpage.cpp
#>+ 44
libdialogs_la_SOURCES=\
			 \
			 \
			 \
			 \
			 \
			 \
			 \
			 \
activitydialog.cpp \
activitypage.cpp \
assocgenpage.cpp \
assocpage.cpp \
assocpropdlg.cpp \
assocrolepage.cpp \
classgenpage.cpp \
classifierlistpage.cpp\
classoptionspage.cpp \
classpropdlg.cpp \
classwizard.cpp \
codeeditor.cpp \
codegenerationoptionspage.cpp \
codegenerationpolicypage.cpp \
codegenerationwizard.cpp \
codeviewerdialog.cpp \
codevieweroptionspage.cpp \
defaultcodegenpolicypage.cpp \
diagramprintpage.cpp \
exportallviewsdialog.cpp \
notedialog.cpp \
overwritedialogue.cpp \
pkgcontentspage.cpp \
parmpropdlg.cpp \
selectopdlg.cpp \
settingsdlg.cpp \
statedialog.cpp \
umlattributedialog.cpp \
umlentityattributedialog.cpp \
umloperationdialog.cpp \
umltemplatedialog.cpp \
umlroledialog.cpp \
umlroleproperties.cpp \
umlviewdialog.cpp \
umlwidgetcolorpage.cpp codegenerationoptionsbase.cpp codegenerationpolicybase.cpp codegenerationwizardbase.cpp codeviewerdialogbase.cpp codevieweroptionsbase.cpp diagrampropertiespage.cpp exportallviewsdialogbase.cpp umlrolepropertiesbase.cpp

libdialogs_la_LDFLAGS = $(all_libraries) $(KDE_RPATH) -export-dynamic
#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  umbrello/umbrello/dialogs/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --foreign  umbrello/umbrello/dialogs/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  umbrello/umbrello/dialogs/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  umbrello/umbrello/dialogs/Makefile
	cd $(top_srcdir) && perl admin/am_edit umbrello/umbrello/dialogs/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libdialogs.la: $(libdialogs_la_OBJECTS) $(libdialogs_la_DEPENDENCIES) 
	$(libdialogs_la_LINK)  $(libdialogs_la_OBJECTS) $(libdialogs_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/activitydialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/activitypage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/assocgenpage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/assocpage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/assocpropdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/assocrolepage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/classgenpage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/classifierlistpage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/classoptionspage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/classpropdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/classwizard.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codeeditor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codegenerationoptionspage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codegenerationpolicypage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codegenerationwizard.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codeviewerdialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codevieweroptionspage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/defaultcodegenpolicypage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/diagramprintpage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exportallviewsdialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/notedialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/overwritedialogue.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parmpropdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pkgcontentspage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/selectopdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/settingsdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/statedialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umlattributedialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umlentityattributedialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umloperationdialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umlroledialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umlroleproperties.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umltemplatedialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umlviewdialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/umlwidgetcolorpage.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
#>- 	mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-ui clean-bcheck clean-final  clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
umltemplatedialog.moc: $(srcdir)/umltemplatedialog.h
	$(MOC) $(srcdir)/umltemplatedialog.h -o umltemplatedialog.moc

#>+ 2
mocs: umltemplatedialog.moc

#>+ 3
umlroleproperties.moc: $(srcdir)/umlroleproperties.h
	$(MOC) $(srcdir)/umlroleproperties.h -o umlroleproperties.moc

#>+ 2
mocs: umlroleproperties.moc

#>+ 3
pkgcontentspage.moc: $(srcdir)/pkgcontentspage.h
	$(MOC) $(srcdir)/pkgcontentspage.h -o pkgcontentspage.moc

#>+ 2
mocs: pkgcontentspage.moc

#>+ 3
activitypage.moc: $(srcdir)/activitypage.h
	$(MOC) $(srcdir)/activitypage.h -o activitypage.moc

#>+ 2
mocs: activitypage.moc

#>+ 3
activitydialog.moc: $(srcdir)/activitydialog.h
	$(MOC) $(srcdir)/activitydialog.h -o activitydialog.moc

#>+ 2
mocs: activitydialog.moc

#>+ 3
umlviewdialog.moc: $(srcdir)/umlviewdialog.h
	$(MOC) $(srcdir)/umlviewdialog.h -o umlviewdialog.moc

#>+ 2
mocs: umlviewdialog.moc

#>+ 3
exportallviewsdialog.moc: $(srcdir)/exportallviewsdialog.h
	$(MOC) $(srcdir)/exportallviewsdialog.h -o exportallviewsdialog.moc

#>+ 2
mocs: exportallviewsdialog.moc

#>+ 3
notedialog.moc: $(srcdir)/notedialog.h
	$(MOC) $(srcdir)/notedialog.h -o notedialog.moc

#>+ 2
mocs: notedialog.moc

#>+ 3
codegenerationoptionspage.moc: $(srcdir)/codegenerationoptionspage.h
	$(MOC) $(srcdir)/codegenerationoptionspage.h -o codegenerationoptionspage.moc

#>+ 2
mocs: codegenerationoptionspage.moc

#>+ 3
codegenerationwizard.moc: $(srcdir)/codegenerationwizard.h
	$(MOC) $(srcdir)/codegenerationwizard.h -o codegenerationwizard.moc

#>+ 2
mocs: codegenerationwizard.moc

#>+ 3
classpropdlg.moc: $(srcdir)/classpropdlg.h
	$(MOC) $(srcdir)/classpropdlg.h -o classpropdlg.moc

#>+ 2
mocs: classpropdlg.moc

#>+ 3
assocpage.moc: $(srcdir)/assocpage.h
	$(MOC) $(srcdir)/assocpage.h -o assocpage.moc

#>+ 2
mocs: assocpage.moc

#>+ 3
classgenpage.moc: $(srcdir)/classgenpage.h
	$(MOC) $(srcdir)/classgenpage.h -o classgenpage.moc

#>+ 2
mocs: classgenpage.moc

#>+ 3
codegenerationpolicypage.moc: $(srcdir)/codegenerationpolicypage.h
	$(MOC) $(srcdir)/codegenerationpolicypage.h -o codegenerationpolicypage.moc

#>+ 2
mocs: codegenerationpolicypage.moc

#>+ 3
assocrolepage.moc: $(srcdir)/assocrolepage.h
	$(MOC) $(srcdir)/assocrolepage.h -o assocrolepage.moc

#>+ 2
mocs: assocrolepage.moc

#>+ 3
umlroledialog.moc: $(srcdir)/umlroledialog.h
	$(MOC) $(srcdir)/umlroledialog.h -o umlroledialog.moc

#>+ 2
mocs: umlroledialog.moc

#>+ 3
classifierlistpage.moc: $(srcdir)/classifierlistpage.h
	$(MOC) $(srcdir)/classifierlistpage.h -o classifierlistpage.moc

#>+ 2
mocs: classifierlistpage.moc

#>+ 3
codeeditor.moc: $(srcdir)/codeeditor.h
	$(MOC) $(srcdir)/codeeditor.h -o codeeditor.moc

#>+ 2
mocs: codeeditor.moc

#>+ 3
statedialog.moc: $(srcdir)/statedialog.h
	$(MOC) $(srcdir)/statedialog.h -o statedialog.moc

#>+ 2
mocs: statedialog.moc

#>+ 3
overwritedialogue.moc: $(srcdir)/overwritedialogue.h
	$(MOC) $(srcdir)/overwritedialogue.h -o overwritedialogue.moc

#>+ 2
mocs: overwritedialogue.moc

#>+ 3
assocgenpage.moc: $(srcdir)/assocgenpage.h
	$(MOC) $(srcdir)/assocgenpage.h -o assocgenpage.moc

#>+ 2
mocs: assocgenpage.moc

#>+ 3
umlattributedialog.moc: $(srcdir)/umlattributedialog.h
	$(MOC) $(srcdir)/umlattributedialog.h -o umlattributedialog.moc

#>+ 2
mocs: umlattributedialog.moc

#>+ 3
codeviewerdialog.moc: $(srcdir)/codeviewerdialog.h
	$(MOC) $(srcdir)/codeviewerdialog.h -o codeviewerdialog.moc

#>+ 2
mocs: codeviewerdialog.moc

#>+ 3
selectopdlg.moc: $(srcdir)/selectopdlg.h
	$(MOC) $(srcdir)/selectopdlg.h -o selectopdlg.moc

#>+ 2
mocs: selectopdlg.moc

#>+ 3
assocpropdlg.moc: $(srcdir)/assocpropdlg.h
	$(MOC) $(srcdir)/assocpropdlg.h -o assocpropdlg.moc

#>+ 2
mocs: assocpropdlg.moc

#>+ 3
umlwidgetcolorpage.moc: $(srcdir)/umlwidgetcolorpage.h
	$(MOC) $(srcdir)/umlwidgetcolorpage.h -o umlwidgetcolorpage.moc

#>+ 2
mocs: umlwidgetcolorpage.moc

#>+ 3
umloperationdialog.moc: $(srcdir)/umloperationdialog.h
	$(MOC) $(srcdir)/umloperationdialog.h -o umloperationdialog.moc

#>+ 2
mocs: umloperationdialog.moc

#>+ 3
defaultcodegenpolicypage.moc: $(srcdir)/defaultcodegenpolicypage.h
	$(MOC) $(srcdir)/defaultcodegenpolicypage.h -o defaultcodegenpolicypage.moc

#>+ 2
mocs: defaultcodegenpolicypage.moc

#>+ 3
parmpropdlg.moc: $(srcdir)/parmpropdlg.h
	$(MOC) $(srcdir)/parmpropdlg.h -o parmpropdlg.moc

#>+ 2
mocs: parmpropdlg.moc

#>+ 3
settingsdlg.moc: $(srcdir)/settingsdlg.h
	$(MOC) $(srcdir)/settingsdlg.h -o settingsdlg.moc

#>+ 2
mocs: settingsdlg.moc

#>+ 3
diagramprintpage.moc: $(srcdir)/diagramprintpage.h
	$(MOC) $(srcdir)/diagramprintpage.h -o diagramprintpage.moc

#>+ 2
mocs: diagramprintpage.moc

#>+ 3
codevieweroptionspage.moc: $(srcdir)/codevieweroptionspage.h
	$(MOC) $(srcdir)/codevieweroptionspage.h -o codevieweroptionspage.moc

#>+ 2
mocs: codevieweroptionspage.moc

#>+ 3
umlentityattributedialog.moc: $(srcdir)/umlentityattributedialog.h
	$(MOC) $(srcdir)/umlentityattributedialog.h -o umlentityattributedialog.moc

#>+ 2
mocs: umlentityattributedialog.moc

#>+ 3
clean-metasources:
	-rm -f  umltemplatedialog.moc umlroleproperties.moc pkgcontentspage.moc activitypage.moc activitydialog.moc umlviewdialog.moc exportallviewsdialog.moc notedialog.moc codegenerationoptionspage.moc codegenerationwizard.moc classpropdlg.moc assocpage.moc classgenpage.moc codegenerationpolicypage.moc assocrolepage.moc umlroledialog.moc classifierlistpage.moc codeeditor.moc statedialog.moc overwritedialogue.moc assocgenpage.moc umlattributedialog.moc codeviewerdialog.moc selectopdlg.moc assocpropdlg.moc umlwidgetcolorpage.moc umloperationdialog.moc defaultcodegenpolicypage.moc parmpropdlg.moc settingsdlg.moc diagramprintpage.moc codevieweroptionspage.moc umlentityattributedialog.moc

#>+ 2
KDE_DIST=activitydialog.h codegenerationoptionspage.h classpropdlg.h assocrolepage.h classifierlistpage.h activitypage.h umltemplatedialog.h overwritedialogue.h umlviewdialog.h settingsdlg.h Makefile.in codegenerationpolicypage.h pkgcontentspage.h notedialog.h codevieweroptionspage.h defaultcodegenpolicypage.h parmpropdlg.h selectopdlg.h codegenerationoptionsbase.ui assocpage.h umlroleproperties.h umlentityattributedialog.h umloperationdialog.h diagrampropertiespage.ui umlrolepropertiesbase.ui assocpropdlg.h umlwidgetcolorpage.h exportallviewsdialogbase.ui assocgenpage.h codegenerationpolicybase.ui codegenerationwizardbase.ui exportallviewsdialog.h umlroledialog.h statedialog.h codeeditor.h diagramprintpage.h codeviewerdialog.h classwizard.h codevieweroptionsbase.ui codeviewerdialogbase.ui classgenpage.h umlattributedialog.h classoptionspage.h codegenerationwizard.h Makefile.am 

#>+ 11
clean-ui:
	-rm -f \
	codegenerationoptionsbase.cpp codegenerationoptionsbase.h codegenerationoptionsbase.moc \
	codegenerationpolicybase.cpp codegenerationpolicybase.h codegenerationpolicybase.moc \
	codegenerationwizardbase.cpp codegenerationwizardbase.h codegenerationwizardbase.moc \
	codeviewerdialogbase.cpp codeviewerdialogbase.h codeviewerdialogbase.moc \
	codevieweroptionsbase.cpp codevieweroptionsbase.h codevieweroptionsbase.moc \
	diagrampropertiespage.cpp diagrampropertiespage.h diagrampropertiespage.moc \
	exportallviewsdialogbase.cpp exportallviewsdialogbase.h exportallviewsdialogbase.moc \
	umlrolepropertiesbase.cpp umlrolepropertiesbase.h umlrolepropertiesbase.moc 

#>+ 2
docs-am:

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  umbrello/umbrello/dialogs/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  umbrello/umbrello/dialogs/Makefile
	cd $(top_srcdir) && perl admin/am_edit umbrello/umbrello/dialogs/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
libdialogs_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/activitydialog.cpp $(srcdir)/activitypage.cpp $(srcdir)/assocgenpage.cpp $(srcdir)/assocpage.cpp $(srcdir)/assocpropdlg.cpp $(srcdir)/assocrolepage.cpp $(srcdir)/classgenpage.cpp $(srcdir)/classifierlistpage.cpp $(srcdir)/classoptionspage.cpp $(srcdir)/classpropdlg.cpp $(srcdir)/classwizard.cpp $(srcdir)/codeeditor.cpp $(srcdir)/codegenerationoptionspage.cpp $(srcdir)/codegenerationpolicypage.cpp $(srcdir)/codegenerationwizard.cpp $(srcdir)/codeviewerdialog.cpp $(srcdir)/codevieweroptionspage.cpp $(srcdir)/defaultcodegenpolicypage.cpp $(srcdir)/diagramprintpage.cpp $(srcdir)/exportallviewsdialog.cpp $(srcdir)/notedialog.cpp $(srcdir)/overwritedialogue.cpp $(srcdir)/pkgcontentspage.cpp $(srcdir)/parmpropdlg.cpp $(srcdir)/selectopdlg.cpp $(srcdir)/settingsdlg.cpp $(srcdir)/statedialog.cpp $(srcdir)/umlattributedialog.cpp $(srcdir)/umlentityattributedialog.cpp $(srcdir)/umloperationdialog.cpp $(srcdir)/umltemplatedialog.cpp $(srcdir)/umlroledialog.cpp $(srcdir)/umlroleproperties.cpp $(srcdir)/umlviewdialog.cpp $(srcdir)/umlwidgetcolorpage.cpp codegenerationoptionsbase.cpp codegenerationpolicybase.cpp codegenerationwizardbase.cpp codeviewerdialogbase.cpp codevieweroptionsbase.cpp diagrampropertiespage.cpp exportallviewsdialogbase.cpp umlrolepropertiesbase.cpp  umltemplatedialog.moc umlroleproperties.moc umlrolepropertiesbase.moc pkgcontentspage.moc exportallviewsdialogbase.moc activitypage.moc codevieweroptionsbase.moc activitydialog.moc exportallviewsdialog.moc umlviewdialog.moc codegenerationpolicybase.moc diagrampropertiespage.moc codegenerationoptionspage.moc notedialog.moc classpropdlg.moc codegenerationwizard.moc classgenpage.moc assocpage.moc codegenerationpolicypage.moc assocrolepage.moc codegenerationwizardbase.moc umlroledialog.moc classifierlistpage.moc codeeditor.moc statedialog.moc overwritedialogue.moc codegenerationoptionsbase.moc assocgenpage.moc umlattributedialog.moc codeviewerdialog.moc selectopdlg.moc assocpropdlg.moc codeviewerdialogbase.moc umloperationdialog.moc umlwidgetcolorpage.moc defaultcodegenpolicypage.moc parmpropdlg.moc diagramprintpage.moc settingsdlg.moc umlentityattributedialog.moc codevieweroptionspage.moc
	@echo 'creating libdialogs_la.all_cpp.cpp ...'; \
	rm -f libdialogs_la.all_cpp.files libdialogs_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libdialogs_la.all_cpp.final; \
	for file in activitydialog.cpp activitypage.cpp assocgenpage.cpp assocpage.cpp assocpropdlg.cpp assocrolepage.cpp classgenpage.cpp classifierlistpage.cpp classoptionspage.cpp classpropdlg.cpp classwizard.cpp codeeditor.cpp codegenerationoptionspage.cpp codegenerationpolicypage.cpp codegenerationwizard.cpp codeviewerdialog.cpp codevieweroptionspage.cpp defaultcodegenpolicypage.cpp diagramprintpage.cpp exportallviewsdialog.cpp notedialog.cpp overwritedialogue.cpp pkgcontentspage.cpp parmpropdlg.cpp selectopdlg.cpp settingsdlg.cpp statedialog.cpp umlattributedialog.cpp umlentityattributedialog.cpp umloperationdialog.cpp umltemplatedialog.cpp umlroledialog.cpp umlroleproperties.cpp umlviewdialog.cpp umlwidgetcolorpage.cpp codegenerationoptionsbase.cpp codegenerationpolicybase.cpp codegenerationwizardbase.cpp codeviewerdialogbase.cpp codevieweroptionsbase.cpp diagrampropertiespage.cpp exportallviewsdialogbase.cpp umlrolepropertiesbase.cpp ; do \
	  echo "#include \"$$file\"" >> libdialogs_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libdialogs_la.all_cpp.final; \
	done; \
	cat libdialogs_la.all_cpp.final libdialogs_la.all_cpp.files > libdialogs_la.all_cpp.cpp; \
	rm -f libdialogs_la.all_cpp.final libdialogs_la.all_cpp.files

#>+ 3
clean-final:
	-rm -f libdialogs_la.all_cpp.cpp

#>+ 3
final:
	$(MAKE) libdialogs_la_OBJECTS="$(libdialogs_la_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) libdialogs_la_OBJECTS="$(libdialogs_la_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) libdialogs_la_OBJECTS="$(libdialogs_la_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) libdialogs_la_OBJECTS="$(libdialogs_la_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 104
$(srcdir)/notedialog.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
umlviewdialog.o: umlviewdialog.moc 
activitydialog.lo: activitydialog.moc 
classgenpage.o: classgenpage.moc 
diagramprintpage.o: diagramprintpage.moc 
codegenerationwizard.o: codegenerationwizard.moc 
$(srcdir)/assocgenpage.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
$(srcdir)/umlroledialog.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
umlwidgetcolorpage.lo: umlwidgetcolorpage.moc 
overwritedialogue.o: overwritedialogue.moc 
$(srcdir)/exportallviewsdialog.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
codeviewerdialog.o: codeviewerdialog.moc 
$(srcdir)/defaultcodegenpolicypage.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
assocgenpage.lo: assocgenpage.moc 
assocrolepage.o: assocrolepage.moc 
codeviewerdialog.lo: codeviewerdialog.moc 
assocpage.lo: assocpage.moc 
nmcheck-am: nmcheck
classgenpage.lo: classgenpage.moc 
$(srcdir)/codeeditor.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
$(srcdir)/classifierlistpage.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
exportallviewsdialog.lo: exportallviewsdialog.moc 
umlattributedialog.lo: umlattributedialog.moc 
$(srcdir)/activitydialog.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
$(srcdir)/codevieweroptionspage.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
assocpropdlg.lo: assocpropdlg.moc 
codevieweroptionspage.o: codevieweroptionspage.moc 
umlwidgetcolorpage.o: umlwidgetcolorpage.moc 
notedialog.o: notedialog.moc 
$(srcdir)/codegenerationoptionspage.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
umloperationdialog.lo: umloperationdialog.moc 
exportallviewsdialog.o: exportallviewsdialog.moc 
$(srcdir)/pkgcontentspage.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
$(srcdir)/codegenerationpolicypage.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
$(srcdir)/assocpage.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
parmpropdlg.lo: parmpropdlg.moc 
umlentityattributedialog.lo: umlentityattributedialog.moc 
$(srcdir)/parmpropdlg.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
assocrolepage.lo: assocrolepage.moc 
statedialog.lo: statedialog.moc 
codegenerationpolicypage.o: codegenerationpolicypage.moc 
codegenerationoptionspage.lo: codegenerationoptionspage.moc 
selectopdlg.o: selectopdlg.moc 
defaultcodegenpolicypage.o: defaultcodegenpolicypage.moc 
umlroledialog.o: umlroledialog.moc 
defaultcodegenpolicypage.lo: defaultcodegenpolicypage.moc 
$(srcdir)/umlroleproperties.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
assocpropdlg.o: assocpropdlg.moc 
$(srcdir)/classgenpage.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
codegenerationoptionspage.o: codegenerationoptionspage.moc 
assocpage.o: assocpage.moc 
codeeditor.lo: codeeditor.moc 
$(srcdir)/activitypage.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
pkgcontentspage.lo: pkgcontentspage.moc 
classpropdlg.o: classpropdlg.moc 
$(srcdir)/umloperationdialog.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
$(srcdir)/diagramprintpage.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
umltemplatedialog.o: umltemplatedialog.moc 
diagramprintpage.lo: diagramprintpage.moc 
codeeditor.o: codeeditor.moc 
settingsdlg.o: settingsdlg.moc 
$(srcdir)/umlattributedialog.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
$(srcdir)/overwritedialogue.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
$(srcdir)/assocrolepage.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
notedialog.lo: notedialog.moc 
pkgcontentspage.o: pkgcontentspage.moc 
$(srcdir)/assocpropdlg.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
umlroleproperties.lo: umlroleproperties.moc 
$(srcdir)/umlviewdialog.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
activitydialog.o: activitydialog.moc 
overwritedialogue.lo: overwritedialogue.moc 
umlviewdialog.lo: umlviewdialog.moc 
codevieweroptionspage.lo: codevieweroptionspage.moc 
$(srcdir)/classpropdlg.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
$(srcdir)/umltemplatedialog.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
$(srcdir)/classoptionspage.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
umltemplatedialog.lo: umltemplatedialog.moc 
statedialog.o: statedialog.moc 
umlroledialog.lo: umlroledialog.moc 
classifierlistpage.o: classifierlistpage.moc 
assocgenpage.o: assocgenpage.moc 
activitypage.o: activitypage.moc 
activitypage.lo: activitypage.moc 
classpropdlg.lo: classpropdlg.moc 
umlentityattributedialog.o: umlentityattributedialog.moc 
$(srcdir)/classwizard.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
selectopdlg.lo: selectopdlg.moc 
nmcheck: 
$(srcdir)/codegenerationwizard.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
codegenerationpolicypage.lo: codegenerationpolicypage.moc 
classifierlistpage.lo: classifierlistpage.moc 
$(srcdir)/settingsdlg.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
settingsdlg.lo: settingsdlg.moc 
$(srcdir)/umlwidgetcolorpage.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
$(srcdir)/selectopdlg.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
$(srcdir)/statedialog.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
umlroleproperties.o: umlroleproperties.moc 
codegenerationwizard.lo: codegenerationwizard.moc 
$(srcdir)/umlentityattributedialog.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
umloperationdialog.o: umloperationdialog.moc 
parmpropdlg.o: parmpropdlg.moc 
$(srcdir)/codeviewerdialog.cpp: codegenerationoptionsbase.h codegenerationpolicybase.h codegenerationwizardbase.h codeviewerdialogbase.h codevieweroptionsbase.h diagrampropertiespage.h exportallviewsdialogbase.h umlrolepropertiesbase.h 
umlattributedialog.o: umlattributedialog.moc 

#>+ 120
umlrolepropertiesbase.cpp: $(srcdir)/umlrolepropertiesbase.ui umlrolepropertiesbase.h umlrolepropertiesbase.moc
	rm -f umlrolepropertiesbase.cpp
	echo '#include <kdialog.h>' > umlrolepropertiesbase.cpp
	echo '#include <klocale.h>' >> umlrolepropertiesbase.cpp
	$(UIC) -tr ${UIC_TR} -i umlrolepropertiesbase.h $(srcdir)/umlrolepropertiesbase.ui > umlrolepropertiesbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" umlrolepropertiesbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_umlrolepropertiesbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> umlrolepropertiesbase.cpp ;\
	rm -f umlrolepropertiesbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "umlrolepropertiesbase.moc"' >> umlrolepropertiesbase.cpp; else rm -f umlrolepropertiesbase.cpp ; exit $$ret ; fi

umlrolepropertiesbase.h: $(srcdir)/umlrolepropertiesbase.ui
	rm -rf umlrolepropertiesbase.h;
	$(UIC) $(srcdir)/umlrolepropertiesbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> umlrolepropertiesbase.h ;
umlrolepropertiesbase.moc: umlrolepropertiesbase.h
	$(MOC) umlrolepropertiesbase.h -o umlrolepropertiesbase.moc

codevieweroptionsbase.cpp: $(srcdir)/codevieweroptionsbase.ui codevieweroptionsbase.h codevieweroptionsbase.moc
	rm -f codevieweroptionsbase.cpp
	echo '#include <kdialog.h>' > codevieweroptionsbase.cpp
	echo '#include <klocale.h>' >> codevieweroptionsbase.cpp
	$(UIC) -tr ${UIC_TR} -i codevieweroptionsbase.h $(srcdir)/codevieweroptionsbase.ui > codevieweroptionsbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" codevieweroptionsbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_codevieweroptionsbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> codevieweroptionsbase.cpp ;\
	rm -f codevieweroptionsbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "codevieweroptionsbase.moc"' >> codevieweroptionsbase.cpp; else rm -f codevieweroptionsbase.cpp ; exit $$ret ; fi

codevieweroptionsbase.h: $(srcdir)/codevieweroptionsbase.ui
	rm -rf codevieweroptionsbase.h;
	$(UIC) $(srcdir)/codevieweroptionsbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> codevieweroptionsbase.h ;
codevieweroptionsbase.moc: codevieweroptionsbase.h
	$(MOC) codevieweroptionsbase.h -o codevieweroptionsbase.moc

codegenerationpolicybase.cpp: $(srcdir)/codegenerationpolicybase.ui codegenerationpolicybase.h codegenerationpolicybase.moc
	rm -f codegenerationpolicybase.cpp
	echo '#include <kdialog.h>' > codegenerationpolicybase.cpp
	echo '#include <klocale.h>' >> codegenerationpolicybase.cpp
	$(UIC) -tr ${UIC_TR} -i codegenerationpolicybase.h $(srcdir)/codegenerationpolicybase.ui > codegenerationpolicybase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" codegenerationpolicybase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_codegenerationpolicybase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> codegenerationpolicybase.cpp ;\
	rm -f codegenerationpolicybase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "codegenerationpolicybase.moc"' >> codegenerationpolicybase.cpp; else rm -f codegenerationpolicybase.cpp ; exit $$ret ; fi

codegenerationpolicybase.h: $(srcdir)/codegenerationpolicybase.ui
	rm -rf codegenerationpolicybase.h;
	$(UIC) $(srcdir)/codegenerationpolicybase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> codegenerationpolicybase.h ;
codegenerationpolicybase.moc: codegenerationpolicybase.h
	$(MOC) codegenerationpolicybase.h -o codegenerationpolicybase.moc

codegenerationwizardbase.cpp: $(srcdir)/codegenerationwizardbase.ui codegenerationwizardbase.h codegenerationwizardbase.moc
	rm -f codegenerationwizardbase.cpp
	echo '#include <kdialog.h>' > codegenerationwizardbase.cpp
	echo '#include <klocale.h>' >> codegenerationwizardbase.cpp
	$(UIC) -tr ${UIC_TR} -i codegenerationwizardbase.h $(srcdir)/codegenerationwizardbase.ui > codegenerationwizardbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" codegenerationwizardbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_codegenerationwizardbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> codegenerationwizardbase.cpp ;\
	rm -f codegenerationwizardbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "codegenerationwizardbase.moc"' >> codegenerationwizardbase.cpp; else rm -f codegenerationwizardbase.cpp ; exit $$ret ; fi

codegenerationwizardbase.h: $(srcdir)/codegenerationwizardbase.ui
	rm -rf codegenerationwizardbase.h;
	$(UIC) $(srcdir)/codegenerationwizardbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> codegenerationwizardbase.h ;
codegenerationwizardbase.moc: codegenerationwizardbase.h
	$(MOC) codegenerationwizardbase.h -o codegenerationwizardbase.moc

codegenerationoptionsbase.cpp: $(srcdir)/codegenerationoptionsbase.ui codegenerationoptionsbase.h codegenerationoptionsbase.moc
	rm -f codegenerationoptionsbase.cpp
	echo '#include <kdialog.h>' > codegenerationoptionsbase.cpp
	echo '#include <klocale.h>' >> codegenerationoptionsbase.cpp
	$(UIC) -tr ${UIC_TR} -i codegenerationoptionsbase.h $(srcdir)/codegenerationoptionsbase.ui > codegenerationoptionsbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" codegenerationoptionsbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_codegenerationoptionsbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> codegenerationoptionsbase.cpp ;\
	rm -f codegenerationoptionsbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "codegenerationoptionsbase.moc"' >> codegenerationoptionsbase.cpp; else rm -f codegenerationoptionsbase.cpp ; exit $$ret ; fi

codegenerationoptionsbase.h: $(srcdir)/codegenerationoptionsbase.ui
	rm -rf codegenerationoptionsbase.h;
	$(UIC) $(srcdir)/codegenerationoptionsbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> codegenerationoptionsbase.h ;
codegenerationoptionsbase.moc: codegenerationoptionsbase.h
	$(MOC) codegenerationoptionsbase.h -o codegenerationoptionsbase.moc

diagrampropertiespage.cpp: $(srcdir)/diagrampropertiespage.ui diagrampropertiespage.h diagrampropertiespage.moc
	rm -f diagrampropertiespage.cpp
	echo '#include <kdialog.h>' > diagrampropertiespage.cpp
	echo '#include <klocale.h>' >> diagrampropertiespage.cpp
	$(UIC) -tr ${UIC_TR} -i diagrampropertiespage.h $(srcdir)/diagrampropertiespage.ui > diagrampropertiespage.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" diagrampropertiespage.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_diagrampropertiespage,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> diagrampropertiespage.cpp ;\
	rm -f diagrampropertiespage.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "diagrampropertiespage.moc"' >> diagrampropertiespage.cpp; else rm -f diagrampropertiespage.cpp ; exit $$ret ; fi

diagrampropertiespage.h: $(srcdir)/diagrampropertiespage.ui
	rm -rf diagrampropertiespage.h;
	$(UIC) $(srcdir)/diagrampropertiespage.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> diagrampropertiespage.h ;
diagrampropertiespage.moc: diagrampropertiespage.h
	$(MOC) diagrampropertiespage.h -o diagrampropertiespage.moc

exportallviewsdialogbase.cpp: $(srcdir)/exportallviewsdialogbase.ui exportallviewsdialogbase.h exportallviewsdialogbase.moc
	rm -f exportallviewsdialogbase.cpp
	echo '#include <kdialog.h>' > exportallviewsdialogbase.cpp
	echo '#include <klocale.h>' >> exportallviewsdialogbase.cpp
	$(UIC) -tr ${UIC_TR} -i exportallviewsdialogbase.h $(srcdir)/exportallviewsdialogbase.ui > exportallviewsdialogbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" exportallviewsdialogbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_exportallviewsdialogbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> exportallviewsdialogbase.cpp ;\
	rm -f exportallviewsdialogbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "exportallviewsdialogbase.moc"' >> exportallviewsdialogbase.cpp; else rm -f exportallviewsdialogbase.cpp ; exit $$ret ; fi

exportallviewsdialogbase.h: $(srcdir)/exportallviewsdialogbase.ui
	rm -rf exportallviewsdialogbase.h;
	$(UIC) $(srcdir)/exportallviewsdialogbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> exportallviewsdialogbase.h ;
exportallviewsdialogbase.moc: exportallviewsdialogbase.h
	$(MOC) exportallviewsdialogbase.h -o exportallviewsdialogbase.moc

codeviewerdialogbase.cpp: $(srcdir)/codeviewerdialogbase.ui codeviewerdialogbase.h codeviewerdialogbase.moc
	rm -f codeviewerdialogbase.cpp
	echo '#include <kdialog.h>' > codeviewerdialogbase.cpp
	echo '#include <klocale.h>' >> codeviewerdialogbase.cpp
	$(UIC) -tr ${UIC_TR} -i codeviewerdialogbase.h $(srcdir)/codeviewerdialogbase.ui > codeviewerdialogbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" codeviewerdialogbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_codeviewerdialogbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> codeviewerdialogbase.cpp ;\
	rm -f codeviewerdialogbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "codeviewerdialogbase.moc"' >> codeviewerdialogbase.cpp; else rm -f codeviewerdialogbase.cpp ; exit $$ret ; fi

codeviewerdialogbase.h: $(srcdir)/codeviewerdialogbase.ui
	rm -rf codeviewerdialogbase.h;
	$(UIC) $(srcdir)/codeviewerdialogbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> codeviewerdialogbase.h ;
codeviewerdialogbase.moc: codeviewerdialogbase.h
	$(MOC) codeviewerdialogbase.h -o codeviewerdialogbase.moc
