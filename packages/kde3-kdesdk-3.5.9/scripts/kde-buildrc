################################################################################
# Configures the kde-build script.                                             #
# (c) 2000, 2001, 2002, 2003 by Frerich Raabe <raabe@kde.org>                  #
# (c) 2002, 2003 by Stephan Kulow <coolo@kde.org>                              #
################################################################################

# Where are your KDE sources?
#
KDESRCDIR="$PWD"

# Where your KDE should be build, leave empty if built in KDESRCDIR
#
KDEBUILDDIR=""

# Where shall I put the binaries?
#
KDEDIRS="/opt/kde"

# Where is your Qt 3.3.x?
#
QTDIR="/usr/lib/qt3"

# Should kppp be used to connect to the internet?
#
USE_KPPP="FALSE"

#Set this higher if it takes a long time to load kppp on your machine
#
KPPP_LOAD_TIME="5"

#Set this higher if it takes a long time for you to connect
#
KPPP_CONNECT_TIME="50"

# If you would like logfiles of the compilation process, specify a directory
# here in which the logfiles will be saved. If you want to disable logfile
# generation, leave this blank.
#
KDELOGDIR="$KDESRCDIR/log"

# Do you want the logfiles to be compressed? Set this variable to "yes" to
# make the script compress the logfiles using bzip2 (using gzip as a
# fallback is bzip2 cannot be found) and thereby save some diskspace.
#
COMPRESSLOGS="no"

# Whether or not you want to compile and install the kdesupport module.
#
USEKDESUPPORT="yes"

# Add modules you want to get compiled to this space-seperated list. Note that
# you don't have to mention the fundamental modules 'arts, 'kdesupport',
# 'kdelibs' and 'kdebase' here since the kde-build script will care about them
# automatically.
# See http://wiki.kdenews.org/tiki-index.php?page=KDE+CVS+Structure for a list
# of available modules including extragear-* or koffice.

KDEMODULES="kdetoys"

#KDEMODULES="kdeaccessibility kdeadmin kdeartwork kdebindings kdeedu kdegames kdegraphics kdemultimedia kdenetwork kdepim kdesdk kdetoys kdeutils kdeaddons kdevelop kdewebdev koffice"
#KDEMODULES="$KDEMODULES extragear-libs extragear-multimedia extragear-sysadmin extragear-office extragear-addons extragear-graphics extragear-network extragear-pim extragear-toys extragear-utils"


# If you only want to svn update the listed modules, set it to yes.
#
ONLYLISTEDMODULES=yes

# Do you want a clean install? This is recommended but please note that
# you cannot use your previous KDE desktop while the compilation is
# running. Set this to "no" to install the new snapshot over the previous
# one, otherwise set it to "yes".
#
INSTALLFROMSCRATCH="no"

# Do you plan to use this box otherwise while compiling? If so, you'd
# probably set this variable to "yes". If this is set to "no", the
# compilation process will try to eat up all the ressources, which speeds up
# the overall progress but makes it a PITA to work on this box. ;)
#
NICECOMPILE="yes"

# Set this variable to "yes" to activate certain cheap tweaks to speed up the
# compilation process. Those tweaks mainly consist of lowering the
# optimization of the resulting binary code.
#
TWEAKCOMPILE="no"

# For SVN users only: Do you have a SVN account? If so, set this variable to
# the correct name, otherwise leave this blank to use anonymous SVN.
#
ACCOUNT=""

#  For SVN users only: set this to "yes" in case you access svn.kde.org via
# SSH. Otherwise, set this to "no."
#
SSHACCOUNT="no"

# In case you left the ACCOUNT value empty (and thus use anonymous SVN
# access), you can specify an anonsvn mirror here. Check
# http://developer.kde.org/source/anonsvn.html for a list of mirror servers.
#
ANONSVNROOT="svn://anonsvn.kde.org/home/kde"

# Do you want any special path from subversion? If so, specify its path here e.g.
# /branches/KDE/3.3 or /tags/KDE/3.3.0. If you want the checked out branch, 
# leave this empty. Use "/trunk" if you want the development branch for sure 
# (leaving it empty will simply update whatever is there)
# 
# you can specify a module specific branch in through PATH_ARTS
#
SUBDIR="/trunk/KDE/@MODULE@"
SUBDIR_KDESUPPORT=/trunk/kdesupport
for esubdir in libs multimedia sysadmin office addons graphics network pim toys utils; do
  var=SUBDIR_EXTRAGEAR_`echo $esubdir | tr 'a-z' 'A-Z'`
  eval "$var=/trunk/extragear/$esubdir"
done

# SUBDIR_ARTS=/branches/arts/1.3

# Do you want only some subdirs from some module? Specify similiar to the
# below syntax
#CHECKOUT_PARTIAL_KDEMULTIMEDIA=juk
#CHECKOUT_PARTIAL_KDEEXTRAGEAR_2="kile konversation"

# If there are any modules in $KDESRCDIR which you don't want to be updated,
# you can specify them in this space-seperated list, e.g. "qt-copy kde-common".
#
EXCLUDE=""

#  --- TODO: not supported anymore with svn ---
# If you would like a virgin svn copy set this field to "yes", otherwise set
# this to "no" (if set to "yes", 'make -f admin/Makefile.common cvs-clean'
# is executed for every module).
# Developers might find this pretty dangerous considering that they could have
# forgotten to 'svn add' a file... ;-)
# Users who want to stay at the bleeding edge will want to activate this in
# order to make sure there aren't any remains of a previous compile.
#
#CVS_CLEAN="no"

# Rely on the dependencies for Makefiles and configure?
# If you dare to trust the build system, set it to "yes" ;-)
#
INCREMENTAL_BUILD="yes"

# Flags to be passed to the 'configure' script.
# A note: --enable-debug adds minimum debug symbols while an appended
# =full gives you the full power and fills up your beloved hdd much better
# --disable-closure is actually prefered if it works for you. It will
# not create closure targets but link with some compiler flags to make
# sure the compiler will fail when undefined symbols are there - which
# is much faster if it works for you.
#
# You can define module-specific configure flags using
# CONFIGUREFLAGS_ARTS, CONFIGUREFLAGS_KDELIBS, etc. 
# NOTE: These used to be appended to the general $CONFIGUREFLAGS value.
# This is no longer true, you need to use $CONFIGUREFLAGS in the _MODNAME
# version. In case the module name contains dashes ('-'), those needs to
# be replaced with underscores.
#
CONFIGUREFLAGS="--enable-debug --disable-closure"
# example: CONFIGUREFLAGS_KDEPIM="$CONFIGUREFLAGS --enable-debug=full"
# example: CONFIGUREFLAGS_KDEEXTRAGEAR_2="$CONFIGUREFLAGS --without-java"

# Set it to the path for unsermake if you want to test it instead of
# automake.
# USE_UNSERMAKE="$KDESRCDIR/kdenonbeta/unsermake/unsermake"

# List modules here for which unsermake should not be used.
#
NO_UNSERMAKE_MODULES="kdenonbeta kdebindings"

# If you use an extra build directory (KDEBUILDDIR), setting this to yes will
# remove a module's build directory before configure is called.
#
BUILD_CLEAN=no

# If you would like to pass any parameters to make add them here. If you
# do not want to add any parameters leave this empty.
# example:
# MAKE_OPTS="-j 4 -l 4"
#
MAKE_OPTS=""

# If you use unsermake, you can define different flags for the actual
# compilation process. This is useful if you distribute the compilation
# process over several computers, but need to link on one. So you would
# define -j3 here and nothing above.
# You can also use the special "DISTCC" keyword here; if found, it will
# be replaced by the number of hosts listed in the $DISTCC_HOSTS
# environment variable, multiplied by two. Hence, 'DISTCC_HOSTS="a b c"' and
# 'MAKE_OPTS_COMPILE="-jDISTCC"' will result in 'MAKE_OPTS_COMPILE="-j6"'.
# If you set something here, the value will be used alone, otherwise
# MAKE_OPTS will be used alone.
# You can use the special "TEAMBUILDER" keyword too, it will put the
# returned value of tbcompiler -joblimit in there.
#
#MAKE_OPTS_COMPILE=""

# If you would like to compile with a different make, please set it
# here.
#
#MAKE=make

# vim:et:ts=2:sw=2
