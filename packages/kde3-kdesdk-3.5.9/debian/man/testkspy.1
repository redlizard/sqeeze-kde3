.\"                                      Hey, EMACS: -*- nroff -*-
.\" First parameter, NAME, should be all caps
.\" Second parameter, SECTION, should be 1-8, maybe w/ subsection
.\" other parameters are allowed: see man(7), man(1)
.TH TESTKSPY 1 "May 3, 2001"
.\" Please adjust this date whenever revising the manpage.
.\"
.\" Some roff macros, for reference:
.\" .nh        disable hyphenation
.\" .hy        enable hyphenation
.\" .ad l      left justify
.\" .ad b      justify to both left and right margins
.\" .nf        disable filling
.\" .fi        enable filling
.\" .br        insert line break
.\" .sp <n>    insert n+1 empty lines
.\" for manpage-specific macros, see man(7)
.SH NAME
testkspy \- show off KSpy's capabilities
.SH SYNOPSIS
.B testkspy
.RI "[ " generic-options " ]"
.SH DESCRIPTION
\fBtestkspy\fP is a small application that shows off KSpy's capabilities.
It simply uses KSpy to spy on itself.
.PP
\fBKSpy\fP is a tiny library which can be used to graphically display
the QObjects in use by a Qt/KDE app.  In addition to the object tree,
you can also view the properties, signals and slots of any QObject.
.PP
Basically it provides much the same info as QObject::dumpObjectTree() and
QObject::dumpObjectInfo(), but in a much more convenient form.  KSpy has
minimal overhead for the application, because the kspy library is
loaded dynamically using KLibLoader.
.PP
This utility is part of the KDE Software Development Kit.
.SH OPTIONS
For a full summary of options, run \fItestkspy \-\-help\fP.
.SH SEE ALSO
Instructions on using KSpy with your own applications can be found in
\fI/usr/share/doc/kspy/README\fP.
.SH AUTHOR
KSpy was written by Richard Moore <rich@kde.org>.
.br
This manual page was prepared by Ben Burton <bab@debian.org>
for the Debian GNU/Linux system (but may be used by others).
