# Makefile.in generated by automake 1.10.1 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = kcachegrind$(EXEEXT)
subdir = kcachegrind/kcachegrind
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(mimeapplicationdir)" "$(DESTDIR)$(rcdir)" \
	"$(DESTDIR)$(tipdir)" "$(DESTDIR)$(xdg_appsdir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_kcachegrind_OBJECTS = loader.$(OBJEXT) cachegrindloader.$(OBJEXT) \
	treemap.$(OBJEXT) pool.$(OBJEXT) main.$(OBJEXT) \
	configuration.$(OBJEXT) functionselection.$(OBJEXT) \
	coverage.$(OBJEXT) partgraph.$(OBJEXT) toplevel.$(OBJEXT) \
	stackselection.$(OBJEXT) stackbrowser.$(OBJEXT) \
	subcost.$(OBJEXT) tracedata.$(OBJEXT) partselection.$(OBJEXT) \
	configdlg.$(OBJEXT) utils.$(OBJEXT) fixcost.$(OBJEXT) \
	traceitemview.$(OBJEXT) instrview.$(OBJEXT) tabview.$(OBJEXT) \
	sourceview.$(OBJEXT) callmapview.$(OBJEXT) callview.$(OBJEXT) \
	coverageview.$(OBJEXT) costtypeview.$(OBJEXT) \
	partview.$(OBJEXT) listutils.$(OBJEXT) costtypeitem.$(OBJEXT) \
	multiview.$(OBJEXT) callitem.$(OBJEXT) coverageitem.$(OBJEXT) \
	sourceitem.$(OBJEXT) costlistitem.$(OBJEXT) \
	partlistitem.$(OBJEXT) functionitem.$(OBJEXT) \
	instritem.$(OBJEXT) stackitem.$(OBJEXT) \
	callgraphview.$(OBJEXT)
#>- kcachegrind_OBJECTS = $(am_kcachegrind_OBJECTS)
#>+ 19
kcachegrind_final_OBJECTS = kcachegrind.all_cpp.o 
kcachegrind_nofinal_OBJECTS = loader.$(OBJEXT) cachegrindloader.$(OBJEXT) \
	treemap.$(OBJEXT) pool.$(OBJEXT) main.$(OBJEXT) \
	configuration.$(OBJEXT) functionselection.$(OBJEXT) \
	coverage.$(OBJEXT) partgraph.$(OBJEXT) toplevel.$(OBJEXT) \
	stackselection.$(OBJEXT) stackbrowser.$(OBJEXT) \
	subcost.$(OBJEXT) tracedata.$(OBJEXT) partselection.$(OBJEXT) \
	configdlg.$(OBJEXT) utils.$(OBJEXT) fixcost.$(OBJEXT) \
	traceitemview.$(OBJEXT) instrview.$(OBJEXT) tabview.$(OBJEXT) \
	sourceview.$(OBJEXT) callmapview.$(OBJEXT) callview.$(OBJEXT) \
	coverageview.$(OBJEXT) costtypeview.$(OBJEXT) \
	partview.$(OBJEXT) listutils.$(OBJEXT) costtypeitem.$(OBJEXT) \
	multiview.$(OBJEXT) callitem.$(OBJEXT) coverageitem.$(OBJEXT) \
	sourceitem.$(OBJEXT) costlistitem.$(OBJEXT) \
	partlistitem.$(OBJEXT) functionitem.$(OBJEXT) \
	instritem.$(OBJEXT) stackitem.$(OBJEXT) \
	callgraphview.$(OBJEXT) functionselectionbase.$(OBJEXT) stackselectionbase.$(OBJEXT) partselectionbase.$(OBJEXT) configdlgbase.$(OBJEXT)
@KDE_USE_FINAL_FALSE@kcachegrind_OBJECTS = $(kcachegrind_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@kcachegrind_OBJECTS = $(kcachegrind_final_OBJECTS)
am__DEPENDENCIES_1 =
kcachegrind_DEPENDENCIES = $(am__DEPENDENCIES_1)
#>- kcachegrind_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(kcachegrind_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
kcachegrind_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(kcachegrind_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(kcachegrind_SOURCES)
DIST_SOURCES = $(kcachegrind_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
mimeapplicationDATA_INSTALL = $(INSTALL_DATA)
rcDATA_INSTALL = $(INSTALL_DATA)
tipDATA_INSTALL = $(INSTALL_DATA)
xdg_appsDATA_INSTALL = $(INSTALL_DATA)
DATA = $(mimeapplication_DATA) $(rc_DATA) $(tip_DATA) $(xdg_apps_DATA)
ETAGS = etags
CTAGS = ctags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DBIV_INCLUDES = @DBIV_INCLUDES@
DBIV_LDFLAGS = @DBIV_LDFLAGS@
DBIV_NAME = @DBIV_NAME@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCACHEGRIND_VERSION = @KCACHEGRIND_VERSION@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
KMTRACE_LIBS = @KMTRACE_LIBS@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBXML_CFLAGS = @LIBXML_CFLAGS@
LIBXML_LIBS = @LIBXML_LIBS@
LIBXML_RPATH = @LIBXML_RPATH@
LIBXSLT_CFLAGS = @LIBXSLT_CFLAGS@
LIBXSLT_LIBS = @LIBXSLT_LIBS@
LIBXSLT_RPATH = @LIBXSLT_RPATH@
LIBZ = @LIBZ@
LIB_DBIV = @LIB_DBIV@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
SVNCONFIG = @SVNCONFIG@
SVNLD = @SVNLD@
SVN_CPPFLAGS = @SVN_CPPFLAGS@
SVN_INCLUDE = @SVN_INCLUDE@
SVN_LIB = @SVN_LIB@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@
#>- kcachegrind_SOURCES = \
#>-  functionselectionbase.ui \
#>-  stackselectionbase.ui \
#>-  partselectionbase.ui \
#>-  configdlgbase.ui \
#>-  loader.cpp cachegrindloader.cpp treemap.cpp pool.cpp \
#>-  main.cpp configuration.cpp \
#>-  functionselection.cpp coverage.cpp partgraph.cpp \
#>-  toplevel.cpp stackselection.cpp stackbrowser.cpp \
#>-  subcost.cpp tracedata.cpp partselection.cpp configdlg.cpp \
#>-  utils.cpp fixcost.cpp \
#>-  traceitemview.cpp instrview.cpp tabview.cpp \
#>-  sourceview.cpp callmapview.cpp callview.cpp \
#>-  coverageview.cpp costtypeview.cpp partview.cpp \
#>-  listutils.cpp costtypeitem.cpp multiview.cpp \
#>-  callitem.cpp coverageitem.cpp sourceitem.cpp \
#>-  costlistitem.cpp partlistitem.cpp functionitem.cpp \
#>-  instritem.cpp stackitem.cpp callgraphview.cpp
#>+ 18
kcachegrind_SOURCES=\
  \
  \
  \
  \
 loader.cpp cachegrindloader.cpp treemap.cpp pool.cpp \
 main.cpp configuration.cpp \
 functionselection.cpp coverage.cpp partgraph.cpp \
 toplevel.cpp stackselection.cpp stackbrowser.cpp \
 subcost.cpp tracedata.cpp partselection.cpp configdlg.cpp \
 utils.cpp fixcost.cpp \
 traceitemview.cpp instrview.cpp tabview.cpp \
 sourceview.cpp callmapview.cpp callview.cpp \
 coverageview.cpp costtypeview.cpp partview.cpp \
 listutils.cpp costtypeitem.cpp multiview.cpp \
 callitem.cpp coverageitem.cpp sourceitem.cpp \
 costlistitem.cpp partlistitem.cpp functionitem.cpp \
 instritem.cpp stackitem.cpp callgraphview.cpp functionselectionbase.cpp stackselectionbase.cpp partselectionbase.cpp configdlgbase.cpp

kcachegrind_COMPILE_FIRST = ../version.h
kcachegrind_LDADD = $(LIB_KIO)
KDE_ICON = AUTO
xdg_apps_DATA = kcachegrind.desktop
mimeapplicationdir = $(kde_mimedir)/application
mimeapplication_DATA = x-kcachegrind.desktop
EXTRA_DIST = \
 kcachegrind.desktop      \
 x-kcachegrind.desktop    \
 hi32-app-kcachegrind.png \
 hi48-app-kcachegrind.png \
 Doxyfile                 \
 kcachegrindui.rc


# set the include path for X, qt and KDE
INCLUDES = $(all_includes)
#>- METASOURCES = AUTO

# the library search path. 
kcachegrind_LDFLAGS = $(all_libraries) $(KDE_RPATH)
rcdir = $(kde_datadir)/kcachegrind
rc_DATA = kcachegrindui.rc
tipdir = $(kde_datadir)/kcachegrind
tip_DATA = tips
#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kcachegrind/kcachegrind/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --foreign  kcachegrind/kcachegrind/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kcachegrind/kcachegrind/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  kcachegrind/kcachegrind/Makefile
	cd $(top_srcdir) && perl admin/am_edit kcachegrind/kcachegrind/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
kcachegrind$(EXEEXT): $(kcachegrind_OBJECTS) $(kcachegrind_DEPENDENCIES) 
	@rm -f kcachegrind$(EXEEXT)
	$(kcachegrind_LINK) $(kcachegrind_OBJECTS) $(kcachegrind_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cachegrindloader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/callgraphview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/callitem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/callmapview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/callview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/configdlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/configuration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/costlistitem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/costtypeitem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/costtypeview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/coverage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/coverageitem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/coverageview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fixcost.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/functionitem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/functionselection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/instritem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/instrview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/listutils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multiview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/partgraph.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/partlistitem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/partselection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/partview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pool.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sourceitem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sourceview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stackbrowser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stackitem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stackselection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/subcost.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tabview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/toplevel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tracedata.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/traceitemview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/treemap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utils.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-mimeapplicationDATA: $(mimeapplication_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(mimeapplicationdir)" || $(MKDIR_P) "$(DESTDIR)$(mimeapplicationdir)"
	@list='$(mimeapplication_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(mimeapplicationDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(mimeapplicationdir)/$$f'"; \
	  $(mimeapplicationDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(mimeapplicationdir)/$$f"; \
	done

uninstall-mimeapplicationDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(mimeapplication_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(mimeapplicationdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(mimeapplicationdir)/$$f"; \
	done
install-rcDATA: $(rc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(rcdir)" || $(MKDIR_P) "$(DESTDIR)$(rcdir)"
	@list='$(rc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(rcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(rcdir)/$$f'"; \
	  $(rcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(rcdir)/$$f"; \
	done

uninstall-rcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(rc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(rcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(rcdir)/$$f"; \
	done
install-tipDATA: $(tip_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(tipdir)" || $(MKDIR_P) "$(DESTDIR)$(tipdir)"
	@list='$(tip_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(tipDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(tipdir)/$$f'"; \
	  $(tipDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(tipdir)/$$f"; \
	done

uninstall-tipDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(tip_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(tipdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(tipdir)/$$f"; \
	done
install-xdg_appsDATA: $(xdg_apps_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xdg_appsdir)" || $(MKDIR_P) "$(DESTDIR)$(xdg_appsdir)"
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(xdg_appsDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  $(xdg_appsDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

uninstall-xdg_appsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(mimeapplicationdir)" "$(DESTDIR)$(rcdir)" "$(DESTDIR)$(tipdir)" "$(DESTDIR)$(xdg_appsdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-ui clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

#>- install-data-am: install-mimeapplicationDATA install-rcDATA \
#>- 	install-tipDATA install-xdg_appsDATA
#>+ 2
install-data-am: install-kde-icons  install-mimeapplicationDATA install-rcDATA \
	install-tipDATA install-xdg_appsDATA

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

#>- uninstall-am: uninstall-binPROGRAMS uninstall-mimeapplicationDATA \
#>- 	uninstall-rcDATA uninstall-tipDATA uninstall-xdg_appsDATA
#>+ 2
uninstall-am: uninstall-kde-icons  uninstall-binPROGRAMS uninstall-mimeapplicationDATA \
	uninstall-rcDATA uninstall-tipDATA uninstall-xdg_appsDATA

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-mimeapplicationDATA install-pdf install-pdf-am \
	install-ps install-ps-am install-rcDATA install-strip \
	install-tipDATA install-xdg_appsDATA installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-mimeapplicationDATA uninstall-rcDATA \
	uninstall-tipDATA uninstall-xdg_appsDATA


messages: rc.cpp
	$(PREPARETIPS) > tips.cpp
	LIST=`find . -name \*.h -o -name \*.cpp`; \
	if test -n "$$LIST"; then \
	 $(XGETTEXT) $$LIST -o $(podir)/kcachegrind.pot; \
	fi
	rm -f tips.cpp
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
multiview.moc: $(srcdir)/multiview.h
	$(MOC) $(srcdir)/multiview.h -o multiview.moc

#>+ 2
mocs: multiview.moc

#>+ 3
coverageview.moc: $(srcdir)/coverageview.h
	$(MOC) $(srcdir)/coverageview.h -o coverageview.moc

#>+ 2
mocs: coverageview.moc

#>+ 3
instrview.moc: $(srcdir)/instrview.h
	$(MOC) $(srcdir)/instrview.h -o instrview.moc

#>+ 2
mocs: instrview.moc

#>+ 3
callgraphview.moc: $(srcdir)/callgraphview.h
	$(MOC) $(srcdir)/callgraphview.h -o callgraphview.moc

#>+ 2
mocs: callgraphview.moc

#>+ 3
dumpselection.moc: $(srcdir)/dumpselection.h
	$(MOC) $(srcdir)/dumpselection.h -o dumpselection.moc

#>+ 2
mocs: dumpselection.moc

#>+ 3
partgraph.moc: $(srcdir)/partgraph.h
	$(MOC) $(srcdir)/partgraph.h -o partgraph.moc

#>+ 2
mocs: partgraph.moc

#>+ 3
sourceview.moc: $(srcdir)/sourceview.h
	$(MOC) $(srcdir)/sourceview.h -o sourceview.moc

#>+ 2
mocs: sourceview.moc

#>+ 3
configdlg.moc: $(srcdir)/configdlg.h
	$(MOC) $(srcdir)/configdlg.h -o configdlg.moc

#>+ 2
mocs: configdlg.moc

#>+ 3
functionselection.moc: $(srcdir)/functionselection.h
	$(MOC) $(srcdir)/functionselection.h -o functionselection.moc

#>+ 2
mocs: functionselection.moc

#>+ 3
stackselection.moc: $(srcdir)/stackselection.h
	$(MOC) $(srcdir)/stackselection.h -o stackselection.moc

#>+ 2
mocs: stackselection.moc

#>+ 3
treemap.moc: $(srcdir)/treemap.h
	$(MOC) $(srcdir)/treemap.h -o treemap.moc

#>+ 2
mocs: treemap.moc

#>+ 3
callview.moc: $(srcdir)/callview.h
	$(MOC) $(srcdir)/callview.h -o callview.moc

#>+ 2
mocs: callview.moc

#>+ 3
costtypeview.moc: $(srcdir)/costtypeview.h
	$(MOC) $(srcdir)/costtypeview.h -o costtypeview.moc

#>+ 2
mocs: costtypeview.moc

#>+ 3
partview.moc: $(srcdir)/partview.h
	$(MOC) $(srcdir)/partview.h -o partview.moc

#>+ 2
mocs: partview.moc

#>+ 3
toplevel.moc: $(srcdir)/toplevel.h
	$(MOC) $(srcdir)/toplevel.h -o toplevel.moc

#>+ 2
mocs: toplevel.moc

#>+ 3
loader.moc: $(srcdir)/loader.h
	$(MOC) $(srcdir)/loader.h -o loader.moc

#>+ 2
mocs: loader.moc

#>+ 3
callmapview.moc: $(srcdir)/callmapview.h
	$(MOC) $(srcdir)/callmapview.h -o callmapview.moc

#>+ 2
mocs: callmapview.moc

#>+ 3
tabview.moc: $(srcdir)/tabview.h
	$(MOC) $(srcdir)/tabview.h -o tabview.moc

#>+ 2
mocs: tabview.moc

#>+ 3
partselection.moc: $(srcdir)/partselection.h
	$(MOC) $(srcdir)/partselection.h -o partselection.moc

#>+ 2
mocs: partselection.moc

#>+ 3
clean-metasources:
	-rm -f  multiview.moc coverageview.moc instrview.moc callgraphview.moc dumpselection.moc partgraph.moc sourceview.moc configdlg.moc functionselection.moc stackselection.moc treemap.moc callview.moc costtypeview.moc partview.moc toplevel.moc loader.moc callmapview.moc tabview.moc partselection.moc

#>+ 2
KDE_DIST=pool.h dumpselectionbase.ui tabview.h callgraphview.h partlistitem.h instrview.h callview.h callitem.h instritem.h sourceview.h toplevel.h coverageview.h dumpmanager.cpp partgraph.h stackbrowser.h subcost.h dumpselection.h stackselectionbase.ui sourceitem.h functionselection.h partselectionbase.ui costtypeitem.h functionselectionbase.ui configdlg.h stackitem.h tips coverageitem.h tracedata.h traceitemview.h fixcost.h costlistitem.h configdlgbase.ui stackselection.h dumpselection.cpp treemap.h configuration.h callmapview.h multiview.h utils.h costtypeview.h Makefile.in listutils.h dumpmanager.h partselection.h coverage.h loader.h functionitem.h partview.h lo32-app-kcachegrind.png lo16-app-kcachegrind.png Makefile.am 

#>+ 7
clean-ui:
	-rm -f \
	functionselectionbase.cpp functionselectionbase.h functionselectionbase.moc \
	stackselectionbase.cpp stackselectionbase.h stackselectionbase.moc \
	partselectionbase.cpp partselectionbase.h partselectionbase.moc \
	configdlgbase.cpp configdlgbase.h configdlgbase.moc 

#>+ 2
docs-am:

#>+ 16
install-kde-icons:
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/locolor/32x32/apps
	$(INSTALL_DATA) $(srcdir)/lo32-app-kcachegrind.png $(DESTDIR)$(kde_icondir)/locolor/32x32/apps/kcachegrind.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps
	$(INSTALL_DATA) $(srcdir)/hi32-app-kcachegrind.png $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/kcachegrind.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/locolor/16x16/apps
	$(INSTALL_DATA) $(srcdir)/lo16-app-kcachegrind.png $(DESTDIR)$(kde_icondir)/locolor/16x16/apps/kcachegrind.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps
	$(INSTALL_DATA) $(srcdir)/hi48-app-kcachegrind.png $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/kcachegrind.png

uninstall-kde-icons:
	-rm -f $(DESTDIR)$(kde_icondir)/locolor/32x32/apps/kcachegrind.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/kcachegrind.png
	-rm -f $(DESTDIR)$(kde_icondir)/locolor/16x16/apps/kcachegrind.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/kcachegrind.png

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  kcachegrind/kcachegrind/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  kcachegrind/kcachegrind/Makefile
	cd $(top_srcdir) && perl admin/am_edit kcachegrind/kcachegrind/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
kcachegrind.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/loader.cpp $(srcdir)/cachegrindloader.cpp $(srcdir)/treemap.cpp $(srcdir)/pool.cpp $(srcdir)/main.cpp $(srcdir)/configuration.cpp $(srcdir)/functionselection.cpp $(srcdir)/coverage.cpp $(srcdir)/partgraph.cpp $(srcdir)/toplevel.cpp $(srcdir)/stackselection.cpp $(srcdir)/stackbrowser.cpp $(srcdir)/subcost.cpp $(srcdir)/tracedata.cpp $(srcdir)/partselection.cpp $(srcdir)/configdlg.cpp $(srcdir)/utils.cpp $(srcdir)/fixcost.cpp $(srcdir)/traceitemview.cpp $(srcdir)/instrview.cpp $(srcdir)/tabview.cpp $(srcdir)/sourceview.cpp $(srcdir)/callmapview.cpp $(srcdir)/callview.cpp $(srcdir)/coverageview.cpp $(srcdir)/costtypeview.cpp $(srcdir)/partview.cpp $(srcdir)/listutils.cpp $(srcdir)/costtypeitem.cpp $(srcdir)/multiview.cpp $(srcdir)/callitem.cpp $(srcdir)/coverageitem.cpp $(srcdir)/sourceitem.cpp $(srcdir)/costlistitem.cpp $(srcdir)/partlistitem.cpp $(srcdir)/functionitem.cpp $(srcdir)/instritem.cpp $(srcdir)/stackitem.cpp $(srcdir)/callgraphview.cpp functionselectionbase.cpp stackselectionbase.cpp partselectionbase.cpp configdlgbase.cpp  coverageview.moc multiview.moc instrview.moc callgraphview.moc partselectionbase.moc partgraph.moc sourceview.moc configdlg.moc functionselectionbase.moc functionselection.moc stackselection.moc treemap.moc callview.moc costtypeview.moc toplevel.moc partview.moc configdlgbase.moc loader.moc callmapview.moc stackselectionbase.moc partselection.moc tabview.moc
	@echo 'creating kcachegrind.all_cpp.cpp ...'; \
	rm -f kcachegrind.all_cpp.files kcachegrind.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> kcachegrind.all_cpp.final; \
	for file in loader.cpp cachegrindloader.cpp treemap.cpp pool.cpp main.cpp configuration.cpp functionselection.cpp coverage.cpp partgraph.cpp toplevel.cpp stackselection.cpp stackbrowser.cpp subcost.cpp tracedata.cpp partselection.cpp configdlg.cpp utils.cpp fixcost.cpp traceitemview.cpp instrview.cpp tabview.cpp sourceview.cpp callmapview.cpp callview.cpp coverageview.cpp costtypeview.cpp partview.cpp listutils.cpp costtypeitem.cpp multiview.cpp callitem.cpp coverageitem.cpp sourceitem.cpp costlistitem.cpp partlistitem.cpp functionitem.cpp instritem.cpp stackitem.cpp callgraphview.cpp functionselectionbase.cpp stackselectionbase.cpp partselectionbase.cpp configdlgbase.cpp ; do \
	  echo "#include \"$$file\"" >> kcachegrind.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> kcachegrind.all_cpp.final; \
	done; \
	cat kcachegrind.all_cpp.final kcachegrind.all_cpp.files > kcachegrind.all_cpp.cpp; \
	rm -f kcachegrind.all_cpp.final kcachegrind.all_cpp.files

#>+ 3
clean-final:
	-rm -f kcachegrind.all_cpp.cpp

#>+ 3
final:
	$(MAKE) kcachegrind_OBJECTS="$(kcachegrind_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) kcachegrind_OBJECTS="$(kcachegrind_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) kcachegrind_OBJECTS="$(kcachegrind_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) kcachegrind_OBJECTS="$(kcachegrind_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 85
stackselectionbase.cpp: ../version.h 
: ../version.h 
$(srcdir)/pool.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
$(srcdir)/coverage.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
$(srcdir)/loader.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
$(srcdir)/partgraph.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
coverageview.lo: coverageview.moc 
$(srcdir)/main.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
$(srcdir)/tabview.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
$(srcdir)/tracedata.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
$(srcdir)/partlistitem.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
$(srcdir)/toplevel.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
callview.lo: callview.moc 
$(srcdir)/callmapview.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
functionselection.lo: functionselection.moc 
treemap.o: treemap.moc 
$(srcdir)/treemap.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
nmcheck-am: nmcheck
tabview.o: tabview.moc 
callgraphview.o: callgraphview.moc 
$(srcdir)/traceitemview.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
partview.lo: partview.moc 
callgraphview.lo: callgraphview.moc 
multiview.lo: multiview.moc 
partgraph.lo: partgraph.moc 
$(srcdir)/listutils.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
$(srcdir)/cachegrindloader.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
$(srcdir)/instrview.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
stackselection.lo: stackselection.moc 
$(srcdir)/costtypeview.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
$(srcdir)/stackselection.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
costtypeview.lo: costtypeview.moc 
configdlgbase.cpp: ../version.h 
toplevel.o: toplevel.moc 
$(srcdir)/stackitem.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
$(srcdir)/instritem.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
sourceview.o: sourceview.moc 
dumpselection.lo: dumpselection.moc 
partselection.lo: partselection.moc 
$(srcdir)/utils.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
$(srcdir)/configdlg.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
$(srcdir)/costlistitem.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
instrview.o: instrview.moc 
callmapview.lo: callmapview.moc 
$(srcdir)/callgraphview.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
tabview.lo: tabview.moc 
partselectionbase.cpp: ../version.h 
toplevel.lo: toplevel.moc 
configdlg.lo: configdlg.moc 
dumpselection.o: dumpselection.moc 
loader.lo: loader.moc 
$(srcdir)/partview.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
$(srcdir)/coverageview.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
multiview.o: multiview.moc 
$(srcdir)/functionitem.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
loader.o: loader.moc 
treemap.lo: treemap.moc 
partview.o: partview.moc 
callview.o: callview.moc 
$(srcdir)/configuration.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
$(srcdir)/sourceitem.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
stackselection.o: stackselection.moc 
costtypeview.o: costtypeview.moc 
callmapview.o: callmapview.moc 
$(srcdir)/sourceview.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
$(srcdir)/costtypeitem.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
$(srcdir)/coverageitem.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
$(srcdir)/fixcost.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
functionselectionbase.cpp: ../version.h 
instrview.lo: instrview.moc 
partgraph.o: partgraph.moc 
coverageview.o: coverageview.moc 
functionselection.o: functionselection.moc 
configdlg.o: configdlg.moc 
nmcheck: 
$(srcdir)/subcost.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
sourceview.lo: sourceview.moc 
$(srcdir)/callview.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
$(srcdir)/multiview.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
$(srcdir)/callitem.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
$(srcdir)/partselection.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
$(srcdir)/functionselection.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 
partselection.o: partselection.moc 
$(srcdir)/stackbrowser.cpp: functionselectionbase.h stackselectionbase.h partselectionbase.h configdlgbase.h ../version.h 

#>+ 60
stackselectionbase.cpp: $(srcdir)/stackselectionbase.ui stackselectionbase.h stackselectionbase.moc
	rm -f stackselectionbase.cpp
	echo '#include <kdialog.h>' > stackselectionbase.cpp
	echo '#include <klocale.h>' >> stackselectionbase.cpp
	$(UIC) -tr ${UIC_TR} -i stackselectionbase.h $(srcdir)/stackselectionbase.ui > stackselectionbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" stackselectionbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_stackselectionbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> stackselectionbase.cpp ;\
	rm -f stackselectionbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "stackselectionbase.moc"' >> stackselectionbase.cpp; else rm -f stackselectionbase.cpp ; exit $$ret ; fi

stackselectionbase.h: $(srcdir)/stackselectionbase.ui
	rm -rf stackselectionbase.h;
	$(UIC) $(srcdir)/stackselectionbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> stackselectionbase.h ;
stackselectionbase.moc: stackselectionbase.h
	$(MOC) stackselectionbase.h -o stackselectionbase.moc

partselectionbase.cpp: $(srcdir)/partselectionbase.ui partselectionbase.h partselectionbase.moc
	rm -f partselectionbase.cpp
	echo '#include <kdialog.h>' > partselectionbase.cpp
	echo '#include <klocale.h>' >> partselectionbase.cpp
	$(UIC) -tr ${UIC_TR} -i partselectionbase.h $(srcdir)/partselectionbase.ui > partselectionbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" partselectionbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_partselectionbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> partselectionbase.cpp ;\
	rm -f partselectionbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "partselectionbase.moc"' >> partselectionbase.cpp; else rm -f partselectionbase.cpp ; exit $$ret ; fi

partselectionbase.h: $(srcdir)/partselectionbase.ui
	rm -rf partselectionbase.h;
	$(UIC) $(srcdir)/partselectionbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> partselectionbase.h ;
partselectionbase.moc: partselectionbase.h
	$(MOC) partselectionbase.h -o partselectionbase.moc

configdlgbase.cpp: $(srcdir)/configdlgbase.ui configdlgbase.h configdlgbase.moc
	rm -f configdlgbase.cpp
	echo '#include <kdialog.h>' > configdlgbase.cpp
	echo '#include <klocale.h>' >> configdlgbase.cpp
	$(UIC) -tr ${UIC_TR} -i configdlgbase.h $(srcdir)/configdlgbase.ui > configdlgbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" configdlgbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_configdlgbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> configdlgbase.cpp ;\
	rm -f configdlgbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "configdlgbase.moc"' >> configdlgbase.cpp; else rm -f configdlgbase.cpp ; exit $$ret ; fi

configdlgbase.h: $(srcdir)/configdlgbase.ui
	rm -rf configdlgbase.h;
	$(UIC) $(srcdir)/configdlgbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> configdlgbase.h ;
configdlgbase.moc: configdlgbase.h
	$(MOC) configdlgbase.h -o configdlgbase.moc

functionselectionbase.cpp: $(srcdir)/functionselectionbase.ui functionselectionbase.h functionselectionbase.moc
	rm -f functionselectionbase.cpp
	echo '#include <kdialog.h>' > functionselectionbase.cpp
	echo '#include <klocale.h>' >> functionselectionbase.cpp
	$(UIC) -tr ${UIC_TR} -i functionselectionbase.h $(srcdir)/functionselectionbase.ui > functionselectionbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" functionselectionbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_functionselectionbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> functionselectionbase.cpp ;\
	rm -f functionselectionbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "functionselectionbase.moc"' >> functionselectionbase.cpp; else rm -f functionselectionbase.cpp ; exit $$ret ; fi

functionselectionbase.h: $(srcdir)/functionselectionbase.ui
	rm -rf functionselectionbase.h;
	$(UIC) $(srcdir)/functionselectionbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> functionselectionbase.h ;
functionselectionbase.moc: functionselectionbase.h
	$(MOC) functionselectionbase.h -o functionselectionbase.moc
