# Makefile.in generated by automake 1.10 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = kile$(EXEEXT)
subdir = src/kile
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(kde_kcfgdir)" \
	"$(DESTDIR)$(rcdir)" "$(DESTDIR)$(xdg_appsdir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_kile_OBJECTS = latexcmd.$(OBJEXT) latexcmddialog.$(OBJEXT) \
	texdocdialog.$(OBJEXT) userhelp.$(OBJEXT) \
	userhelpdialog.$(OBJEXT) floatdialog.$(OBJEXT) \
	mathenvdialog.$(OBJEXT) tabulardialog.$(OBJEXT) \
	postscriptdialog.$(OBJEXT) previewconfigwidget.$(OBJEXT) \
	quickpreview.$(OBJEXT) includegraphicsdialog.$(OBJEXT) \
	newfilewizard.$(OBJEXT) managetemplatesdialog.$(OBJEXT) \
	templates.$(OBJEXT) usermenudialog.$(OBJEXT) \
	kileconfigdialog.$(OBJEXT) tabbingdialog.$(OBJEXT) \
	symbolview.$(OBJEXT) quickdocumentdialog.$(OBJEXT) \
	kilefileselect.$(OBJEXT) kileapplication.$(OBJEXT) \
	docpart.$(OBJEXT) kile.$(OBJEXT) main.$(OBJEXT) \
	kileactions.$(OBJEXT) kilestdactions.$(OBJEXT) \
	kileinfo.$(OBJEXT) kiledocumentinfo.$(OBJEXT) \
	kileproject.$(OBJEXT) kileprojectdlgs.$(OBJEXT) \
	kileprojectview.$(OBJEXT) kilelistselector.$(OBJEXT) \
	kilelyxserver.$(OBJEXT) latexoutputfilter.$(OBJEXT) \
	outputinfo.$(OBJEXT) latexoutputinfo.$(OBJEXT) \
	outputfilter.$(OBJEXT) kilegrepdialog.$(OBJEXT) \
	kiletool.$(OBJEXT) kilelauncher.$(OBJEXT) \
	kiletoolmanager.$(OBJEXT) kilestdtools.$(OBJEXT) \
	kilelogwidget.$(OBJEXT) kileoutputwidget.$(OBJEXT) \
	kilekonsolewidget.$(OBJEXT) kilewizard.$(OBJEXT) \
	kilestructurewidget.$(OBJEXT) codecompletion.$(OBJEXT) \
	configcodecompletion.$(OBJEXT) kiletoolconfigwidget.$(OBJEXT) \
	kileedit.$(OBJEXT) cleandialog.$(OBJEXT) kilehelp.$(OBJEXT) \
	configstructure.$(OBJEXT) convert.$(OBJEXT) \
	kiledocmanager.$(OBJEXT) kileviewmanager.$(OBJEXT) \
	kileeventfilter.$(OBJEXT) kileerrorhandler.$(OBJEXT) \
	configcheckerdlg.$(OBJEXT) configtester.$(OBJEXT) \
	kilesidebar.$(OBJEXT) plaintolatexconverter.$(OBJEXT) \
	kileuntitled.$(OBJEXT) kilestatsdlg.$(OBJEXT) \
	kilestatswidget.$(OBJEXT) previewwidget.$(OBJEXT) \
	kilejscript.$(OBJEXT) scriptsmanagementwidget.$(OBJEXT) \
	editorkeysequencemanager.$(OBJEXT) kileabbrevview.$(OBJEXT) \
	kileextensions.$(OBJEXT) kileversion.$(OBJEXT) \
	kilemultitabbar.$(OBJEXT)
#>- kile_OBJECTS = $(am_kile_OBJECTS)
#>+ 40
kile_final_OBJECTS = kile.all_cpp.o 
kile_nofinal_OBJECTS = latexcmd.$(OBJEXT) latexcmddialog.$(OBJEXT) \
	texdocdialog.$(OBJEXT) userhelp.$(OBJEXT) \
	userhelpdialog.$(OBJEXT) floatdialog.$(OBJEXT) \
	mathenvdialog.$(OBJEXT) tabulardialog.$(OBJEXT) \
	postscriptdialog.$(OBJEXT) previewconfigwidget.$(OBJEXT) \
	quickpreview.$(OBJEXT) includegraphicsdialog.$(OBJEXT) \
	newfilewizard.$(OBJEXT) managetemplatesdialog.$(OBJEXT) \
	templates.$(OBJEXT) usermenudialog.$(OBJEXT) \
	kileconfigdialog.$(OBJEXT) tabbingdialog.$(OBJEXT) \
	symbolview.$(OBJEXT) quickdocumentdialog.$(OBJEXT) \
	kilefileselect.$(OBJEXT) kileapplication.$(OBJEXT) \
	docpart.$(OBJEXT) kile.$(OBJEXT) main.$(OBJEXT) \
	kileactions.$(OBJEXT) kilestdactions.$(OBJEXT) \
	kileinfo.$(OBJEXT) kiledocumentinfo.$(OBJEXT) \
	kileproject.$(OBJEXT) kileprojectdlgs.$(OBJEXT) \
	kileprojectview.$(OBJEXT) kilelistselector.$(OBJEXT) \
	kilelyxserver.$(OBJEXT) latexoutputfilter.$(OBJEXT) \
	outputinfo.$(OBJEXT) latexoutputinfo.$(OBJEXT) \
	outputfilter.$(OBJEXT) kilegrepdialog.$(OBJEXT) \
	kiletool.$(OBJEXT) kilelauncher.$(OBJEXT) \
	kiletoolmanager.$(OBJEXT) kilestdtools.$(OBJEXT) \
	kilelogwidget.$(OBJEXT) kileoutputwidget.$(OBJEXT) \
	kilekonsolewidget.$(OBJEXT) kilewizard.$(OBJEXT) \
	kilestructurewidget.$(OBJEXT) codecompletion.$(OBJEXT) \
	configcodecompletion.$(OBJEXT) kiletoolconfigwidget.$(OBJEXT) \
	kileedit.$(OBJEXT) cleandialog.$(OBJEXT) kilehelp.$(OBJEXT) \
	configstructure.$(OBJEXT) convert.$(OBJEXT) \
	kiledocmanager.$(OBJEXT) kileviewmanager.$(OBJEXT) \
	kileeventfilter.$(OBJEXT) kileerrorhandler.$(OBJEXT) \
	configcheckerdlg.$(OBJEXT) configtester.$(OBJEXT) \
	kilesidebar.$(OBJEXT) plaintolatexconverter.$(OBJEXT) \
	kileuntitled.$(OBJEXT) kilestatsdlg.$(OBJEXT) \
	kilestatswidget.$(OBJEXT) previewwidget.$(OBJEXT) \
	kilejscript.$(OBJEXT) scriptsmanagementwidget.$(OBJEXT) \
	editorkeysequencemanager.$(OBJEXT) kileabbrevview.$(OBJEXT) \
	kileextensions.$(OBJEXT) kileversion.$(OBJEXT) \
	kilemultitabbar.$(OBJEXT) kileappIface_skel.$(OBJEXT) helpconfigwidget.$(OBJEXT) latexconfigwidget.$(OBJEXT) generalconfigwidget.$(OBJEXT) configcheckerwidget.$(OBJEXT) toolconfigwidget.$(OBJEXT) librarytoolconfigwidget.$(OBJEXT) processtoolconfigwidget.$(OBJEXT) quicktoolconfigwidget.$(OBJEXT) latextoolconfigwidget.$(OBJEXT) newtoolwizard.$(OBJEXT) envconfigwidget.$(OBJEXT) structureconfigwidget.$(OBJEXT) scriptingconfigwidget.$(OBJEXT) graphicsconfigwidget.$(OBJEXT) newdocumentwidget.$(OBJEXT) symbolviewconfig.$(OBJEXT) kileconfig.$(OBJEXT)
@KDE_USE_FINAL_FALSE@kile_OBJECTS = $(kile_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@kile_OBJECTS = $(kile_final_OBJECTS)
am__DEPENDENCIES_1 =
kile_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
#>- kile_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(kile_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
kile_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(kile_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(kile_SOURCES)
DIST_SOURCES = $(kile_SOURCES)
#>- RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
#>- 	html-recursive info-recursive install-data-recursive \
#>- 	install-dvi-recursive install-exec-recursive \
#>- 	install-html-recursive install-info-recursive \
#>- 	install-pdf-recursive install-ps-recursive install-recursive \
#>- 	installcheck-recursive installdirs-recursive pdf-recursive \
#>- 	ps-recursive uninstall-recursive
#>+ 7
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive nmcheck-recursive bcheck-recursive
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
kde_kcfgDATA_INSTALL = $(INSTALL_DATA)
rcDATA_INSTALL = $(INSTALL_DATA)
xdg_appsDATA_INSTALL = $(INSTALL_DATA)
DATA = $(kde_kcfg_DATA) $(rc_DATA) $(xdg_apps_DATA)
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_ARTS = @LIB_ARTS@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@
#>- kile_SOURCES = latexcmd.cpp latexcmddialog.cpp texdocdialog.cpp userhelp.cpp \
#>- 	userhelpdialog.cpp floatdialog.cpp mathenvdialog.cpp tabulardialog.cpp \
#>- 	postscriptdialog.cpp previewconfigwidget.cpp quickpreview.cpp includegraphicsdialog.cpp \
#>- 	newfilewizard.cpp managetemplatesdialog.cpp templates.cpp usermenudialog.cpp \
#>- 	kileconfigdialog.cpp tabbingdialog.cpp symbolview.cpp quickdocumentdialog.cpp \
#>- 	kilefileselect.cpp kileapplication.cpp docpart.cpp kile.cpp main.cpp kileactions.cpp \
#>- 	kilestdactions.cpp kileinfo.cpp kiledocumentinfo.cpp kileproject.cpp kileprojectdlgs.cpp \
#>- 	kileprojectview.cpp kilelistselector.cpp kilelyxserver.cpp latexoutputfilter.cpp \
#>- 	outputinfo.cpp latexoutputinfo.cpp outputfilter.cpp kilegrepdialog.cpp kiletool.cpp \
#>- 	kilelauncher.cpp kiletoolmanager.cpp kilestdtools.cpp kilelogwidget.cpp \
#>- 	kileoutputwidget.cpp kilekonsolewidget.cpp kilewizard.cpp kilestructurewidget.cpp \
#>- 	codecompletion.cpp configcodecompletion.cpp kiletoolconfigwidget.cpp kileedit.cpp \
#>- 	cleandialog.cpp kilehelp.cpp configstructure.cpp kileappIface.skel convert.cpp \
#>- 	helpconfigwidget.ui kiledocmanager.cpp kileviewmanager.cpp kileeventfilter.cpp \
#>- 	latexconfigwidget.ui kileconfig.kcfgc generalconfigwidget.ui kileerrorhandler.cpp \
#>- 	configcheckerdlg.cpp configcheckerwidget.ui configtester.cpp kilesidebar.cpp \
#>- 	toolconfigwidget.ui librarytoolconfigwidget.ui processtoolconfigwidget.ui \
#>- 	quicktoolconfigwidget.ui plaintolatexconverter.cpp latextoolconfigwidget.ui newtoolwizard.ui \
#>- 	kileuntitled.cpp kilestatsdlg.cpp kilestatswidget.cpp envconfigwidget.ui \
#>- 	structureconfigwidget.ui previewwidget.cpp kilejscript.h kilejscript.cpp \
#>- 	scriptsmanagementwidget.h scriptsmanagementwidget.cpp editorkeysequencemanager.h \
#>- 	editorkeysequencemanager.cpp scriptingconfigwidget.ui kileabbrevview.cpp kileextensions.cpp \
#>- 	kileversion.cpp graphicsconfigwidget.ui kilemultitabbar.cpp newdocumentwidget.ui\
#>- 	symbolviewconfig.ui
#>+ 24
kile_SOURCES=latexcmd.cpp latexcmddialog.cpp texdocdialog.cpp userhelp.cpp \
	userhelpdialog.cpp floatdialog.cpp mathenvdialog.cpp tabulardialog.cpp \
	postscriptdialog.cpp previewconfigwidget.cpp quickpreview.cpp includegraphicsdialog.cpp \
	newfilewizard.cpp managetemplatesdialog.cpp templates.cpp usermenudialog.cpp \
	kileconfigdialog.cpp tabbingdialog.cpp symbolview.cpp quickdocumentdialog.cpp \
	kilefileselect.cpp kileapplication.cpp docpart.cpp kile.cpp main.cpp kileactions.cpp \
	kilestdactions.cpp kileinfo.cpp kiledocumentinfo.cpp kileproject.cpp kileprojectdlgs.cpp \
	kileprojectview.cpp kilelistselector.cpp kilelyxserver.cpp latexoutputfilter.cpp \
	outputinfo.cpp latexoutputinfo.cpp outputfilter.cpp kilegrepdialog.cpp kiletool.cpp \
	kilelauncher.cpp kiletoolmanager.cpp kilestdtools.cpp kilelogwidget.cpp \
	kileoutputwidget.cpp kilekonsolewidget.cpp kilewizard.cpp kilestructurewidget.cpp \
	codecompletion.cpp configcodecompletion.cpp kiletoolconfigwidget.cpp kileedit.cpp \
	cleandialog.cpp kilehelp.cpp configstructure.cpp  convert.cpp \
	 kiledocmanager.cpp kileviewmanager.cpp kileeventfilter.cpp \
	   kileerrorhandler.cpp \
	configcheckerdlg.cpp  configtester.cpp kilesidebar.cpp \
	   \
	 plaintolatexconverter.cpp   \
	kileuntitled.cpp kilestatsdlg.cpp kilestatswidget.cpp  \
	 previewwidget.cpp kilejscript.h kilejscript.cpp \
	scriptsmanagementwidget.h scriptsmanagementwidget.cpp editorkeysequencemanager.h \
	editorkeysequencemanager.cpp  kileabbrevview.cpp kileextensions.cpp \
	kileversion.cpp  kilemultitabbar.cpp \
	 kileappIface_skel.cpp helpconfigwidget.cpp latexconfigwidget.cpp generalconfigwidget.cpp configcheckerwidget.cpp toolconfigwidget.cpp librarytoolconfigwidget.cpp processtoolconfigwidget.cpp quicktoolconfigwidget.cpp latextoolconfigwidget.cpp newtoolwizard.cpp envconfigwidget.cpp structureconfigwidget.cpp scriptingconfigwidget.cpp graphicsconfigwidget.cpp newdocumentwidget.cpp symbolviewconfig.cpp kileconfig.cpp

kile_LDADD = -lkjs -lkdeprint -lktexteditor -lkatepartinterfaces $(LIB_KSPELL) $(LIB_KHTML) 
SUBDIRS = icons pics symbols templates syntax complete help encodings test
EXTRA_DIST = main.cpp kile.cpp kile.h \
	docpart.cpp docpart.h kileappIface.h kileapplication.cpp kileapplication.h kile.desktop kilefileselect.cpp 	kilefileselect.h kileui.rc docpartui.rc kmultiverttabbar.cpp kmultiverttabbar.h letterdialog.cpp letterdialog.h quickdocumentdialog.cpp quickdocumentdialog.h symbolview.cpp symbolview.h tabbingdialog.cpp tabbingdialog.h \
	kileconfigdialog.cpp kileconfigdialog.h usermenudialog.cpp \
	usermenudialog.h kileabbrevview.cpp kileabbrevview.h \
	newfilewizard.cpp newfilewizard.h templates.cpp templates.h managetemplatesdialog.cpp \
	managetemplatesdialog.h kileinfo.h kileinfo.cpp kilestdactions.cpp \
	kilestdactions.h kileproject.h kileproject.cpp kileprojectdlgs.cpp \
	kileprojectdlgs.h kileprojectview.cpp kileprojectview.h \
	kilelistselector.cpp kilelistselector.h kilelyxserver.cpp kilelyxserver.h \
	latexoutputfilter.cpp outputinfo.cpp latexoutputinfo.cpp \
	outputfilter.cpp latexoutputfilter.h outputinfo.h latexoutputinfo.h \
	includegraphicsdialog.h includegraphicsdialog.cpp kiletoolconfigwidget.cpp kiletoolconfigwidget.h outputfilter.h kilegrepdialog.cpp kilegrepdialog.h codecompletion.h codecompletion.cpp configcodecompletion.cpp configcodecompletion.h kileedit.cpp cleandialog.cpp kileedit.h cleandialog.h  kilehelp.cpp kilehelp.h configstructure.cpp configstructure.h configenvironment.h convert.h convert.cpp \
	kileconstants.h kilejscript.h kilejscript.cpp scriptsmanagementwidget.h scriptsmanagementwidget.cpp editorkeysequencemanager.h editorkeysequencemanager.cpp kilemultitabbar.cpp kilemultitabbar.h  kilemultitabbar_p.h

xdg_apps_DATA = kile.desktop
kde_kcfg_DATA = kile.kcfg
KDE_ICON = AUTO

####### kdevelop will overwrite this part!!! (end)############
# These paths are KDE specific. Use them:
# kde_appsdir         Where your application's menu entry (.desktop) should go to.
# kde_icondir         Where your icon should go to - better use KDE_ICON.
# kde_sounddir        Where your sounds should go to.
# kde_htmldir         Where your docs should go to. (contains lang subdirs)
# kde_datadir         Where you install application data. (Use a subdir)
# kde_locale          Where translation files should go to. (contains lang subdirs)
# kde_cgidir          Where cgi-bin executables should go to.
# kde_confdir         Where config files should go to (system-wide ones with default values).
# kde_mimedir         Where mimetypes .desktop files should go to.
# kde_servicesdir     Where services .desktop files should go to.
# kde_servicetypesdir Where servicetypes .desktop files should go to.
# kde_toolbardir      Where general toolbar icons should go to (deprecated, use KDE_ICON).
# kde_wallpaperdir    Where general wallpapers should go to.
# kde_templatesdir    Where templates for the "New" menu (Konqueror/KDesktop) should go to.
# kde_bindir          Where executables should go to. Use bin_PROGRAMS or bin_SCRIPTS.
# kde_libdir          Where shared libraries should go to. Use lib_LTLIBRARIES.
# kde_moduledir       Where modules (e.g. parts) should go to. Use kde_module_LTLIBRARIES.
# kde_styledir        Where Qt/KDE widget styles should go to (new in KDE 3).
# kde_designerdir     Where Qt Designer plugins should go to (new in KDE 3).

# set the include path for X, qt and KDE
INCLUDES = $(all_includes)
#>- METASOURCES = AUTO

# the library search path.
kile_LDFLAGS = $(all_libraries) $(KDE_RPATH)
rcdir = $(kde_datadir)/kile
rc_DATA = kileui.rc docpartui.rc kilestdtools.rc tips
syntaxdir = $(kde_appsdir)/katepart/syntax
noinst_HEADERS = kilestatsdlg.h configcheckerdlg.h configtester.h convert.h \
	envconfigwidget.h kileconstants.h kiledebug.h kiledocmanager.h kileerrorhandler.h \
	kileeventfilter.h kilekonsolewidget.h kilelauncher.h kilelogwidget.h kilemultitabbar.h \
	kilemultitabbar_p.h kileoutputwidget.h kilesidebar.h kilestatswidget.h kilestdtools.h \
	kilestructurewidget.h kiletool.h kiletool_enums.h kiletoolmanager.h kileuntitled.h \
	kileversion.h kileviewmanager.h kilewizard.h latexconfigwidget.h \
	plaintolatexconverter.h structureconfigwidget.h

CREATE_HASH_TABLE = $(srcdir)/create_hash_table
LUT_FILES = kilejscript.lut.h
CLEANFILES = $(LUT_FILES)
#>- all: all-recursive
#>+ 1
all: docs-am  all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/kile/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  src/kile/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/kile/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/kile/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/kile/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
kile$(EXEEXT): $(kile_OBJECTS) $(kile_DEPENDENCIES) 
	@rm -f kile$(EXEEXT)
	$(kile_LINK) $(kile_OBJECTS) $(kile_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cleandialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/codecompletion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/configcheckerdlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/configcodecompletion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/configstructure.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/configtester.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/convert.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/docpart.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/editorkeysequencemanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/floatdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/includegraphicsdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kileabbrevview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kileactions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kileapplication.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kileconfigdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kiledocmanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kiledocumentinfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kileedit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kileerrorhandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kileeventfilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kileextensions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kilefileselect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kilegrepdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kilehelp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kileinfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kilejscript.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kilekonsolewidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kilelauncher.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kilelistselector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kilelogwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kilelyxserver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kilemultitabbar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kileoutputwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kileproject.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kileprojectdlgs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kileprojectview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kilesidebar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kilestatsdlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kilestatswidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kilestdactions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kilestdtools.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kilestructurewidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kiletool.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kiletoolconfigwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kiletoolmanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kileuntitled.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kileversion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kileviewmanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kilewizard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/latexcmd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/latexcmddialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/latexoutputfilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/latexoutputinfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/managetemplatesdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mathenvdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/newfilewizard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/outputfilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/outputinfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/plaintolatexconverter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/postscriptdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/previewconfigwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/previewwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quickdocumentdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quickpreview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scriptsmanagementwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/symbolview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tabbingdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tabulardialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/templates.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/texdocdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/userhelp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/userhelpdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/usermenudialog.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-kde_kcfgDATA: $(kde_kcfg_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(kde_kcfgdir)" || $(MKDIR_P) "$(DESTDIR)$(kde_kcfgdir)"
	@list='$(kde_kcfg_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(kde_kcfgDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(kde_kcfgdir)/$$f'"; \
	  $(kde_kcfgDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(kde_kcfgdir)/$$f"; \
	done

uninstall-kde_kcfgDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(kde_kcfg_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(kde_kcfgdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(kde_kcfgdir)/$$f"; \
	done
install-rcDATA: $(rc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(rcdir)" || $(MKDIR_P) "$(DESTDIR)$(rcdir)"
	@list='$(rc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(rcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(rcdir)/$$f'"; \
	  $(rcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(rcdir)/$$f"; \
	done

uninstall-rcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(rc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(rcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(rcdir)/$$f"; \
	done
install-xdg_appsDATA: $(xdg_apps_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xdg_appsdir)" || $(MKDIR_P) "$(DESTDIR)$(xdg_appsdir)"
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(xdg_appsDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  $(xdg_appsDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

uninstall-xdg_appsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(kde_kcfgdir)" "$(DESTDIR)$(rcdir)" "$(DESTDIR)$(xdg_appsdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-idl clean-ui clean-kcfg clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-kde_kcfgDATA install-rcDATA \
	install-xdg_appsDATA

install-dvi: install-dvi-recursive

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-kde_kcfgDATA \
	uninstall-rcDATA uninstall-xdg_appsDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-kde_kcfgDATA install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-rcDATA \
	install-strip install-xdg_appsDATA installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-kde_kcfgDATA uninstall-rcDATA \
	uninstall-xdg_appsDATA


messages: rc.cpp
	$(PREPARETIPS) > tips.cpp
	LIST=`find . -name \*.h -o -name \*.hh -o -name \*.H -o -name \*.hxx -o -name \*.hpp -o -name \*.cpp -o -name \*.cc -o -name \*.cxx -o -name \*.ecpp -o -name \*.C`; \
	if test -n "$$LIST"; then \
	 $(XGETTEXT) $$LIST -o $(podir)/kile.pot; \
	fi
	rm -f tips.cpp

kilejscript.lut.h : $(srcdir)/kilejscript.cpp $(CREATE_HASH_TABLE)
	$(PERL) $(CREATE_HASH_TABLE) $(srcdir)/kilejscript.cpp > $@
#>- kilejscript.lo: kilejscript.lut.h
#>+ 1
kilejscript.lo: kilejscript.moc  kilejscript.lut.h

#>- kilejscript.o: kilejscript.lut.h
#>+ 1
kilejscript.o: kilejscript.moc  kilejscript.lut.h
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 5
kileappIface.kidl: $(srcdir)/kileappIface.h $(DCOP_DEPENDENCIES)
	$(DCOPIDL) $(srcdir)/kileappIface.h > kileappIface.kidl || ( rm -f kileappIface.kidl ; false )
kileappIface_skel.cpp: kileappIface.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-stub kileappIface.kidl

#>+ 3
kileabbrevview.moc: $(srcdir)/kileabbrevview.h
	$(MOC) $(srcdir)/kileabbrevview.h -o kileabbrevview.moc

#>+ 2
mocs: kileabbrevview.moc

#>+ 3
configcheckerdlg.moc: $(srcdir)/configcheckerdlg.h
	$(MOC) $(srcdir)/configcheckerdlg.h -o configcheckerdlg.moc

#>+ 2
mocs: configcheckerdlg.moc

#>+ 3
kilefileselect.moc: $(srcdir)/kilefileselect.h
	$(MOC) $(srcdir)/kilefileselect.h -o kilefileselect.moc

#>+ 2
mocs: kilefileselect.moc

#>+ 3
kilelogwidget.moc: $(srcdir)/kilelogwidget.h
	$(MOC) $(srcdir)/kilelogwidget.h -o kilelogwidget.moc

#>+ 2
mocs: kilelogwidget.moc

#>+ 3
kileproject.moc: $(srcdir)/kileproject.h
	$(MOC) $(srcdir)/kileproject.h -o kileproject.moc

#>+ 2
mocs: kileproject.moc

#>+ 3
userhelpdialog.moc: $(srcdir)/userhelpdialog.h
	$(MOC) $(srcdir)/userhelpdialog.h -o userhelpdialog.moc

#>+ 2
mocs: userhelpdialog.moc

#>+ 3
editorkeysequencemanager.moc: $(srcdir)/editorkeysequencemanager.h
	$(MOC) $(srcdir)/editorkeysequencemanager.h -o editorkeysequencemanager.moc

#>+ 2
mocs: editorkeysequencemanager.moc

#>+ 3
codecompletion.moc: $(srcdir)/codecompletion.h
	$(MOC) $(srcdir)/codecompletion.h -o codecompletion.moc

#>+ 2
mocs: codecompletion.moc

#>+ 3
kilekonsolewidget.moc: $(srcdir)/kilekonsolewidget.h
	$(MOC) $(srcdir)/kilekonsolewidget.h -o kilekonsolewidget.moc

#>+ 2
mocs: kilekonsolewidget.moc

#>+ 3
kiletoolmanager.moc: $(srcdir)/kiletoolmanager.h
	$(MOC) $(srcdir)/kiletoolmanager.h -o kiletoolmanager.moc

#>+ 2
mocs: kiletoolmanager.moc

#>+ 3
quickpreview.moc: $(srcdir)/quickpreview.h
	$(MOC) $(srcdir)/quickpreview.h -o quickpreview.moc

#>+ 2
mocs: quickpreview.moc

#>+ 3
newfilewizard.moc: $(srcdir)/newfilewizard.h
	$(MOC) $(srcdir)/newfilewizard.h -o newfilewizard.moc

#>+ 2
mocs: newfilewizard.moc

#>+ 3
configcodecompletion.moc: $(srcdir)/configcodecompletion.h
	$(MOC) $(srcdir)/configcodecompletion.h -o configcodecompletion.moc

#>+ 2
mocs: configcodecompletion.moc

#>+ 3
kile.moc: $(srcdir)/kile.h
	$(MOC) $(srcdir)/kile.h -o kile.moc

#>+ 2
mocs: kile.moc

#>+ 3
kiletool.moc: $(srcdir)/kiletool.h
	$(MOC) $(srcdir)/kiletool.h -o kiletool.moc

#>+ 2
mocs: kiletool.moc

#>+ 3
tabulardialog.moc: $(srcdir)/tabulardialog.h
	$(MOC) $(srcdir)/tabulardialog.h -o tabulardialog.moc

#>+ 2
mocs: tabulardialog.moc

#>+ 3
kilemultitabbar.moc: $(srcdir)/kilemultitabbar.h
	$(MOC) $(srcdir)/kilemultitabbar.h -o kilemultitabbar.moc

#>+ 2
mocs: kilemultitabbar.moc

#>+ 3
previewwidget.moc: $(srcdir)/previewwidget.h
	$(MOC) $(srcdir)/previewwidget.h -o previewwidget.moc

#>+ 2
mocs: previewwidget.moc

#>+ 3
kileedit.moc: $(srcdir)/kileedit.h
	$(MOC) $(srcdir)/kileedit.h -o kileedit.moc

#>+ 2
mocs: kileedit.moc

#>+ 3
latexcmd.moc: $(srcdir)/latexcmd.h
	$(MOC) $(srcdir)/latexcmd.h -o latexcmd.moc

#>+ 2
mocs: latexcmd.moc

#>+ 3
kilelyxserver.moc: $(srcdir)/kilelyxserver.h
	$(MOC) $(srcdir)/kilelyxserver.h -o kilelyxserver.moc

#>+ 2
mocs: kilelyxserver.moc

#>+ 3
kiledocmanager.moc: $(srcdir)/kiledocmanager.h
	$(MOC) $(srcdir)/kiledocmanager.h -o kiledocmanager.moc

#>+ 2
mocs: kiledocmanager.moc

#>+ 3
mathenvdialog.moc: $(srcdir)/mathenvdialog.h
	$(MOC) $(srcdir)/mathenvdialog.h -o mathenvdialog.moc

#>+ 2
mocs: mathenvdialog.moc

#>+ 3
usermenudialog.moc: $(srcdir)/usermenudialog.h
	$(MOC) $(srcdir)/usermenudialog.h -o usermenudialog.moc

#>+ 2
mocs: usermenudialog.moc

#>+ 3
kileactions.moc: $(srcdir)/kileactions.h
	$(MOC) $(srcdir)/kileactions.h -o kileactions.moc

#>+ 2
mocs: kileactions.moc

#>+ 3
kilehelp.moc: $(srcdir)/kilehelp.h
	$(MOC) $(srcdir)/kilehelp.h -o kilehelp.moc

#>+ 2
mocs: kilehelp.moc

#>+ 3
kileviewmanager.moc: $(srcdir)/kileviewmanager.h
	$(MOC) $(srcdir)/kileviewmanager.h -o kileviewmanager.moc

#>+ 2
mocs: kileviewmanager.moc

#>+ 3
kilestructurewidget.moc: $(srcdir)/kilestructurewidget.h
	$(MOC) $(srcdir)/kilestructurewidget.h -o kilestructurewidget.moc

#>+ 2
mocs: kilestructurewidget.moc

#>+ 3
kileprojectview.moc: $(srcdir)/kileprojectview.h
	$(MOC) $(srcdir)/kileprojectview.h -o kileprojectview.moc

#>+ 2
mocs: kileprojectview.moc

#>+ 3
kileprojectdlgs.moc: $(srcdir)/kileprojectdlgs.h
	$(MOC) $(srcdir)/kileprojectdlgs.h -o kileprojectdlgs.moc

#>+ 2
mocs: kileprojectdlgs.moc

#>+ 3
includegraphicsdialog.moc: $(srcdir)/includegraphicsdialog.h
	$(MOC) $(srcdir)/includegraphicsdialog.h -o includegraphicsdialog.moc

#>+ 2
mocs: includegraphicsdialog.moc

#>+ 3
postscriptdialog.moc: $(srcdir)/postscriptdialog.h
	$(MOC) $(srcdir)/postscriptdialog.h -o postscriptdialog.moc

#>+ 2
mocs: postscriptdialog.moc

#>+ 3
tabbingdialog.moc: $(srcdir)/tabbingdialog.h
	$(MOC) $(srcdir)/tabbingdialog.h -o tabbingdialog.moc

#>+ 2
mocs: tabbingdialog.moc

#>+ 3
templates.moc: $(srcdir)/templates.h
	$(MOC) $(srcdir)/templates.h -o templates.moc

#>+ 2
mocs: templates.moc

#>+ 3
userhelp.moc: $(srcdir)/userhelp.h
	$(MOC) $(srcdir)/userhelp.h -o userhelp.moc

#>+ 2
mocs: userhelp.moc

#>+ 3
configtester.moc: $(srcdir)/configtester.h
	$(MOC) $(srcdir)/configtester.h -o configtester.moc

#>+ 2
mocs: configtester.moc

#>+ 3
cleandialog.moc: $(srcdir)/cleandialog.h
	$(MOC) $(srcdir)/cleandialog.h -o cleandialog.moc

#>+ 2
mocs: cleandialog.moc

#>+ 3
docpart.moc: $(srcdir)/docpart.h
	$(MOC) $(srcdir)/docpart.h -o docpart.moc

#>+ 2
mocs: docpart.moc

#>+ 3
configstructure.moc: $(srcdir)/configstructure.h
	$(MOC) $(srcdir)/configstructure.h -o configstructure.moc

#>+ 2
mocs: configstructure.moc

#>+ 3
outputfilter.moc: $(srcdir)/outputfilter.h
	$(MOC) $(srcdir)/outputfilter.h -o outputfilter.moc

#>+ 2
mocs: outputfilter.moc

#>+ 3
kiletoolconfigwidget.moc: $(srcdir)/kiletoolconfigwidget.h
	$(MOC) $(srcdir)/kiletoolconfigwidget.h -o kiletoolconfigwidget.moc

#>+ 2
mocs: kiletoolconfigwidget.moc

#>+ 3
kileeventfilter.moc: $(srcdir)/kileeventfilter.h
	$(MOC) $(srcdir)/kileeventfilter.h -o kileeventfilter.moc

#>+ 2
mocs: kileeventfilter.moc

#>+ 3
previewconfigwidget.moc: $(srcdir)/previewconfigwidget.h
	$(MOC) $(srcdir)/previewconfigwidget.h -o previewconfigwidget.moc

#>+ 2
mocs: previewconfigwidget.moc

#>+ 3
kilestdtools.moc: $(srcdir)/kilestdtools.h
	$(MOC) $(srcdir)/kilestdtools.h -o kilestdtools.moc

#>+ 2
mocs: kilestdtools.moc

#>+ 3
floatdialog.moc: $(srcdir)/floatdialog.h
	$(MOC) $(srcdir)/floatdialog.h -o floatdialog.moc

#>+ 2
mocs: floatdialog.moc

#>+ 3
kiledocumentinfo.moc: $(srcdir)/kiledocumentinfo.h
	$(MOC) $(srcdir)/kiledocumentinfo.h -o kiledocumentinfo.moc

#>+ 2
mocs: kiledocumentinfo.moc

#>+ 3
kilelauncher.moc: $(srcdir)/kilelauncher.h
	$(MOC) $(srcdir)/kilelauncher.h -o kilelauncher.moc

#>+ 2
mocs: kilelauncher.moc

#>+ 3
kileconfigdialog.moc: $(srcdir)/kileconfigdialog.h
	$(MOC) $(srcdir)/kileconfigdialog.h -o kileconfigdialog.moc

#>+ 2
mocs: kileconfigdialog.moc

#>+ 3
kileerrorhandler.moc: $(srcdir)/kileerrorhandler.h
	$(MOC) $(srcdir)/kileerrorhandler.h -o kileerrorhandler.moc

#>+ 2
mocs: kileerrorhandler.moc

#>+ 3
kilegrepdialog.moc: $(srcdir)/kilegrepdialog.h
	$(MOC) $(srcdir)/kilegrepdialog.h -o kilegrepdialog.moc

#>+ 2
mocs: kilegrepdialog.moc

#>+ 3
kilemultitabbar_p.moc: $(srcdir)/kilemultitabbar_p.h
	$(MOC) $(srcdir)/kilemultitabbar_p.h -o kilemultitabbar_p.moc

#>+ 2
mocs: kilemultitabbar_p.moc

#>+ 3
kilesidebar.moc: $(srcdir)/kilesidebar.h
	$(MOC) $(srcdir)/kilesidebar.h -o kilesidebar.moc

#>+ 2
mocs: kilesidebar.moc

#>+ 3
texdocdialog.moc: $(srcdir)/texdocdialog.h
	$(MOC) $(srcdir)/texdocdialog.h -o texdocdialog.moc

#>+ 2
mocs: texdocdialog.moc

#>+ 3
scriptsmanagementwidget.moc: $(srcdir)/scriptsmanagementwidget.h
	$(MOC) $(srcdir)/scriptsmanagementwidget.h -o scriptsmanagementwidget.moc

#>+ 2
mocs: scriptsmanagementwidget.moc

#>+ 3
managetemplatesdialog.moc: $(srcdir)/managetemplatesdialog.h
	$(MOC) $(srcdir)/managetemplatesdialog.h -o managetemplatesdialog.moc

#>+ 2
mocs: managetemplatesdialog.moc

#>+ 3
kileoutputwidget.moc: $(srcdir)/kileoutputwidget.h
	$(MOC) $(srcdir)/kileoutputwidget.h -o kileoutputwidget.moc

#>+ 2
mocs: kileoutputwidget.moc

#>+ 3
latexcmddialog.moc: $(srcdir)/latexcmddialog.h
	$(MOC) $(srcdir)/latexcmddialog.h -o latexcmddialog.moc

#>+ 2
mocs: latexcmddialog.moc

#>+ 3
kilestatswidget.moc: $(srcdir)/kilestatswidget.h
	$(MOC) $(srcdir)/kilestatswidget.h -o kilestatswidget.moc

#>+ 2
mocs: kilestatswidget.moc

#>+ 3
quickdocumentdialog.moc: $(srcdir)/quickdocumentdialog.h
	$(MOC) $(srcdir)/quickdocumentdialog.h -o quickdocumentdialog.moc

#>+ 2
mocs: quickdocumentdialog.moc

#>+ 3
kilejscript.moc: $(srcdir)/kilejscript.h
	$(MOC) $(srcdir)/kilejscript.h -o kilejscript.moc

#>+ 2
mocs: kilejscript.moc

#>+ 3
symbolview.moc: $(srcdir)/symbolview.h
	$(MOC) $(srcdir)/symbolview.h -o symbolview.moc

#>+ 2
mocs: symbolview.moc

#>+ 3
clean-metasources:
	-rm -f  kileabbrevview.moc configcheckerdlg.moc kilefileselect.moc kilelogwidget.moc kileproject.moc userhelpdialog.moc editorkeysequencemanager.moc codecompletion.moc kilekonsolewidget.moc kiletoolmanager.moc quickpreview.moc newfilewizard.moc configcodecompletion.moc kile.moc kiletool.moc tabulardialog.moc kilemultitabbar.moc previewwidget.moc kileedit.moc latexcmd.moc kilelyxserver.moc kiledocmanager.moc mathenvdialog.moc usermenudialog.moc kileactions.moc kilehelp.moc kileviewmanager.moc kilestructurewidget.moc kileprojectview.moc kileprojectdlgs.moc includegraphicsdialog.moc postscriptdialog.moc tabbingdialog.moc templates.moc userhelp.moc configtester.moc cleandialog.moc docpart.moc configstructure.moc outputfilter.moc kiletoolconfigwidget.moc kileeventfilter.moc previewconfigwidget.moc kilestdtools.moc floatdialog.moc kiledocumentinfo.moc kilelauncher.moc kileconfigdialog.moc kileerrorhandler.moc kilegrepdialog.moc kilemultitabbar_p.moc kilesidebar.moc texdocdialog.moc scriptsmanagementwidget.moc managetemplatesdialog.moc kileoutputwidget.moc latexcmddialog.moc kilestatswidget.moc quickdocumentdialog.moc kilejscript.moc symbolview.moc

#>+ 2
KDE_DIST=kile.kcfg kileextensions.h generalconfigwidget.ui configcheckerwidget.ui.h symbolviewconfig.ui envconfigwidget.ui create_hash_table kiledocumentinfo.h tips structureconfigwidget.ui helpconfigwidget.ui.h newtoolwizard.ui.h kileactions.h quicktoolconfigwidget.ui.h Makefile.in latexcmd.h mathenvdialog.h tabulardialog.h processtoolconfigwidget.ui helpconfigwidget.ui toolconfigwidget.ui previewconfigwidget.h latextoolconfigwidget.ui userhelp.h librarytoolconfigwidget.ui newtoolwizard.ui graphicsconfigwidget.ui texdocdialog.h latexconfigwidget.ui.h configcheckerwidget.ui newdocumentwidget.ui quickpreview.h latexconfigwidget.ui userhelpdialog.h previewwidget.h kileconfig.kcfgc quicktoolconfigwidget.ui CMakeLists.txt floatdialog.h scriptingconfigwidget.ui kilestdtools.rc latexcmddialog.h postscriptdialog.h Makefile.am 

#>+ 4
clean-idl:
	-rm -f \
	kileappIface_skel.cpp kileappIface_skel.h kileappIface.kidl 

#>+ 19
clean-ui:
	-rm -f \
	helpconfigwidget.cpp helpconfigwidget.h helpconfigwidget.moc \
	latexconfigwidget.cpp latexconfigwidget.h latexconfigwidget.moc \
	generalconfigwidget.cpp generalconfigwidget.h generalconfigwidget.moc \
	configcheckerwidget.cpp configcheckerwidget.h configcheckerwidget.moc \
	toolconfigwidget.cpp toolconfigwidget.h toolconfigwidget.moc \
	librarytoolconfigwidget.cpp librarytoolconfigwidget.h librarytoolconfigwidget.moc \
	processtoolconfigwidget.cpp processtoolconfigwidget.h processtoolconfigwidget.moc \
	quicktoolconfigwidget.cpp quicktoolconfigwidget.h quicktoolconfigwidget.moc \
	latextoolconfigwidget.cpp latextoolconfigwidget.h latextoolconfigwidget.moc \
	newtoolwizard.cpp newtoolwizard.h newtoolwizard.moc \
	envconfigwidget.cpp envconfigwidget.h envconfigwidget.moc \
	structureconfigwidget.cpp structureconfigwidget.h structureconfigwidget.moc \
	scriptingconfigwidget.cpp scriptingconfigwidget.h scriptingconfigwidget.moc \
	graphicsconfigwidget.cpp graphicsconfigwidget.h graphicsconfigwidget.moc \
	newdocumentwidget.cpp newdocumentwidget.h newdocumentwidget.moc \
	symbolviewconfig.cpp symbolviewconfig.h symbolviewconfig.moc 

#>+ 4
clean-kcfg:
	-rm -f \
	kileconfig.cpp kileconfig.h 

#>+ 2
docs-am:

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/kile/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/kile/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/kile/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-recursive

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
kile.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/latexcmd.cpp $(srcdir)/latexcmddialog.cpp $(srcdir)/texdocdialog.cpp $(srcdir)/userhelp.cpp $(srcdir)/userhelpdialog.cpp $(srcdir)/floatdialog.cpp $(srcdir)/mathenvdialog.cpp $(srcdir)/tabulardialog.cpp $(srcdir)/postscriptdialog.cpp $(srcdir)/previewconfigwidget.cpp $(srcdir)/quickpreview.cpp $(srcdir)/includegraphicsdialog.cpp $(srcdir)/newfilewizard.cpp $(srcdir)/managetemplatesdialog.cpp $(srcdir)/templates.cpp $(srcdir)/usermenudialog.cpp $(srcdir)/kileconfigdialog.cpp $(srcdir)/tabbingdialog.cpp $(srcdir)/symbolview.cpp $(srcdir)/quickdocumentdialog.cpp $(srcdir)/kilefileselect.cpp $(srcdir)/kileapplication.cpp $(srcdir)/docpart.cpp $(srcdir)/kile.cpp $(srcdir)/main.cpp $(srcdir)/kileactions.cpp $(srcdir)/kilestdactions.cpp $(srcdir)/kileinfo.cpp $(srcdir)/kiledocumentinfo.cpp $(srcdir)/kileproject.cpp $(srcdir)/kileprojectdlgs.cpp $(srcdir)/kileprojectview.cpp $(srcdir)/kilelistselector.cpp $(srcdir)/kilelyxserver.cpp $(srcdir)/latexoutputfilter.cpp $(srcdir)/outputinfo.cpp $(srcdir)/latexoutputinfo.cpp $(srcdir)/outputfilter.cpp $(srcdir)/kilegrepdialog.cpp $(srcdir)/kiletool.cpp $(srcdir)/kilelauncher.cpp $(srcdir)/kiletoolmanager.cpp $(srcdir)/kilestdtools.cpp $(srcdir)/kilelogwidget.cpp $(srcdir)/kileoutputwidget.cpp $(srcdir)/kilekonsolewidget.cpp $(srcdir)/kilewizard.cpp $(srcdir)/kilestructurewidget.cpp $(srcdir)/codecompletion.cpp $(srcdir)/configcodecompletion.cpp $(srcdir)/kiletoolconfigwidget.cpp $(srcdir)/kileedit.cpp $(srcdir)/cleandialog.cpp $(srcdir)/kilehelp.cpp $(srcdir)/configstructure.cpp $(srcdir)/convert.cpp $(srcdir)/kiledocmanager.cpp $(srcdir)/kileviewmanager.cpp $(srcdir)/kileeventfilter.cpp $(srcdir)/kileerrorhandler.cpp $(srcdir)/configcheckerdlg.cpp $(srcdir)/configtester.cpp $(srcdir)/kilesidebar.cpp $(srcdir)/plaintolatexconverter.cpp $(srcdir)/kileuntitled.cpp $(srcdir)/kilestatsdlg.cpp $(srcdir)/kilestatswidget.cpp $(srcdir)/previewwidget.cpp $(srcdir)/kilejscript.cpp  kilejscript.lut.h $(srcdir)/scriptsmanagementwidget.cpp $(srcdir)/editorkeysequencemanager.cpp $(srcdir)/kileabbrevview.cpp $(srcdir)/kileextensions.cpp $(srcdir)/kileversion.cpp $(srcdir)/kilemultitabbar.cpp kileappIface_skel.cpp helpconfigwidget.cpp latexconfigwidget.cpp generalconfigwidget.cpp configcheckerwidget.cpp toolconfigwidget.cpp librarytoolconfigwidget.cpp processtoolconfigwidget.cpp quicktoolconfigwidget.cpp latextoolconfigwidget.cpp newtoolwizard.cpp envconfigwidget.cpp structureconfigwidget.cpp scriptingconfigwidget.cpp graphicsconfigwidget.cpp newdocumentwidget.cpp symbolviewconfig.cpp kileconfig.cpp  configcheckerdlg.moc kilefileselect.moc kiletoolmanager.moc quickpreview.moc newfilewizard.moc kile.moc tabulardialog.moc generalconfigwidget.moc kiledocmanager.moc latexcmd.moc mathenvdialog.moc kilehelp.moc kileviewmanager.moc latexconfigwidget.moc envconfigwidget.moc postscriptdialog.moc configcheckerwidget.moc userhelp.moc configtester.moc cleandialog.moc configstructure.moc docpart.moc outputfilter.moc kilelauncher.moc kiledocumentinfo.moc kileerrorhandler.moc kileconfigdialog.moc texdocdialog.moc quicktoolconfigwidget.moc scriptsmanagementwidget.moc latexcmddialog.moc scriptingconfigwidget.moc kilestatswidget.moc symbolview.moc kilejscript.moc kileabbrevview.moc kilelogwidget.moc kileproject.moc userhelpdialog.moc editorkeysequencemanager.moc codecompletion.moc latextoolconfigwidget.moc kilekonsolewidget.moc configcodecompletion.moc kiletool.moc kilemultitabbar.moc processtoolconfigwidget.moc librarytoolconfigwidget.moc previewwidget.moc kileedit.moc kilelyxserver.moc usermenudialog.moc kileactions.moc newtoolwizard.moc kilestructurewidget.moc kileprojectview.moc kileprojectdlgs.moc symbolviewconfig.moc newdocumentwidget.moc helpconfigwidget.moc includegraphicsdialog.moc toolconfigwidget.moc tabbingdialog.moc templates.moc kiletoolconfigwidget.moc kileeventfilter.moc previewconfigwidget.moc kilestdtools.moc floatdialog.moc kilegrepdialog.moc kilemultitabbar_p.moc kilesidebar.moc kileoutputwidget.moc managetemplatesdialog.moc graphicsconfigwidget.moc quickdocumentdialog.moc structureconfigwidget.moc
	@echo 'creating kile.all_cpp.cpp ...'; \
	rm -f kile.all_cpp.files kile.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> kile.all_cpp.final; \
	for file in latexcmd.cpp latexcmddialog.cpp texdocdialog.cpp userhelp.cpp userhelpdialog.cpp floatdialog.cpp mathenvdialog.cpp tabulardialog.cpp postscriptdialog.cpp previewconfigwidget.cpp quickpreview.cpp includegraphicsdialog.cpp newfilewizard.cpp managetemplatesdialog.cpp templates.cpp usermenudialog.cpp kileconfigdialog.cpp tabbingdialog.cpp symbolview.cpp quickdocumentdialog.cpp kilefileselect.cpp kileapplication.cpp docpart.cpp kile.cpp main.cpp kileactions.cpp kilestdactions.cpp kileinfo.cpp kiledocumentinfo.cpp kileproject.cpp kileprojectdlgs.cpp kileprojectview.cpp kilelistselector.cpp kilelyxserver.cpp latexoutputfilter.cpp outputinfo.cpp latexoutputinfo.cpp outputfilter.cpp kilegrepdialog.cpp kiletool.cpp kilelauncher.cpp kiletoolmanager.cpp kilestdtools.cpp kilelogwidget.cpp kileoutputwidget.cpp kilekonsolewidget.cpp kilewizard.cpp kilestructurewidget.cpp codecompletion.cpp configcodecompletion.cpp kiletoolconfigwidget.cpp kileedit.cpp cleandialog.cpp kilehelp.cpp configstructure.cpp convert.cpp kiledocmanager.cpp kileviewmanager.cpp kileeventfilter.cpp kileerrorhandler.cpp configcheckerdlg.cpp configtester.cpp kilesidebar.cpp plaintolatexconverter.cpp kileuntitled.cpp kilestatsdlg.cpp kilestatswidget.cpp previewwidget.cpp kilejscript.cpp scriptsmanagementwidget.cpp editorkeysequencemanager.cpp kileabbrevview.cpp kileextensions.cpp kileversion.cpp kilemultitabbar.cpp kileappIface_skel.cpp helpconfigwidget.cpp latexconfigwidget.cpp generalconfigwidget.cpp configcheckerwidget.cpp toolconfigwidget.cpp librarytoolconfigwidget.cpp processtoolconfigwidget.cpp quicktoolconfigwidget.cpp latextoolconfigwidget.cpp newtoolwizard.cpp envconfigwidget.cpp structureconfigwidget.cpp scriptingconfigwidget.cpp graphicsconfigwidget.cpp newdocumentwidget.cpp symbolviewconfig.cpp kileconfig.cpp ; do \
	  echo "#include \"$$file\"" >> kile.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> kile.all_cpp.final; \
	done; \
	cat kile.all_cpp.final kile.all_cpp.files > kile.all_cpp.cpp; \
	rm -f kile.all_cpp.final kile.all_cpp.files

#>+ 3
clean-final:
	-rm -f kile.all_cpp.cpp

#>+ 3
final:
	$(MAKE) kile_OBJECTS="$(kile_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) kile_OBJECTS="$(kile_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) kile_OBJECTS="$(kile_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) kile_OBJECTS="$(kile_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 199
tabbingdialog.lo: tabbingdialog.moc 
texdocdialog.lo: texdocdialog.moc 
mathenvdialog.lo: mathenvdialog.moc 
kilestdtools.o: kilestdtools.moc 
$(srcdir)/kileapplication.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/floatdialog.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
newfilewizard.lo: newfilewizard.moc 
$(srcdir)/newfilewizard.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/outputinfo.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
kileconfigdialog.o: kileconfigdialog.moc 
kileproject.o: kileproject.moc 
managetemplatesdialog.o: managetemplatesdialog.moc 
nmcheck-am: nmcheck
$(srcdir)/kilelistselector.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
kilelyxserver.lo: kilelyxserver.moc 
kileeventfilter.lo: kileeventfilter.moc 
$(srcdir)/codecompletion.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
kiletoolmanager.lo: kiletoolmanager.moc 
$(srcdir)/latexoutputinfo.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
floatdialog.lo: floatdialog.moc 
scriptsmanagementwidget.o: scriptsmanagementwidget.moc 
kileconfigdialog.lo: kileconfigdialog.moc 
$(srcdir)/mathenvdialog.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
latexcmddialog.o: latexcmddialog.moc 
symbolview.lo: symbolview.moc 
$(srcdir)/kileconfigdialog.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/editorkeysequencemanager.h: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/latexcmddialog.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
quickpreview.lo: quickpreview.moc 
tabulardialog.o: tabulardialog.moc 
$(srcdir)/templates.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/kileviewmanager.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
quickdocumentdialog.o: quickdocumentdialog.moc 
floatdialog.o: floatdialog.moc 
templates.lo: templates.moc 
userhelpdialog.o: userhelpdialog.moc 
$(srcdir)/plaintolatexconverter.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
kilesidebar.lo: kilesidebar.moc 
symbolview.o: symbolview.moc 
configstructure.lo: configstructure.moc 
$(srcdir)/kilehelp.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/kilefileselect.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/kilegrepdialog.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
kileabbrevview.lo: kileabbrevview.moc 
kilekonsolewidget.lo: kilekonsolewidget.moc 
$(srcdir)/includegraphicsdialog.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
tabulardialog.lo: tabulardialog.moc 
$(srcdir)/latexcmd.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
cleandialog.o: cleandialog.moc 
$(srcdir)/outputfilter.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/configtester.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
editorkeysequencemanager.lo: editorkeysequencemanager.moc 
kilemultitabbar.o: kilemultitabbar.moc kilemultitabbar_p.moc 
kileedit.lo: kileedit.moc 
$(srcdir)/quickpreview.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/kiletool.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
texdocdialog.o: texdocdialog.moc 
$(srcdir)/symbolview.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
quickpreview.o: quickpreview.moc 
kilegrepdialog.lo: kilegrepdialog.moc 
configtester.lo: configtester.moc 
$(srcdir)/kileeventfilter.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/kiledocumentinfo.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
kilelauncher.o: kilelauncher.moc 
kiledocmanager.lo: kiledocmanager.moc 
$(srcdir)/kileinfo.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
usermenudialog.o: usermenudialog.moc 
$(srcdir)/configcodecompletion.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
newfilewizard.o: newfilewizard.moc 
kileabbrevview.o: kileabbrevview.moc 
postscriptdialog.o: postscriptdialog.moc 
quickdocumentdialog.lo: quickdocumentdialog.moc 
kilelogwidget.lo: kilelogwidget.moc 
managetemplatesdialog.lo: managetemplatesdialog.moc 
$(srcdir)/editorkeysequencemanager.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
postscriptdialog.lo: postscriptdialog.moc 
kileprojectdlgs.lo: kileprojectdlgs.moc 
kilemultitabbar.lo: kilemultitabbar.moc kilemultitabbar_p.moc 
$(srcdir)/kilelyxserver.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
kileactions.o: kileactions.moc 
$(srcdir)/scriptsmanagementwidget.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
configstructure.o: configstructure.moc 
kileerrorhandler.o: kileerrorhandler.moc 
kileviewmanager.lo: kileviewmanager.moc 
$(srcdir)/docpart.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
kilehelp.lo: kilehelp.moc 
kileprojectview.o: kileprojectview.moc 
$(srcdir)/configcheckerdlg.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/kilekonsolewidget.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
kileerrorhandler.lo: kileerrorhandler.moc 
kilestructurewidget.lo: kilestructurewidget.moc 
kiledocumentinfo.lo: kiledocumentinfo.moc 
kiletoolmanager.o: kiletoolmanager.moc 
kilekonsolewidget.o: kilekonsolewidget.moc 
$(srcdir)/scriptsmanagementwidget.h: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
kilefileselect.o: kilefileselect.moc 
$(srcdir)/configstructure.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
configcodecompletion.lo: configcodecompletion.moc 
$(srcdir)/kile.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
kilelogwidget.o: kilelogwidget.moc 
$(srcdir)/latexoutputfilter.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
kileviewmanager.o: kileviewmanager.moc 
userhelp.o: userhelp.moc 
$(srcdir)/convert.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/kileerrorhandler.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
kilefileselect.lo: kilefileselect.moc 
kileoutputwidget.o: kileoutputwidget.moc 
$(srcdir)/kileversion.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
kilegrepdialog.o: kilegrepdialog.moc 
$(srcdir)/kileprojectdlgs.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/kileabbrevview.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/kilestdactions.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
docpart.lo: docpart.moc 
$(srcdir)/kilestatsdlg.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/kileactions.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
kilestatswidget.lo: kilestatswidget.moc 
kiletoolconfigwidget.lo: kiletoolconfigwidget.moc 
$(srcdir)/kileproject.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
outputfilter.lo: outputfilter.moc 
$(srcdir)/kilestatswidget.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/main.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
kilelyxserver.o: kilelyxserver.moc 
$(srcdir)/texdocdialog.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/postscriptdialog.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
tabbingdialog.o: tabbingdialog.moc 
latexcmddialog.lo: latexcmddialog.moc 
$(srcdir)/previewconfigwidget.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
includegraphicsdialog.o: includegraphicsdialog.moc 
kiletoolconfigwidget.o: kiletoolconfigwidget.moc 
$(srcdir)/kilelogwidget.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
kilestdtools.lo: kilestdtools.moc 
previewconfigwidget.lo: previewconfigwidget.moc 
codecompletion.o: codecompletion.moc 
$(srcdir)/kilesidebar.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/kilewizard.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
configtester.o: configtester.moc 
kilestatswidget.o: kilestatswidget.moc 
codecompletion.lo: codecompletion.moc 
$(srcdir)/tabulardialog.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
kiletool.o: kiletool.moc 
$(srcdir)/kileuntitled.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/usermenudialog.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
kileproject.lo: kileproject.moc 
cleandialog.lo: cleandialog.moc 
userhelpdialog.lo: userhelpdialog.moc 
$(srcdir)/kiletoolconfigwidget.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/kilelauncher.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
kile.lo: kile.moc 
configcodecompletion.o: configcodecompletion.moc 
kilehelp.o: kilehelp.moc 
$(srcdir)/kiletoolmanager.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
kilesidebar.o: kilesidebar.moc 
$(srcdir)/kileedit.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
usermenudialog.lo: usermenudialog.moc 
latexcmd.lo: latexcmd.moc 
kiledocumentinfo.o: kiledocumentinfo.moc 
kiletool.lo: kiletool.moc 
kiledocmanager.o: kiledocmanager.moc 
kileoutputwidget.lo: kileoutputwidget.moc 
$(srcdir)/kilejscript.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
latexcmd.o: latexcmd.moc 
$(srcdir)/quickdocumentdialog.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/tabbingdialog.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
configcheckerdlg.o: configcheckerdlg.moc 
previewconfigwidget.o: previewconfigwidget.moc 
editorkeysequencemanager.o: editorkeysequencemanager.moc 
kileprojectview.lo: kileprojectview.moc 
configcheckerdlg.lo: configcheckerdlg.moc 
kileprojectdlgs.o: kileprojectdlgs.moc 
$(srcdir)/kileextensions.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/kilestdtools.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
previewwidget.lo: previewwidget.moc 
templates.o: templates.moc 
$(srcdir)/cleandialog.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
mathenvdialog.o: mathenvdialog.moc 
kileactions.lo: kileactions.moc 
$(srcdir)/kiledocmanager.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
kilestructurewidget.o: kilestructurewidget.moc 
$(srcdir)/previewwidget.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/kileoutputwidget.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/managetemplatesdialog.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
previewwidget.o: previewwidget.moc 
outputfilter.o: outputfilter.moc 
$(srcdir)/userhelp.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/kileprojectview.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
kile.o: kile.moc 
kilelauncher.lo: kilelauncher.moc 
$(srcdir)/kilestructurewidget.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
includegraphicsdialog.lo: includegraphicsdialog.moc 
nmcheck: 
kileedit.o: kileedit.moc 
userhelp.lo: userhelp.moc 
kileeventfilter.o: kileeventfilter.moc 
$(srcdir)/userhelpdialog.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/kilejscript.h: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
$(srcdir)/kilemultitabbar.cpp: helpconfigwidget.h latexconfigwidget.h generalconfigwidget.h configcheckerwidget.h toolconfigwidget.h librarytoolconfigwidget.h processtoolconfigwidget.h quicktoolconfigwidget.h latextoolconfigwidget.h newtoolwizard.h envconfigwidget.h structureconfigwidget.h scriptingconfigwidget.h graphicsconfigwidget.h newdocumentwidget.h symbolviewconfig.h kileconfig.h 
scriptsmanagementwidget.lo: scriptsmanagementwidget.moc 
docpart.o: docpart.moc 

#>+ 246
structureconfigwidget.cpp: $(srcdir)/structureconfigwidget.ui structureconfigwidget.h structureconfigwidget.moc
	rm -f structureconfigwidget.cpp
	echo '#include <kdialog.h>' > structureconfigwidget.cpp
	echo '#include <klocale.h>' >> structureconfigwidget.cpp
	$(UIC) -tr ${UIC_TR} -i structureconfigwidget.h $(srcdir)/structureconfigwidget.ui > structureconfigwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" structureconfigwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_structureconfigwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> structureconfigwidget.cpp ;\
	rm -f structureconfigwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "structureconfigwidget.moc"' >> structureconfigwidget.cpp; else rm -f structureconfigwidget.cpp ; exit $$ret ; fi

structureconfigwidget.h: $(srcdir)/structureconfigwidget.ui
	rm -rf structureconfigwidget.h;
	$(UIC) $(srcdir)/structureconfigwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> structureconfigwidget.h ;
structureconfigwidget.moc: structureconfigwidget.h
	$(MOC) structureconfigwidget.h -o structureconfigwidget.moc

generalconfigwidget.cpp: $(srcdir)/generalconfigwidget.ui generalconfigwidget.h generalconfigwidget.moc
	rm -f generalconfigwidget.cpp
	echo '#include <kdialog.h>' > generalconfigwidget.cpp
	echo '#include <klocale.h>' >> generalconfigwidget.cpp
	$(UIC) -tr ${UIC_TR} -i generalconfigwidget.h $(srcdir)/generalconfigwidget.ui > generalconfigwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" generalconfigwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_generalconfigwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> generalconfigwidget.cpp ;\
	rm -f generalconfigwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "generalconfigwidget.moc"' >> generalconfigwidget.cpp; else rm -f generalconfigwidget.cpp ; exit $$ret ; fi

generalconfigwidget.h: $(srcdir)/generalconfigwidget.ui
	rm -rf generalconfigwidget.h;
	$(UIC) $(srcdir)/generalconfigwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> generalconfigwidget.h ;
generalconfigwidget.moc: generalconfigwidget.h
	$(MOC) generalconfigwidget.h -o generalconfigwidget.moc

envconfigwidget.cpp: $(srcdir)/envconfigwidget.ui envconfigwidget.h envconfigwidget.moc
	rm -f envconfigwidget.cpp
	echo '#include <kdialog.h>' > envconfigwidget.cpp
	echo '#include <klocale.h>' >> envconfigwidget.cpp
	$(UIC) -tr ${UIC_TR} -i envconfigwidget.h $(srcdir)/envconfigwidget.ui > envconfigwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" envconfigwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_envconfigwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> envconfigwidget.cpp ;\
	rm -f envconfigwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "envconfigwidget.moc"' >> envconfigwidget.cpp; else rm -f envconfigwidget.cpp ; exit $$ret ; fi

envconfigwidget.h: $(srcdir)/envconfigwidget.ui
	rm -rf envconfigwidget.h;
	$(UIC) $(srcdir)/envconfigwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> envconfigwidget.h ;
envconfigwidget.moc: envconfigwidget.h
	$(MOC) envconfigwidget.h -o envconfigwidget.moc

helpconfigwidget.cpp: $(srcdir)/helpconfigwidget.ui helpconfigwidget.h helpconfigwidget.moc
	rm -f helpconfigwidget.cpp
	echo '#include <kdialog.h>' > helpconfigwidget.cpp
	echo '#include <klocale.h>' >> helpconfigwidget.cpp
	$(UIC) -tr ${UIC_TR} -i helpconfigwidget.h $(srcdir)/helpconfigwidget.ui > helpconfigwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" helpconfigwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_helpconfigwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> helpconfigwidget.cpp ;\
	rm -f helpconfigwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "helpconfigwidget.moc"' >> helpconfigwidget.cpp; else rm -f helpconfigwidget.cpp ; exit $$ret ; fi

helpconfigwidget.h: $(srcdir)/helpconfigwidget.ui
	rm -rf helpconfigwidget.h;
	$(UIC) $(srcdir)/helpconfigwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> helpconfigwidget.h ;
helpconfigwidget.moc: helpconfigwidget.h
	$(MOC) helpconfigwidget.h -o helpconfigwidget.moc

configcheckerwidget.cpp: $(srcdir)/configcheckerwidget.ui configcheckerwidget.h configcheckerwidget.moc
	rm -f configcheckerwidget.cpp
	echo '#include <kdialog.h>' > configcheckerwidget.cpp
	echo '#include <klocale.h>' >> configcheckerwidget.cpp
	$(UIC) -tr ${UIC_TR} -i configcheckerwidget.h $(srcdir)/configcheckerwidget.ui > configcheckerwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" configcheckerwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_configcheckerwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> configcheckerwidget.cpp ;\
	rm -f configcheckerwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "configcheckerwidget.moc"' >> configcheckerwidget.cpp; else rm -f configcheckerwidget.cpp ; exit $$ret ; fi

configcheckerwidget.h: $(srcdir)/configcheckerwidget.ui
	rm -rf configcheckerwidget.h;
	$(UIC) $(srcdir)/configcheckerwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> configcheckerwidget.h ;
configcheckerwidget.moc: configcheckerwidget.h
	$(MOC) configcheckerwidget.h -o configcheckerwidget.moc

kileconfig.cpp: kileconfig.h
kileconfig.h: $(srcdir)/kile.kcfg $(srcdir)/kileconfig.kcfgc $(KCFG_DEPENDENCIES)
	$(KCONFIG_COMPILER) $(srcdir)/kile.kcfg $(srcdir)/kileconfig.kcfgc; ret=$$?; \
	if test "$$ret" != 0; then rm -f kileconfig.h ; exit $$ret ;  fi


newdocumentwidget.cpp: $(srcdir)/newdocumentwidget.ui newdocumentwidget.h newdocumentwidget.moc
	rm -f newdocumentwidget.cpp
	echo '#include <kdialog.h>' > newdocumentwidget.cpp
	echo '#include <klocale.h>' >> newdocumentwidget.cpp
	$(UIC) -tr ${UIC_TR} -i newdocumentwidget.h $(srcdir)/newdocumentwidget.ui > newdocumentwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" newdocumentwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_newdocumentwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> newdocumentwidget.cpp ;\
	rm -f newdocumentwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "newdocumentwidget.moc"' >> newdocumentwidget.cpp; else rm -f newdocumentwidget.cpp ; exit $$ret ; fi

newdocumentwidget.h: $(srcdir)/newdocumentwidget.ui
	rm -rf newdocumentwidget.h;
	$(UIC) $(srcdir)/newdocumentwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> newdocumentwidget.h ;
newdocumentwidget.moc: newdocumentwidget.h
	$(MOC) newdocumentwidget.h -o newdocumentwidget.moc

graphicsconfigwidget.cpp: $(srcdir)/graphicsconfigwidget.ui graphicsconfigwidget.h graphicsconfigwidget.moc
	rm -f graphicsconfigwidget.cpp
	echo '#include <kdialog.h>' > graphicsconfigwidget.cpp
	echo '#include <klocale.h>' >> graphicsconfigwidget.cpp
	$(UIC) -tr ${UIC_TR} -i graphicsconfigwidget.h $(srcdir)/graphicsconfigwidget.ui > graphicsconfigwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" graphicsconfigwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_graphicsconfigwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> graphicsconfigwidget.cpp ;\
	rm -f graphicsconfigwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "graphicsconfigwidget.moc"' >> graphicsconfigwidget.cpp; else rm -f graphicsconfigwidget.cpp ; exit $$ret ; fi

graphicsconfigwidget.h: $(srcdir)/graphicsconfigwidget.ui
	rm -rf graphicsconfigwidget.h;
	$(UIC) $(srcdir)/graphicsconfigwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> graphicsconfigwidget.h ;
graphicsconfigwidget.moc: graphicsconfigwidget.h
	$(MOC) graphicsconfigwidget.h -o graphicsconfigwidget.moc

quicktoolconfigwidget.cpp: $(srcdir)/quicktoolconfigwidget.ui quicktoolconfigwidget.h quicktoolconfigwidget.moc
	rm -f quicktoolconfigwidget.cpp
	echo '#include <kdialog.h>' > quicktoolconfigwidget.cpp
	echo '#include <klocale.h>' >> quicktoolconfigwidget.cpp
	$(UIC) -tr ${UIC_TR} -i quicktoolconfigwidget.h $(srcdir)/quicktoolconfigwidget.ui > quicktoolconfigwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" quicktoolconfigwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_quicktoolconfigwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> quicktoolconfigwidget.cpp ;\
	rm -f quicktoolconfigwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "quicktoolconfigwidget.moc"' >> quicktoolconfigwidget.cpp; else rm -f quicktoolconfigwidget.cpp ; exit $$ret ; fi

quicktoolconfigwidget.h: $(srcdir)/quicktoolconfigwidget.ui
	rm -rf quicktoolconfigwidget.h;
	$(UIC) $(srcdir)/quicktoolconfigwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> quicktoolconfigwidget.h ;
quicktoolconfigwidget.moc: quicktoolconfigwidget.h
	$(MOC) quicktoolconfigwidget.h -o quicktoolconfigwidget.moc

processtoolconfigwidget.cpp: $(srcdir)/processtoolconfigwidget.ui processtoolconfigwidget.h processtoolconfigwidget.moc
	rm -f processtoolconfigwidget.cpp
	echo '#include <kdialog.h>' > processtoolconfigwidget.cpp
	echo '#include <klocale.h>' >> processtoolconfigwidget.cpp
	$(UIC) -tr ${UIC_TR} -i processtoolconfigwidget.h $(srcdir)/processtoolconfigwidget.ui > processtoolconfigwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" processtoolconfigwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_processtoolconfigwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> processtoolconfigwidget.cpp ;\
	rm -f processtoolconfigwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "processtoolconfigwidget.moc"' >> processtoolconfigwidget.cpp; else rm -f processtoolconfigwidget.cpp ; exit $$ret ; fi

processtoolconfigwidget.h: $(srcdir)/processtoolconfigwidget.ui
	rm -rf processtoolconfigwidget.h;
	$(UIC) $(srcdir)/processtoolconfigwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> processtoolconfigwidget.h ;
processtoolconfigwidget.moc: processtoolconfigwidget.h
	$(MOC) processtoolconfigwidget.h -o processtoolconfigwidget.moc

symbolviewconfig.cpp: $(srcdir)/symbolviewconfig.ui symbolviewconfig.h symbolviewconfig.moc
	rm -f symbolviewconfig.cpp
	echo '#include <kdialog.h>' > symbolviewconfig.cpp
	echo '#include <klocale.h>' >> symbolviewconfig.cpp
	$(UIC) -tr ${UIC_TR} -i symbolviewconfig.h $(srcdir)/symbolviewconfig.ui > symbolviewconfig.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" symbolviewconfig.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_symbolviewconfig,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> symbolviewconfig.cpp ;\
	rm -f symbolviewconfig.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "symbolviewconfig.moc"' >> symbolviewconfig.cpp; else rm -f symbolviewconfig.cpp ; exit $$ret ; fi

symbolviewconfig.h: $(srcdir)/symbolviewconfig.ui
	rm -rf symbolviewconfig.h;
	$(UIC) $(srcdir)/symbolviewconfig.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> symbolviewconfig.h ;
symbolviewconfig.moc: symbolviewconfig.h
	$(MOC) symbolviewconfig.h -o symbolviewconfig.moc

latexconfigwidget.cpp: $(srcdir)/latexconfigwidget.ui latexconfigwidget.h latexconfigwidget.moc
	rm -f latexconfigwidget.cpp
	echo '#include <kdialog.h>' > latexconfigwidget.cpp
	echo '#include <klocale.h>' >> latexconfigwidget.cpp
	$(UIC) -tr ${UIC_TR} -i latexconfigwidget.h $(srcdir)/latexconfigwidget.ui > latexconfigwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" latexconfigwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_latexconfigwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> latexconfigwidget.cpp ;\
	rm -f latexconfigwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "latexconfigwidget.moc"' >> latexconfigwidget.cpp; else rm -f latexconfigwidget.cpp ; exit $$ret ; fi

latexconfigwidget.h: $(srcdir)/latexconfigwidget.ui
	rm -rf latexconfigwidget.h;
	$(UIC) $(srcdir)/latexconfigwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> latexconfigwidget.h ;
latexconfigwidget.moc: latexconfigwidget.h
	$(MOC) latexconfigwidget.h -o latexconfigwidget.moc

toolconfigwidget.cpp: $(srcdir)/toolconfigwidget.ui toolconfigwidget.h toolconfigwidget.moc
	rm -f toolconfigwidget.cpp
	echo '#include <kdialog.h>' > toolconfigwidget.cpp
	echo '#include <klocale.h>' >> toolconfigwidget.cpp
	$(UIC) -tr ${UIC_TR} -i toolconfigwidget.h $(srcdir)/toolconfigwidget.ui > toolconfigwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" toolconfigwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_toolconfigwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> toolconfigwidget.cpp ;\
	rm -f toolconfigwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "toolconfigwidget.moc"' >> toolconfigwidget.cpp; else rm -f toolconfigwidget.cpp ; exit $$ret ; fi

toolconfigwidget.h: $(srcdir)/toolconfigwidget.ui
	rm -rf toolconfigwidget.h;
	$(UIC) $(srcdir)/toolconfigwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> toolconfigwidget.h ;
toolconfigwidget.moc: toolconfigwidget.h
	$(MOC) toolconfigwidget.h -o toolconfigwidget.moc

latextoolconfigwidget.cpp: $(srcdir)/latextoolconfigwidget.ui latextoolconfigwidget.h latextoolconfigwidget.moc
	rm -f latextoolconfigwidget.cpp
	echo '#include <kdialog.h>' > latextoolconfigwidget.cpp
	echo '#include <klocale.h>' >> latextoolconfigwidget.cpp
	$(UIC) -tr ${UIC_TR} -i latextoolconfigwidget.h $(srcdir)/latextoolconfigwidget.ui > latextoolconfigwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" latextoolconfigwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_latextoolconfigwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> latextoolconfigwidget.cpp ;\
	rm -f latextoolconfigwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "latextoolconfigwidget.moc"' >> latextoolconfigwidget.cpp; else rm -f latextoolconfigwidget.cpp ; exit $$ret ; fi

latextoolconfigwidget.h: $(srcdir)/latextoolconfigwidget.ui
	rm -rf latextoolconfigwidget.h;
	$(UIC) $(srcdir)/latextoolconfigwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> latextoolconfigwidget.h ;
latextoolconfigwidget.moc: latextoolconfigwidget.h
	$(MOC) latextoolconfigwidget.h -o latextoolconfigwidget.moc

newtoolwizard.cpp: $(srcdir)/newtoolwizard.ui newtoolwizard.h newtoolwizard.moc
	rm -f newtoolwizard.cpp
	echo '#include <kdialog.h>' > newtoolwizard.cpp
	echo '#include <klocale.h>' >> newtoolwizard.cpp
	$(UIC) -tr ${UIC_TR} -i newtoolwizard.h $(srcdir)/newtoolwizard.ui > newtoolwizard.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" newtoolwizard.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_newtoolwizard,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> newtoolwizard.cpp ;\
	rm -f newtoolwizard.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "newtoolwizard.moc"' >> newtoolwizard.cpp; else rm -f newtoolwizard.cpp ; exit $$ret ; fi

newtoolwizard.h: $(srcdir)/newtoolwizard.ui
	rm -rf newtoolwizard.h;
	$(UIC) $(srcdir)/newtoolwizard.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> newtoolwizard.h ;
newtoolwizard.moc: newtoolwizard.h
	$(MOC) newtoolwizard.h -o newtoolwizard.moc

scriptingconfigwidget.cpp: $(srcdir)/scriptingconfigwidget.ui scriptingconfigwidget.h scriptingconfigwidget.moc
	rm -f scriptingconfigwidget.cpp
	echo '#include <kdialog.h>' > scriptingconfigwidget.cpp
	echo '#include <klocale.h>' >> scriptingconfigwidget.cpp
	$(UIC) -tr ${UIC_TR} -i scriptingconfigwidget.h $(srcdir)/scriptingconfigwidget.ui > scriptingconfigwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" scriptingconfigwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_scriptingconfigwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> scriptingconfigwidget.cpp ;\
	rm -f scriptingconfigwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "scriptingconfigwidget.moc"' >> scriptingconfigwidget.cpp; else rm -f scriptingconfigwidget.cpp ; exit $$ret ; fi

scriptingconfigwidget.h: $(srcdir)/scriptingconfigwidget.ui
	rm -rf scriptingconfigwidget.h;
	$(UIC) $(srcdir)/scriptingconfigwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> scriptingconfigwidget.h ;
scriptingconfigwidget.moc: scriptingconfigwidget.h
	$(MOC) scriptingconfigwidget.h -o scriptingconfigwidget.moc

librarytoolconfigwidget.cpp: $(srcdir)/librarytoolconfigwidget.ui librarytoolconfigwidget.h librarytoolconfigwidget.moc
	rm -f librarytoolconfigwidget.cpp
	echo '#include <kdialog.h>' > librarytoolconfigwidget.cpp
	echo '#include <klocale.h>' >> librarytoolconfigwidget.cpp
	$(UIC) -tr ${UIC_TR} -i librarytoolconfigwidget.h $(srcdir)/librarytoolconfigwidget.ui > librarytoolconfigwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" librarytoolconfigwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_librarytoolconfigwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> librarytoolconfigwidget.cpp ;\
	rm -f librarytoolconfigwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "librarytoolconfigwidget.moc"' >> librarytoolconfigwidget.cpp; else rm -f librarytoolconfigwidget.cpp ; exit $$ret ; fi

librarytoolconfigwidget.h: $(srcdir)/librarytoolconfigwidget.ui
	rm -rf librarytoolconfigwidget.h;
	$(UIC) $(srcdir)/librarytoolconfigwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> librarytoolconfigwidget.h ;
librarytoolconfigwidget.moc: librarytoolconfigwidget.h
	$(MOC) librarytoolconfigwidget.h -o librarytoolconfigwidget.moc
